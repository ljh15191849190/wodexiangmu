
<script type="text/javascript" src="http://api.map.baidu.com/api?v=2.0&ak=uGvNIT4Z5SthAZCFeGoBC1OGM5nwFt3T"></script>
<script>
    $(function () {
        var is_frame_search = PageCommon.Request("IsFrameSearch");
        if (is_frame_search) {
            $(".tile :button").remove();
        }
    });
</script>
@*搜索补全*@
<script type="text/x-handlebars-template" id="temsearch">
    <div class="outer search_focus" v-bind:id="'search'+v_id">
        <div v-if="Shade_Bg" class="shade_bg" v-bind:title="title"></div>
        <label v-bind:style="{color:lab_color}" class="space mb-0" v-bind:id="'Lbl_'+v_id"><span><slot></slot><strong v-if="checkempty" style="color:red">*</strong></span></label>
        <div class="input-group right-search">
            <div style="display:flex;flex:1;">
                <select class="js-basic-single js-states" v-bind:disabled="disabled" autocomplete="autocomplete" multiple="multiple" v-bind:value="value" v-bind:CheckEmpty="checkempty" v-bind:field_name="[field_name]" v-bind:query_type="[query_type]" v-bind:expression="[expression]" style="border: 0px;flex:1;" v-bind:id="v_id"></select>
            </div>
            <div v-on:click="BtnSearchClick" v-if="Search_Btn" style="display: table;word-spacing: -6px;">
                <span class="input-group-addon" v-bind:id="v_id+'Search'" v-on:click.stop="searchBtn" style="cursor: pointer;word-spacing: 0;display:inline-block;width:29px;height:28px;border-right:1px solid #d8d8d8;border-left:1px solid #d8d8d8;"><i class="fa fa-search" style="margin-right: 0;"></i></span>
                <span class="delete" style="cursor: pointer;"><i class="fa fa-times"></i></span>
            </div>
        </div>
    </div>
</script>
@* 地址选择 *@
<script type="text/x-handlebars-template" id="temaddress">
    <div class="outer-lg" v-bind:id="v_id+'_dropdown'">
        <div v-if="ishistory" v-bind:id="'history_'+v_id" v-on:click.stop="historyBtn" class="module_history_info"></div>
        <div v-if="Shade_Bg" class="shade_bg" v-bind:title="Common.Address+' '+Common.DetailAddress"></div>
        <label v-bind:style="{color:lab_color}" class="space mb-0" v-bind:id="'Lbl_'+v_id"><slot></slot><strong v-if="checkempty" style="color:red">*</strong></label>
        <div class="input-group" v-bind:style="{color:txt_color}">
            <div style="width:50%;display:flex;background:#fff;position:relative;" class="pull-left">
                <input type="text" noblur="true" v-bind:CheckEmpty="checkempty" readonly="readonly" placeholder="请选择地址" v-bind:id="v_id" v-model="Common.Address" style="flex:1;cursor: pointer;" v-bind:title="Common.Address"><span class="address_clear" v-on:click="address_clear" style="display:none;">&times;</span><span class="arrow"></span>
                <div v-if="ishistoryDetail" v-bind:id="'history_'+v_id+'_detail'" v-on:click.stop="historyDetailBtn" class="module_history_Detailinfo"></div>
            </div>
            <div v-if="istableaddress" class="pull-left childcontorl" style="width:67%;border-left:1px solid #bcbec1;">
                <input v-bind:CheckEmpty="checkempty" v-bind:CheckLength="checklength" type="text" v-bind:id="v_id+'_detail'" v-model.trim="Common.DetailAddress" v-bind:title="Common.DetailAddress" placeholder="请填入详细地址" style="width:100%;height:100%;text-indent:5px;">
            </div>
        </div>
        <div v-bind:id="v_id+'_map'"></div>
        <div class="address">
            <ul class="clearfix address-tit">
                <li class="common active">常用</li>
                <li class="area" v-show="isarea">区域</li>
                <li class="procince">省</li>
                <li class="city">市</li>
                <li class="district">县区</li>
            </ul>
            <div class="address_content">
                <div class="tab-address" v-bind:id="v_id+'_common'">
                    <div class="addressfor" style="width:100%;">
                        <dl class="clearfix common_list">
                            <dd>
                                <a v-for="(common,index) in commonData" v-on:click="ChoiceCommon(common,index)" href="javascript:;">
                                    {{common.Geography_Name}}
                                </a>
                            </dd>
                        </dl>
                    </div>
                </div>
                <div class="tab-address" v-bind:id="v_id+'_area'" style="display:none">
                    <div class="addressfor" style="width:100%;">
                        <dl class="clearfix area_list">
                            <dd>
                                <a v-for="(area,index) in areaData" v-on:click="ChoiceArea(area,index)" href="javascript:;">
                                    {{area.Geography_Name}}
                                </a>
                            </dd>
                        </dl>
                    </div>
                </div>
                <div class="tab-address" v-bind:id="v_id+'_province'" style="display:none">
                    <div class="addressfor_1" style="width:100%;">
                        <dl class="clearfix province_list">
                            <dt class="pull-left">A-G</dt>
                            <dd class="pull-left">
                                <a v-for="(province,index) in provinceData_A" v-on:click="ChoiceProvince(province,index,'0')" href="javascript:;">
                                    {{province.Geography_Name}}
                                </a>
                            </dd>
                        </dl>
                        <dl class="clearfix province_list">
                            <dt class="pull-left">H-K</dt>
                            <dd class="pull-left">
                                <a v-for="(province,index) in provinceData_H" v-on:click="ChoiceProvince(province,index,'1')" href="javascript:;">
                                    {{province.Geography_Name}}
                                </a>
                            </dd>
                        </dl>
                        <dl class="clearfix province_list">
                            <dt class="pull-left">L-S</dt>
                            <dd class="pull-left">
                                <a v-for="(province,index) in provinceData_L" v-on:click="ChoiceProvince(province,index,'2')" href="javascript:;">
                                    {{province.Geography_Name}}
                                </a>
                            </dd>
                        </dl>
                        <dl class="clearfix province_list">
                            <dt class="pull-left">T-Z</dt>
                            <dd class="pull-left">
                                <a v-for="(province,index) in provinceData_T" v-on:click="ChoiceProvince(province,index,'3')" href="javascript:;">
                                    {{province.Geography_Name}}
                                </a>
                            </dd>
                        </dl>
                    </div>
                    <div class="addressfor_2" style="width:100%;display:none;">
                        <dl class="clearfix province_list">
                            <dd class="pull-left">
                                <a v-for="(province,index) in provinceData" v-on:click="ChoiceProvince(province,index)" href="javascript:;">
                                    {{province.Geography_Name}}
                                </a>
                            </dd>
                        </dl>
                    </div>
                </div>
                <div class="tab-address" v-bind:id="v_id+'_city'" style="display:none;">
                    <div class="addressfor" style="width:100%;">
                        <dl class="clearfix city_list">
                            <dd>
                                <a v-for="(city,index) in cityData" v-on:click="ChoiceCity(city,index)" href="javascript:;">
                                    {{city.Geography_Name}}
                                </a>
                            </dd>
                        </dl>
                    </div>
                </div>
                <div class="tab-address" v-bind:id="v_id+'_district'" style="display:none;">
                    <div class="addressfor" style="width:100%;">
                        <dl class="clearfix district_list">
                            <dd>
                                <a v-for="(district,index) in districtData" v-on:click="ChoiceDistrict(district,index)" href="javascript:;">
                                    {{district.Geography_Name}}
                                </a>
                            </dd>
                        </dl>
                    </div>
                </div>
            </div>
        </div>
    </div>

</script>
@*型号查询*@
<script type="text/x-handlebars-template" id="temproductsearch">
    <div class="outer search_focus" v-bind:id="'search'+v_id">
        <div class="input-group right-search">
            <div class="input-group">
                <div v-if="Shade_Bg" class="shade_bg" v-bind:title="title"></div>
                <label v-bind:style="{color:lab_color}" class="space mb-0" v-bind:id="'Lbl_'+v_id"><span><slot></slot><strong v-if="checkempty" style="color:red">*</strong></span></label>
                <select class="js-basic-single js-states flex-1" autocomplete="autocomplete" multiple="multiple" v-bind:value="value" v-bind:CheckEmpty="checkempty" style="border: 0px;" v-bind:id="v_id"></select>
            </div>
            <div style="display: table;word-spacing: -6px;">
                <span class="input-group-addon" v-if="searchbtn" v-bind:id="v_id+'Search'" v-on:click.stop="searchBtn" style="cursor: pointer;word-spacing: 0;display:inline-block;width:29px;height:28px;border-right:1px solid #d8d8d8;border-left:1px solid #d8d8d8;"><i class="fa fa-search" style="margin-right: 0;"></i></span>
                <span class="input-group-addon" v-bind:id="v_id+'SearchDetail'" v-on:click.stop="searchBtnDetail" style="cursor: pointer;word-spacing: 0;display:inline-block;width:30px;height:28px;border-left:1px solid #d8d8d8;"><i class="fa fa-navicon" style="margin-right: 0;"></i></span>
                <span class="delete" style="cursor: pointer;"><i class="fa fa-times"></i></span>
            </div>
        </div>
        <ul v-bind:class="v_id+'_productdetail'" class="productinfo searchleftopen clearfix" v-show="searchDetail">
            <li><label v-bind:id="'Lbl_'+v_id+'_Unit_Name'">单位：</label><span class="text-overflow" v-bind:title="detailInfo.Unit_Name" v-bind:id="v_id+'_Unit_Name'">{{detailInfo.Unit_Name}}</span></li>
            <li><label v-bind:id="'Lbl_'+v_id+'_Package'">油脂包装：</label><span class="text-overflow" v-bind:title="detailInfo.Package" v-bind:id="v_id+'_Package'">{{detailInfo.Package}}</span></li>
            <li><label v-bind:id="'Lbl_'+v_id+'_Brand_Name'">品牌：</label><span class="text-overflow" v-bind:title="detailInfo.Brand_Name" v-bind:id="v_id+'_Brand_Name'">{{detailInfo.Brand_Name}}</span></li>
            <li><label v-bind:id="'Lbl_'+v_id+'Product_Classify_Name'">品名：</label><span class="text-overflow" v-bind:title="detailInfo.Product_Classify_Name" v-bind:id="v_id+'Product_Classify_Name'">{{detailInfo.Product_Classify_Name}}</span></li>
            <li><label v-bind:id="'Lbl_'+v_id+'_Product_Area_Name'">产地：</label><span class="text-overflow" v-bind:title="detailInfo.Product_Area_Name" v-bind:id="v_id+'_Product_Area_Name'">{{detailInfo.Product_Area_Name}}</span></li>
            <li><label v-bind:id="'Lbl_'+v_id+'_Custom'">关税：</label><span class="text-overflow pull-left" v-bind:title="detailInfo.Custom" v-bind:id="v_id+'_Custom'">{{detailInfo.Custom}}</span></li>
            <li><label v-bind:id="'Lbl_'+v_id+'_Material_Name'">材质：</label><span class="text-overflow" v-bind:title="detailInfo.Material_Name" v-bind:id="v_id+'_Material_Name'">{{detailInfo.Material_Name}}</span></li>
            <li><label v-bind:id="'Lbl_'+v_id+'_Pc'">Pc：</label><span class="text-overflow pull-left" v-bind:title="detailInfo.Pc" v-bind:id="v_id+'_Pc'">{{detailInfo.Pc}}</span></li>
            <li><label v-bind:id="'Lbl_'+v_id+'_Production_Month'">生产月：</label><span class="text-overflow" v-bind:title="detailInfo.Production_Month" v-bind:id="v_id+'_Production_Month'">{{detailInfo.Production_Month}}</span></li>
            <li><label v-bind:id="'Lbl_'+v_id+'_Tm'">TM：</label><span class="text-overflow" v-bind:title="detailInfo.Tm" v-bind:id="v_id+'_Tm'">{{detailInfo.Tm}}</span></li>
            <li><label v-bind:id="'Lbl_'+v_id+'_Product_Classify'">分类：</label><span class="text-overflow" v-bind:title="detailInfo.Product_Classify_Name+detailInfo.Product_Classify_Name_C+detailInfo.Product_Classify_Name_S" v-bind:id="v_id+'_Product_Classify'">{{detailInfo.Product_Classify_Name}}-{{detailInfo.Product_Classify_Name_C}}-{{detailInfo.Product_Classify_Name_S}}</span></li>
            <li><label v-bind:id="'Lbl_'+v_id+'_The_Highest_Store'">最高库存：</label><span class="text-overflow" v-bind:title="detailInfo.The_Highest_Store" v-bind:id="v_id+'_The_Highest_Store'">{{detailInfo.The_Highest_Store}}</span></li>
            <li><label v-bind:id="'Lbl_'+v_id+'_The_Lowest_Store'">最低库存：</label><span class="text-overflow" v-bind:title="detailInfo.The_Lowest_Store" v-bind:id="v_id+'_The_Lowest_Store'">{{detailInfo.The_Lowest_Store}}</span></li>
            <li><label v-bind:id="'Lbl_'+v_id+'_Box_Count'">整箱数：</label><span class="text-overflow pull-left" v-bind:title="detailInfo.Box_Count" v-bind:id="v_id+'_Box_Count'">{{detailInfo.Box_Count}}</span></li>
            <li><label v-bind:id="'Lbl_'+v_id+'_Remain_Flotsam_Width'">剩余费料：</label><span class="text-overflow" v-bind:title="detailInfo.Remain_Flotsam_Width+detailInfo.Remain_Flotsam_Width_Name" v-bind:id="v_id+'_Remain_Flotsam_Width'">{{detailInfo.Remain_Flotsam_Width}}{{detailInfo.Remain_Flotsam_Width_Name}}</span></li>
            <li><erp-formattype v-bind:formattype="globalParameter.Weight_Digital_Cut_Way" v-bind:decimals="globalParameter.Weight_Decimal" v-model="detailInfo.Weight" v-bind:unit="detailInfo.Weight_Name" v-bind:v_id="v_id+'_Weight'">重量：</erp-formattype></li>
            <li><erp-formattype v-bind:formattype="globalParameter.Lenght_Digital_Cut_Way" v-bind:decimals="globalParameter.Lenght_Decimal" v-model="detailInfo.Length" v-bind:unit="detailInfo.Length_Name" v-bind:v_id="v_id+'_Length'">长度：</erp-formattype></li>
            <li><erp-formattype v-bind:formattype="globalParameter.Lenght_Digital_Cut_Way" v-bind:decimals="globalParameter.Lenght_Decimal" v-model="detailInfo.Width" v-bind:unit="detailInfo.Width_Name" v-bind:v_id="v_id+'_Width'">宽度：</erp-formattype></li>
            <li><erp-formattype v-bind:formattype="globalParameter.Lenght_Digital_Cut_Way" v-bind:decimals="globalParameter.Lenght_Decimal" v-model="detailInfo.Thickness" v-bind:unit="detailInfo.Thickness_Name" v-bind:v_id="v_id+'_Thickness'">厚度：</erp-formattype></li>
            <li><erp-formattype v-bind:formattype="globalParameter.Lenght_Digital_Cut_Way" v-bind:decimals="globalParameter.Lenght_Decimal" v-model="detailInfo.Outer_Radius" v-bind:unit="detailInfo.Outer_Radius_Name" v-bind:v_id="v_id+'_Outer_Radius'">外径：</erp-formattype></li>
            <li><erp-formattype v-bind:formattype="globalParameter.Lenght_Digital_Cut_Way" v-bind:decimals="globalParameter.Lenght_Decimal" v-model="detailInfo.Inner_Radius" v-bind:unit="detailInfo.Inner_Radius_Name" v-bind:v_id="v_id+'_Inner_Radius'">内径：</erp-formattype></li>
            <li class="last"><label v-bind:id="'Lbl_'+v_id+'_Remark'">备注：</label><span class="text-overflow" v-bind:title="detailInfo.Remark" v-bind:id="v_id+'_Remark'">{{detailInfo.Remark}}</span></li>
        </ul>
    </div>
</script>
@*客户查询*@
<script type="text/x-handlebars-template" id="temcustomersearch">
    <div class="outer search_focus" v-bind:id="'search'+v_id">
        <div class="input-group right-search">
            <div class="input-group">
                <div v-if="Shade_Bg" class="shade_bg" v-bind:title="title"></div>
                <label v-bind:style="{color:lab_color}" class="space mb-0" v-bind:id="'Lbl_'+v_id"><span><slot></slot><strong v-if="checkempty" style="color:red">*</strong></span></label>
                <select class="js-basic-single js-states flex-1" autocomplete="autocomplete" multiple="multiple" v-bind:value="value" v-bind:CheckEmpty="checkempty" style="border: 0px;" v-bind:id="v_id"></select>
            </div>
            <div style="display: table;word-spacing: -6px;">
                <span class="input-group-addon" v-if="searchbtn" v-bind:id="v_id+'Search'" v-on:click.stop="searchBtn" style="cursor: pointer;word-spacing: 0;display:inline-block;width:29px;height:28px;border-right:1px solid #d8d8d8;border-left:1px solid #d8d8d8;"><i class="fa fa-search" style="margin-right: 0;"></i></span>
                <span class="input-group-addon" v-bind:id="v_id+'SearchDetail'" v-on:click.stop="searchBtnDetail" style="cursor: pointer;word-spacing: 0;display:inline-block;width:30px;height:28px;border-left:1px solid #d8d8d8;"><i class="fa fa-navicon" style="margin-right: 0;"></i></span>
                <span class="delete" style="cursor: pointer;"><i class="fa fa-times"></i></span>
            </div>
        </div>
        <div v-bind:class="v_id+'_customerdetail'" class="customerinfo searchleftopen" v-show="searchDetail">
            <ul class="customer-tab clearfix">
                <li class="pull-left active">基本信息</li>
                <li class="pull-left">默认联系人</li>
                <li class="pull-left">结算信息</li>
                <li class="pull-left">开票信息</li>
            </ul>
            <div class="customer-list mt-5">
                <ul class="clearfix customer-basicinfo">
                    <li><label v-bind:id="'Lbl_'+v_id+'_Parent_Customer_Name'">父客户名称：</label><span class="text-overflow" v-bind:title="detailInfo.Parent_Customer_Name" v-bind:id="v_id+'_Parent_Customer_Name'">{{detailInfo.Parent_Customer_Name}}</span></li>
                    <li><label v-bind:id="'Lbl_'+v_id+'_Customer_Type_Name'">类型：</label><span class="text-overflow" v-bind:title="detailInfo.Customer_Type_Name" v-bind:id="v_id+'_Customer_Type_Name'">{{detailInfo.Customer_Type_Name}}</span></li>
                    <li><label v-bind:id="'Lbl_'+v_id+'_Customer_Status_Name'">客户状态：</label><span class="text-overflow" v-bind:title="detailInfo.Customer_Status_Name" v-bind:id="v_id+'_Customer_Status_Name'">{{detailInfo.Customer_Status_Name}}</span></li>
                    <li><label v-bind:id="'Lbl_'+v_id+'_Employee_Name'">任务人：</label><span class="text-overflow" v-bind:title="detailInfo.Employee_Name" v-bind:id="v_id+'_Employee_Name'">{{detailInfo.Employee_Name}}</span></li>
                    <li><label v-bind:id="'Lbl_'+v_id+'_Department_Name'">任务人部门：</label><span class="text-overflow" v-bind:title="detailInfo.Department_Name" v-bind:id="v_id+'_Department_Name'">{{detailInfo.Department_Name}}</span></li>
                    <li><label v-bind:id="'Lbl_'+v_id+'_Customer_Importance_Name'">重要度：</label><span class="text-overflow" v-bind:title="detailInfo.Customer_Importance_Name" v-bind:id="v_id+'_Customer_Importance_Name'">{{detailInfo.Customer_Importance_Name}}</span></li>
                    <li><label v-bind:id="'Lbl_'+v_id+'_Enterprise_Property_Name'">企业性质：</label><span class="text-overflow" v-bind:title="detailInfo.Enterprise_Property_Name" v-bind:id="v_id+'_Enterprise_Property_Name'">{{detailInfo.Enterprise_Property_Name}}</span></li>
                    <li><label v-bind:id="'Lbl_'+v_id+'_Get_Way_Name'">获取途径：</label><span class="text-overflow" v-bind:title="detailInfo.Get_Way_Name" v-bind:id="v_id+'_Get_Way_Name'">{{detailInfo.Get_Way_Name}}</span></li>
                    <li><label v-bind:id="'Lbl_'+v_id+'_Industry_Name'">行业名称：</label><span class="text-overflow" v-bind:title="detailInfo.Industry_Name" v-bind:id="v_id+'_Industry_Name'">{{detailInfo.Industry_Name}}</span></li>
                    <li><label v-bind:id="'Lbl_'+v_id+'_Product_Classify_Name'">产品分类名称：</label><span class="text-overflow" v-bind:title="detailInfo.Product_Classify_Name" v-bind:id="v_id+'_Product_Classify_Name'">{{detailInfo.Product_Classify_Name}}</span></li>
                    <li><label v-bind:id="'Lbl_'+v_id+'_Business_Department_Name'">事业部名称：</label><span class="text-overflow" v-bind:title="detailInfo.Business_Department_Name" v-bind:id="v_id+'_Business_Department_Name'">{{detailInfo.Business_Department_Name}}</span></li>
                    <li><label v-bind:id="'Lbl_'+v_id+'_Send_Goods_Bill_Sign_Way_Name'">送货单签收方式：</label><span class="text-overflow" v-bind:title="detailInfo.Send_Goods_Bill_Sign_Way_Name" v-bind:id="v_id+'_Send_Goods_Bill_Sign_Way_Name'">{{detailInfo.Send_Goods_Bill_Sign_Way_Name}}</span></li>
                    <li><label v-bind:id="'Lbl_'+v_id+'_Contract_Sign_Way_Name'">合同签订方式：</label><span class="text-overflow" v-bind:title="detailInfo.Contract_Sign_Way_Name" v-bind:id="v_id+'_Contract_Sign_Way_Name'">{{detailInfo.Contract_Sign_Way_Name}}</span></li>
                    <li><label v-bind:id="'Lbl_'+v_id+'_Contract_Version_Name'">合同版本：</label><span class="text-overflow" v-bind:title="detailInfo.Contract_Version_Name" v-bind:id="v_id+'_Contract_Version_Name'">{{detailInfo.Contract_Version_Name}}</span></li>
                </ul>
                <ul class="clearfix customer-receiver" style="display:none;">
                    <li><label v-bind:id="'Lbl_'+v_id+'_Contacter_Name'">联系人姓名：</label><span class="text-overflow" v-bind:title="detailInfo.Contacter_Name" v-bind:id="v_id+'_Contacter_Name'">{{detailInfo.Contacter_Name}}</span></li>
                    <li><label v-bind:id="'Lbl_'+v_id+'_Contacter_Position'">职位：</label><span class="text-overflow" v-bind:title="detailInfo.Contacter_Position" v-bind:id="v_id+'_Contacter_Position'">{{detailInfo.Contacter_Position}}</span></li>
                    <li><label v-bind:id="'Lbl_'+v_id+'_Contacter_Department_Name'">部门名称：</label><span class="text-overflow" v-bind:title="detailInfo.Contacter_Department_Name" v-bind:id="v_id+'_Contacter_Department_Name'">{{detailInfo.Contacter_Department_Name}}</span></li>
                    <li><label v-bind:id="'Lbl_'+v_id+'_Contacter_Post_Code'">邮政编码：</label><span class="text-overflow" v-bind:title="detailInfo.Contacter_Post_Code" v-bind:id="v_id+'_Contacter_Post_Code'">{{detailInfo.Contacter_Post_Code}}</span></li>
                    <li><erp-formattype formattype="ymd" v-model="detailInfo.Contacter_Birthday" v-bind:v_id="v_id+'_Contacter_Birthday'">出生日期：</erp-formattype></li>
                    <li><label v-bind:id="'Lbl_'+v_id+'_Contacter_Telephone'">联系电话：</label><span class="text-overflow" v-bind:title="detailInfo.Contacter_Telephone" v-bind:id="v_id+'_Contacter_Telephone'">{{detailInfo.Contacter_Telephone}}</span></li>
                    <li><label v-bind:id="'Lbl_'+v_id+'_Contacter_Fax'">传真：</label><span class="text-overflow" v-bind:title="detailInfo.Contacter_Fax" v-bind:id="v_id+'_Contacter_Fax'">{{detailInfo.Contacter_Fax}}</span></li>
                    <li><label v-bind:id="'Lbl_'+v_id+'_Contacter_Mobile_Phone'">手机：</label><span class="text-overflow" v-bind:title="detailInfo.Contacter_Mobile_Phone" v-bind:id="v_id+'_Contacter_Mobile_Phone'">{{detailInfo.Contacter_Mobile_Phone}}</span></li>
                    <li><label v-bind:id="'Lbl_'+v_id+'_Contacter_Qq'">Qq：</label><span class="text-overflow" v-bind:title="detailInfo.Contacter_Qq" v-bind:id="v_id+'_Contacter_Qq'">{{detailInfo.Contacter_Qq}}</span></li>
                    <li><label v-bind:id="'Lbl_'+v_id+'_Contacter_Email'">邮箱：</label><span class="text-overflow" v-bind:title="detailInfo.Contacter_Email" v-bind:id="v_id+'_Contacter_Email'">{{detailInfo.Contacter_Email}}</span></li>
                    <li><label v-bind:id="'Lbl_'+v_id+'_Contacter_Wechat'">微信：</label><span class="text-overflow" v-bind:title="detailInfo.Contacter_Wechat" v-bind:id="v_id+'_Contacter_Wechat'">{{detailInfo.Contacter_Wechat}}</span></li>
                    <li class="last"><label v-bind:id="'Lbl_'+v_id+'_Contacter_Address'">地址：</label><span class="text-overflow" v-bind:title="detailInfo.Contacter_Address" v-bind:id="v_id+'_Contacter_Address'">{{detailInfo.Contacter_Address}}</span></li>
                    <li class="last"><label v-bind:id="'Lbl_'+v_id+'_Contacter_Remark'">备注：</label><span class="text-overflow" v-bind:title="detailInfo.Contacter_Remark" v-bind:id="v_id+'_Contacter_Remark'">{{detailInfo.Contacter_Remark}}</span></li>
                </ul>
                <ul class="clearfix customer-payway" style="display:none;">
                    <li><label v-bind:id="'Lbl_'+v_id+'_Payway_Name'">结算方式：</label><span class="text-overflow" v-bind:title="detailInfo.Payway_Name" v-bind:id="v_id+'_Payway_Name'">{{detailInfo.Payway_Name}}</span></li>
                    <li><erp-formattype v-bind:formattype="globalParameter.Money_Digital_Cut_Way" v-bind:decimals="globalParameter.Other_Money_Decimal" v-model="detailInfo.Goods_Pay_Sum" v-bind:v_id="v_id+'_Goods_Pay_Sum'">货款总额：</erp-formattype></li>
                    <li><erp-formattype v-bind:formattype="globalParameter.Money_Digital_Cut_Way" v-bind:decimals="globalParameter.Other_Money_Decimal" v-model="detailInfo.Freight_Balance" v-bind:v_id="v_id+'_Freight_Balance'">运费余额：</erp-formattype></li>
                    <li><erp-formattype v-bind:formattype="globalParameter.Money_Digital_Cut_Way" v-bind:decimals="globalParameter.Other_Money_Decimal" v-model="detailInfo.Earnest_Balance" v-bind:v_id="v_id+'_Earnest_Balance'">定金余额：</erp-formattype></li>
                    <li><erp-formattype v-bind:formattype="globalParameter.Money_Digital_Cut_Way" v-bind:decimals="globalParameter.Other_Money_Decimal" v-model="detailInfo.Other" v-bind:v_id="v_id+'_Other'">其他：</erp-formattype></li>
                    <li><label v-bind:id="'Lbl_'+v_id+'_Credit_Name'">信用额度：</label><span class="text-overflow" v-bind:title="detailInfo.Credit_Name" v-bind:id="v_id+'_Credit_Name'">{{detailInfo.Credit_Name}}</span></li>
                    <li><label v-bind:id="'Lbl_'+v_id+'_Account_Period_Way_Name'">账期方式：</label><span class="text-overflow" v-bind:title="detailInfo.Account_Period_Way_Name" v-bind:id="v_id+'_Account_Period_Way_Name'">{{detailInfo.Account_Period_Way_Name}}</span></li>
                    <li><label v-bind:id="'Lbl_'+v_id+'_Pay_Day_Count'">日结天数：</label><span class="text-overflow" v-bind:title="detailInfo.Pay_Day_Count" v-bind:id="v_id+'_Pay_Day_Count'">{{detailInfo.Pay_Day_Count}}</span></li>
                    <li><label v-bind:id="'Lbl_'+v_id+'_Pay_Month_Count'">月结月数：</label><span class="text-overflow" v-bind:title="detailInfo.Pay_Month_Count" v-bind:id="v_id+'_Pay_Month_Count'">{{detailInfo.Pay_Month_Count}}</span></li>
                    <li><label v-bind:id="'Lbl_'+v_id+'_Subsrction_Day'">分段日：</label><span class="text-overflow" v-bind:title="detailInfo.Subsrction_Day" v-bind:id="v_id+'_Subsrction_Day'">{{detailInfo.Subsrction_Day}}</span></li>
                    <li><label v-bind:id="'Lbl_'+v_id+'_Extended_Day'">超期日：</label><span class="text-overflow" v-bind:title="detailInfo.Extended_Day" v-bind:id="v_id+'_Extended_Day'">{{detailInfo.Extended_Day}}</span></li>
                    <li class="last"><label v-bind:id="'Lbl_'+v_id+'_Payway_Remark'">备注：</label><span class="text-overflow" v-bind:title="detailInfo.Payway_Remark" v-bind:id="v_id+'_Payway_Remark'">{{detailInfo.Payway_Remark}}</span></li>
                </ul>
                <ul class="clearfix customer-invoice" style="display:none;">
                    <li><label v-bind:id="'Lbl_'+v_id+'_Invoice_Name'">开票名称：</label><span class="text-overflow" v-bind:title="detailInfo.Invoice_Name" v-bind:id="v_id+'_Invoice_Name'">{{detailInfo.Invoice_Name}}</span></li>
                    <li><label v-bind:id="'Lbl_'+v_id+'_Invoice_Taxpayer_Id'">税号：</label><span class="text-overflow" v-bind:title="detailInfo.Invoice_Taxpayer_Id" v-bind:id="v_id+'_Invoice_Taxpayer_Id'">{{detailInfo.Invoice_Taxpayer_Id}}</span></li>
                    <li><label v-bind:id="'Lbl_'+v_id+'_Invoice_Tel'">开票电话：</label><span class="text-overflow" v-bind:title="detailInfo.Invoice_Tel" v-bind:id="v_id+'_Account_Invoice_Tel'">{{detailInfo.Invoice_Tel}}</span></li>
                    <li><label v-bind:id="'Lbl_'+v_id+'_Invoice_Bank'">开户银行：</label><span class="text-overflow" v-bind:title="detailInfo.Invoice_Bank" v-bind:id="v_id+'_Invoice_Bank'">{{detailInfo.Invoice_Bank}}</span></li>
                    <li><label v-bind:id="'Lbl_'+v_id+'_Invoice_Account'">账号：</label><span class="text-overflow" v-bind:title="detailInfo.Invoice_Account" v-bind:id="v_id+'_Invoice_Account'">{{detailInfo.Invoice_Account}}</span></li>
                    <li class="last"><label v-bind:id="'Lbl_'+v_id+'_Invoice_Address'">开票地址：</label><span class="text-overflow" v-bind:title="detailInfo.Invoice_Address" v-bind:id="v_id+'_Invoice_Address'">{{detailInfo.Invoice_Address}}</span></li>
                </ul>
            </div>
        </div>
        <div v-if="ishistory" v-bind:id="'history_'+v_id" v-on:click.stop="historyBtn" class="module_history_info"></div>
    </div>
</script>
@*供应商查询*@
<script type="text/x-handlebars-template" id="temsuppliersearch">
    <div class="outer search_focus" v-bind:id="'search'+v_id">
        <div class="input-group right-search">
            <div class="input-group">
                <div v-if="Shade_Bg" class="shade_bg" v-bind:title="title"></div>
                <label v-bind:style="{color:lab_color}" class="space mb-0" v-bind:id="'Lbl_'+v_id"><span><slot></slot><strong v-if="checkempty" style="color:red">*</strong></span></label>
                <select class="js-basic-single js-states flex-1" autocomplete="autocomplete" multiple="multiple" v-bind:value="value" v-bind:CheckEmpty="checkempty" style="border: 0px;" v-bind:id="v_id"></select>
            </div>
            <div style="display: table;word-spacing: -6px;">
                <span class="input-group-addon" v-if="searchbtn" v-bind:id="v_id+'Search'" v-on:click.stop="searchBtn" style="cursor: pointer;word-spacing: 0;display:inline-block;width:29px;height:28px;border-right:1px solid #d8d8d8;border-left:1px solid #d8d8d8;"><i class="fa fa-search" style="margin-right: 0;"></i></span>
                <span class="input-group-addon" v-bind:id="v_id+'SearchDetail'" v-on:click.stop="searchBtnDetail" style="cursor: pointer;word-spacing: 0;display:inline-block;width:30px;height:28px;border-left:1px solid #d8d8d8;"><i class="fa fa-navicon" style="margin-right: 0;"></i></span>
                <span class="delete" style="cursor: pointer;"><i class="fa fa-times"></i></span>
            </div>
        </div>
        <div v-bind:class="v_id+'_supplierdetail'" class="supplierinfo searchleftopen" v-show="searchDetail">
            <ul class="supplier-tab clearfix">
                <li class="pull-left active">基本信息</li>
                <li class="pull-left">默认联系人</li>
                <li class="pull-left">结算信息</li>
            </ul>
            <div class="supplier-list mt-5">
                <ul class="clearfix supplier-basicinfo">
                    <li><label v-bind:id="'Lbl_'+v_id+'_Parent_Supplier_Name'">父客户名称：</label><span class="text-overflow" v-bind:title="detailInfo.Parent_Supplier_Name" v-bind:id="v_id+'_Parent_Supplier_Name'">{{detailInfo.Parent_Supplier_Name}}</span></li>
                    <li><label v-bind:id="'Lbl_'+v_id+'_Supplier_Website'">供应商网址：</label><span class="text-overflow" v-bind:title="detailInfo.Supplier_Website" v-bind:id="v_id+'_Supplier_Website'">{{detailInfo.Supplier_Website}}</span></li>
                    <li><label v-bind:id="'Lbl_'+v_id+'_Supplier_Tax_Number'">供应商税号：</label><span class="text-overflow" v-bind:title="detailInfo.Supplier_Tax_Number" v-bind:id="v_id+'_Supplier_Tax_Number'">{{detailInfo.Supplier_Tax_Number}}</span></li>
                    <li><label v-bind:id="'Lbl_'+v_id+'_Bank'">开户银行：</label><span class="text-overflow" v-bind:title="detailInfo.Bank" v-bind:id="v_id+'_Bank'">{{detailInfo.Bank}}</span></li>
                    <li><label v-bind:id="'Lbl_'+v_id+'_Bank_Account'">银行账号：</label><span class="text-overflow" v-bind:title="detailInfo.Bank_Account" v-bind:id="v_id+'_Bank_Account'">{{detailInfo.Bank_Account}}</span></li>
                    <li><label v-bind:id="'Lbl_'+v_id+'_Other_Name'">其他抬头：</label><span class="text-overflow" v-bind:title="detailInfo.Other_Name" v-bind:id="v_id+'_Other_Name'">{{detailInfo.Other_Name}}</span></li>
                    <li><erp-formattype v-bind:formattype="globalParameter.Money_Digital_Cut_Way" v-bind:decimals="globalParameter.Other_Money_Decimal" v-model="detailInfo.Goods_Payment_Balance" v-bind:v_id="v_id+'_Goods_Payment_Balance'">货款余额：</erp-formattype></li>
                    <li><erp-formattype v-bind:formattype="globalParameter.Money_Digital_Cut_Way" v-bind:decimals="globalParameter.Other_Money_Decimal" v-model="detailInfo.All_Balance" v-bind:v_id="v_id+'_All_Balance'">总余额：</erp-formattype></li>
                    <li><erp-formattype v-bind:formattype="globalParameter.Money_Digital_Cut_Way" v-bind:decimals="globalParameter.Other_Money_Decimal" v-model="detailInfo.Advance_Payment" v-bind:v_id="v_id+'_Advance_Payment'">预付款：</erp-formattype></li>
                    <li class="last"><label v-bind:id="'Lbl_'+v_id+'_Supplier_Address'">供应商地址：</label><span class="text-overflow" v-bind:title="detailInfo.Supplier_Address" v-bind:id="v_id+'_Supplier_Address'">{{detailInfo.Supplier_Address}}</span></li>
                </ul>
                <ul class="clearfix supplier-receive" style="display:none;">
                    <li><label v-bind:id="'Lbl_'+v_id+'_Contacter_Name'">联系人姓名：</label><span class="text-overflow" v-bind:title="detailInfo.Contacter_Name" v-bind:id="v_id+'_Contacter_Name'">{{detailInfo.Contacter_Name}}</span></li>
                    <li><label v-bind:id="'Lbl_'+v_id+'_Contacter_Department_Name'">部门名称：</label><span class="text-overflow" v-bind:title="detailInfo.Contacter_Department_Name" v-bind:id="v_id+'_Contacter_Department_Name'">{{detailInfo.Contacter_Department_Name}}</span></li>
                    <li><label v-bind:id="'Lbl_'+v_id+'_Contacter_Post_Code'">邮政编码：</label><span class="text-overflow" v-bind:title="detailInfo.Contacter_Post_Code" v-bind:id="v_id+'_Contacter_Post_Code'">{{detailInfo.Contacter_Post_Code}}</span></li>
                    <li><label v-bind:id="'Lbl_'+v_id+'_Contacter_Telephone'">联系电话：</label><span class="text-overflow" v-bind:title="detailInfo.Contacter_Telephone" v-bind:id="v_id+'_Contacter_Telephone'">{{detailInfo.Contacter_Telephone}}</span></li>
                    <li><label v-bind:id="'Lbl_'+v_id+'_Contacter_Fax'">传真：</label><span class="text-overflow" v-bind:title="detailInfo.Contacter_Fax" v-bind:id="v_id+'_Contacter_Fax'">{{detailInfo.Contacter_Fax}}</span></li>
                    <li><label v-bind:id="'Lbl_'+v_id+'_Contacter_Mobile_Phone'">手机：</label><span class="text-overflow" v-bind:title="detailInfo.Contacter_Mobile_Phone" v-bind:id="v_id+'_Contacter_Mobile_Phone'">{{detailInfo.Contacter_Mobile_Phone}}</span></li>
                    <li><label v-bind:id="'Lbl_'+v_id+'_Contacter_Qq'">Qq：</label><span class="text-overflow" v-bind:title="detailInfo.Contacter_Qq" v-bind:id="v_id+'_Contacter_Qq'">{{detailInfo.Contacter_Qq}}</span></li>
                    <li><label v-bind:id="'Lbl_'+v_id+'_Contacter_Email'">邮箱：</label><span class="text-overflow" v-bind:title="detailInfo.Contacter_Email" v-bind:id="v_id+'_Contacter_Email'">{{detailInfo.Contacter_Email}}</span></li>
                    <li><label v-bind:id="'Lbl_'+v_id+'_Contacter_Wechat'">微信：</label><span class="text-overflow" v-bind:title="detailInfo.Contacter_Wechat" v-bind:id="v_id+'_Contacter_Wechat'">{{detailInfo.Contacter_Wechat}}</span></li>
                    <li class="last"><label v-bind:id="'Lbl_'+v_id+'_Contacter_Address'">地址：</label><span class="text-overflow" v-bind:title="detailInfo.Contacter_Address" v-bind:id="v_id+'_Contacter_Address'">{{detailInfo.Contacter_Address}}</span></li>
                </ul>
                <ul class="clearfix supplier-payway" style="display:none;">
                    <li><label v-bind:id="'Lbl_'+v_id+'_Payway_Name'">结算方式：</label><span class="text-overflow" v-bind:title="detailInfo.Payway_Name" v-bind:id="v_id+'_Payway_Name'">{{detailInfo.Payway_Name}}</span></li>
                    <li><label v-bind:id="'Lbl_'+v_id+'_Credit_Name'">信用额度：</label><span class="text-overflow" v-bind:title="detailInfo.Credit_Name" v-bind:id="v_id+'_Credit_Name'">{{detailInfo.Credit_Name}}</span></li>
                    <li><label v-bind:id="'Lbl_'+v_id+'_Account_Period_Way_Name'">账期方式：</label><span class="text-overflow" v-bind:title="detailInfo.Account_Period_Way_Name" v-bind:id="v_id+'_Account_Period_Way_Name'">{{detailInfo.Account_Period_Way_Name}}</span></li>
                    <li><label v-bind:id="'Lbl_'+v_id+'_Pay_Day_Count'">日结天数：</label><span class="text-overflow" v-bind:title="detailInfo.Pay_Day_Count" v-bind:id="v_id+'_Pay_Day_Count'">{{detailInfo.Pay_Day_Count}}</span></li>
                    <li><label v-bind:id="'Lbl_'+v_id+'_Pay_Month_Count'">月结月数：</label><span class="text-overflow" v-bind:title="detailInfo.Pay_Month_Count" v-bind:id="v_id+'_Pay_Month_Count'">{{detailInfo.Pay_Month_Count}}</span></li>
                    <li><label v-bind:id="'Lbl_'+v_id+'_Subsrction_Day'">分段日：</label><span class="text-overflow" v-bind:title="detailInfo.Subsrction_Day" v-bind:id="v_id+'_Subsrction_Day'">{{detailInfo.Subsrction_Day}}</span></li>
                    <li><label v-bind:id="'Lbl_'+v_id+'_Extended_Day'">超期日：</label><span class="text-overflow" v-bind:title="detailInfo.Extended_Day" v-bind:id="v_id+'_Extended_Day'">{{detailInfo.Extended_Day}}</span></li>
                    <li class="last"><label v-bind:id="'Lbl_'+v_id+'_Payway_Remark'">备注：</label><span class="text-overflow" v-bind:title="detailInfo.Payway_Remark" v-bind:id="v_id+'_Payway_Remark'">{{detailInfo.Payway_Remark}}</span></li>
                </ul>
            </div>
        </div>
        <div v-if="ishistory" v-bind:id="'history_'+v_id" v-on:click.stop="historyBtn" class="module_history_info"></div>
    </div>
</script>
@*员工查询*@
<script type="text/x-handlebars-template" id="tememployeesearch">
    <div class="outer search_focus" v-bind:id="'search'+v_id">
        <div class="input-group right-search">
            <div class="input-group">
                <div v-if="Shade_Bg" class="shade_bg" v-bind:title="title"></div>
                <label v-bind:style="{color:lab_color}" class="space mb-0" v-bind:id="'Lbl_'+v_id"><span><slot></slot><strong v-if="checkempty" style="color:red">*</strong></span></label>
                <select class="js-basic-single js-states flex-1" v-bind:value="value" autocomplete="autocomplete" multiple="multiple" v-bind:CheckEmpty="checkempty" style="border: 0px;" v-bind:id="v_id"></select>
            </div>
            <div style="display: table;word-spacing: -6px;">
                <span class="input-group-addon" v-if="searchbtn" v-bind:id="v_id+'Search'" v-on:click.stop="searchBtn" style="cursor: pointer;word-spacing: 0;display:inline-block;width:29px;height:28px;border-right:1px solid #d8d8d8;border-left:1px solid #d8d8d8;"><i class="fa fa-search" style="margin-right: 0;"></i></span>
                <span class="input-group-addon" v-bind:id="v_id+'SearchDetail'" v-on:click.stop="searchBtnDetail" style="cursor: pointer;word-spacing: 0;display:inline-block;width:30px;height:28px;border-left:1px solid #d8d8d8;"><i class="fa fa-navicon" style="margin-right: 0;"></i></span>
                <span class="delete" style="cursor: pointer;"><i class="fa fa-times"></i></span>
            </div>
        </div>
        <ul v-bind:class="v_id+'_employeedetail'" class="employeeinfo searchleftopen clearfix" v-show="searchDetail">
            <li><label v-bind:id="'Lbl_'+v_id+'_Sex'">性别：</label><span class="text-overflow" v-bind:title="detailInfo.Sex" v-bind:id="v_id+'_Sex'">{{detailInfo.Sex}}</span></li>
            <li><erp-formattype formattype="ymd" v-model="detailInfo.Birthday" v-bind:v_id="v_id+'_Birthday'">出生日期：</erp-formattype></li>
            <li><erp-formattype formattype="ymd" v-model="detailInfo.Entry_Date" v-bind:v_id="v_id+'_Entry_Date'">入职日期：</erp-formattype></li>
            <li><label v-bind:id="'Lbl_'+v_id+'_Cellphone'">手机：</label><span class="text-overflow" v-bind:title="detailInfo.Cellphone" v-bind:id="v_id+'_Cellphone'">{{detailInfo.Cellphone}}</span></li>
            <li><label v-bind:id="'Lbl_'+v_id+'_Fax'">传真：</label><span class="text-overflow" v-bind:title="detailInfo.Fax" v-bind:id="v_id+'_Fax'">{{detailInfo.Fax}}</span></li>
            <li><label v-bind:id="'Lbl_'+v_id+'_Office_Telephone'">办公电话：</label><span class="text-overflow" v-bind:title="detailInfo.Office_Telephone" v-bind:id="v_id+'_Office_Telephone'">{{detailInfo.Office_Telephone}}</span></li>
            <li><label v-bind:id="'Lbl_'+v_id+'_Email'">邮箱：</label><span class="text-overflow" v-bind:title="detailInfo.Email" v-bind:id="v_id+'_Email'">{{detailInfo.Email}}</span></li>
            <li><erp-formattype formattype="ymd" v-model="detailInfo.Leave_Date" v-bind:v_id="v_id+'_Leave_Date'">离职日期：</erp-formattype></li>
            <li><label v-bind:id="'Lbl_'+v_id+'_Wechat'">微信：</label><span class="text-overflow" v-bind:title="detailInfo.Wechat" v-bind:id="v_id+'_Wechat'">{{detailInfo.Wechat}}</span></li>
            <li><label v-bind:id="'Lbl_'+v_id+'_Department_Name'">部门名称：</label><span class="text-overflow" v-bind:title="detailInfo.Department_Name" v-bind:id="v_id+'_Department_Name'">{{detailInfo.Department_Name}}</span></li>
            <li><label v-bind:id="'Lbl_'+v_id+'_Employee_Type'">员工类型：</label><span class="text-overflow" v-bind:title="detailInfo.Employee_Type" v-bind:id="v_id+'_Employee_Type'">{{detailInfo.Employee_Type}}</span></li>
            <li><label v-bind:id="'Lbl_'+v_id+'_Business_Department_Name'">事业部名称：</label><span class="text-overflow" v-bind:title="detailInfo.Business_Department_Name" v-bind:id="v_id+'_Business_Department_Name'">{{detailInfo.Business_Department_Name}}</span></li>
        </ul>
        <div v-if="ishistory" v-bind:id="'history_'+v_id" v-on:click.stop="historyBtn" class="module_history_info"></div>
    </div>
</script>
@*仓库查询*@
<script type="text/x-handlebars-template" id="temstoreagesearch">
    <div class="outer search_focus" v-bind:id="'search'+v_id">
        <div class="input-group right-search">
            <div class="input-group">
                <div v-if="Shade_Bg" class="shade_bg" v-bind:title="title"></div>
                <label v-bind:style="{color:lab_color}" class="space mb-0" v-bind:id="'Lbl_'+v_id"><span><slot></slot><strong v-if="checkempty" style="color:red">*</strong></span></label>
                <select class="js-basic-single js-states flex-1" autocomplete="autocomplete" multiple="multiple" v-bind:value="value" v-bind:CheckEmpty="checkempty" style="border: 0px;" v-bind:id="v_id"></select>
            </div>
            <div style="display: table;word-spacing: -6px;">
                <span class="input-group-addon" v-if="searchbtn" v-bind:id="v_id+'Search'" v-on:click.stop="searchBtn" style="cursor: pointer;word-spacing: 0;display:inline-block;width:29px;height:28px;border-right:1px solid #d8d8d8;border-left:1px solid #d8d8d8;"><i class="fa fa-search" style="margin-right: 0;"></i></span>
                <span class="input-group-addon" v-bind:id="v_id+'SearchDetail'" v-on:click.stop="searchBtnDetail" style="cursor: pointer;word-spacing: 0;display:inline-block;width:30px;height:28px;border-left:1px solid #d8d8d8;"><i class="fa fa-navicon" style="margin-right: 0;"></i></span>
                <span class="delete" style="cursor: pointer;"><i class="fa fa-times"></i></span>
            </div>
        </div>
        <ul v-bind:class="v_id+'_storeagedetail'" class="storeageinfo searchleftopen clearfix" v-show="searchDetail">
            <li class="last"><label v-bind:id="'Lbl_'+v_id+'_Department_Name'">归属部门：</label><span class="text-overflow" v-bind:title="detailInfo.Department_Name" v-bind:id="v_id+'_Sex'">{{detailInfo.Department_Name}}</span></li>
            <li class="last"><label v-bind:id="'Lbl_'+v_id+'_Name'">负责人：</label><span class="text-overflow" v-bind:title="detailInfo.Name" v-bind:id="v_id+'_Name'">{{detailInfo.Name}}</span></li>
            <li class="last"><label v-bind:id="'Lbl_'+v_id+'_Cellphone'">手机：</label><span class="text-overflow" v-bind:title="detailInfo.Cellphone" v-bind:id="v_id+'_Cellphone'">{{detailInfo.Cellphone}}</span></li>
            <li class="last"><label v-bind:id="'Lbl_'+v_id+'_Office_Telephone'">办公电话：</label><span class="text-overflow" v-bind:title="detailInfo.Office_Telephone" v-bind:id="v_id+'_Office_Telephone'">{{detailInfo.Office_Telephone}}</span></li>
            <li class="last"><label v-bind:id="'Lbl_'+v_id+'_Address'">地址：</label><span class="text-overflow" v-bind:title="detailInfo.Address" v-bind:id="v_id+'_Cellphone'">{{detailInfo.Address}}</span></li>
            <li class="last"><label v-bind:id="'Lbl_'+v_id+'_Remark'">备注：</label><span class="text-overflow" v-bind:title="detailInfo.Remark" v-bind:id="v_id+'_Cellphone'">{{detailInfo.Remark}}</span></li>
        </ul>
    </div>
</script>
@*收货人查询*@
<script type="text/x-handlebars-template" id="temreceiversearch">
    <div class="outer search_focus" v-bind:id="'search'+v_id">
        <div class="input-group right-search">
            <div class="input-group">
                <div v-if="Shade_Bg" class="shade_bg" v-bind:title="title"></div>
                <label v-bind:style="{color:lab_color}" class="space mb-0" v-bind:id="'Lbl_'+v_id"><span><slot></slot><strong v-if="checkempty" style="color:red">*</strong></span></label>
                <select class="js-basic-single js-states flex-1" autocomplete="autocomplete" multiple="multiple" v-bind:value="value" v-bind:CheckEmpty="checkempty" style="border: 0px;" v-bind:id="v_id"></select>
            </div>
            <div style="display: table;word-spacing: -6px;">
                <span class="input-group-addon" v-if="addbtn" v-bind:id="v_id+'Search'" v-on:click.stop="addBtn" style="cursor: pointer;word-spacing: 0;display:inline-block;width:29px;height:28px;border-right:1px solid #d8d8d8;border-left:1px solid #d8d8d8;"><i class="glyphicon glyphicon-plus" style="margin-right: 0;"></i></span>
                <span class="input-group-addon" v-bind:id="v_id+'SearchDetail'" v-on:click.stop="searchBtnDetail" style="cursor: pointer;word-spacing: 0;display:inline-block;width:30px;height:28px;border-left:1px solid #d8d8d8;"><i class="fa fa-navicon" style="margin-right: 3px;margin-top:-1px;"></i></span>
                <span class="delete" style="cursor: pointer;"><i class="fa fa-times"></i></span>
            </div>
        </div>
        <div v-bind:class="v_id+'_receiverdetail'" class="receiverinfo searchleftopen" v-show="searchDetail">
            <ul v-if="receiver_type==='0'" class="clearfix">
                <li><label v-bind:id="'Lbl_'+v_id+'_Position'">职位：</label><span class="text-overflow" v-bind:title="detailInfo.Position" v-bind:id="v_id+'_Position'">{{detailInfo.Position}}</span></li>
                <li><label v-bind:id="'Lbl_'+v_id+'_Department_Name'">部门名称：</label><span class="text-overflow" v-bind:title="detailInfo.Department_Name" v-bind:id="v_id+'_Department_Name'">{{detailInfo.Department_Name}}</span></li>
                <li><label v-bind:id="'Lbl_'+v_id+'_Post_Code'">邮政编码：</label><span class="text-overflow" v-bind:title="detailInfo.Post_Code" v-bind:id="v_id+'_Post_Code'">{{detailInfo.Post_Code}}</span></li>
                <li><erp-formattype formattype="ymd" v-model="detailInfo.Birthday" v-bind:v_id="v_id+'_Birthday'">出生日期：</erp-formattype></li>
                <li><label v-bind:id="'Lbl_'+v_id+'_Telephone'">联系电话：</label><span class="text-overflow" v-bind:title="detailInfo.Telephone" v-bind:id="v_id+'_Telephone'">{{detailInfo.Telephone}}</span></li>
                <li><label v-bind:id="'Lbl_'+v_id+'_Fax'">传真：</label><span class="text-overflow" v-bind:title="detailInfo.Fax" v-bind:id="v_id+'_Fax'">{{detailInfo.Fax}}</span></li>
                <li><label v-bind:id="'Lbl_'+v_id+'_Mobile_Phone'">手机：</label><span class="text-overflow" v-bind:title="detailInfo.Mobile_Phone" v-bind:id="v_id+'_Mobile_Phone'">{{detailInfo.Mobile_Phone}}</span></li>
                <li><label v-bind:id="'Lbl_'+v_id+'_Qq'">QQ：</label><span class="text-overflow" v-bind:title="detailInfo.Qq" v-bind:id="v_id+'_Qq'">{{detailInfo.Qq}}</span></li>
                <li><label v-bind:id="'Lbl_'+v_id+'_Email'">邮箱：</label><span class="text-overflow" v-bind:title="detailInfo.Email" v-bind:id="v_id+'_Email'">{{detailInfo.Email}}</span></li>
                <li><label v-bind:id="'Lbl_'+v_id+'_Wechat'">微信：</label><span class="text-overflow" v-bind:title="detailInfo.Wechat" v-bind:id="v_id+'_Wechat'">{{detailInfo.Wechat}}</span></li>
                <li class="last"><label v-bind:id="'Lbl_'+v_id+'_Address'">地址：</label><span class="text-overflow" v-bind:title="detailInfo.Address" v-bind:id="v_id+'_Address'">{{detailInfo.Address}}</span></li>
                <li class="last"><label v-bind:id="'Lbl_'+v_id+'_Remark'">备注：</label><span class="text-overflow" v-bind:title="detailInfo.Remark" v-bind:id="v_id+'_Remark'">{{detailInfo.Remark}}</span></li>
            </ul>
            <ul v-if="receiver_type==='1'" class="clearfix">
                <li><label v-bind:id="'Lbl_'+v_id+'_Department_Name'">部门名称：</label><span class="text-overflow" v-bind:title="detailInfo.Department_Name" v-bind:id="v_id+'_Department_Name'">{{detailInfo.Department_Name}}</span></li>
                <li><label v-bind:id="'Lbl_'+v_id+'_Post_Code'">邮政编码：</label><span class="text-overflow" v-bind:title="detailInfo.Post_Code" v-bind:id="v_id+'_Post_Code'">{{detailInfo.Post_Code}}</span></li>
                <li><label v-bind:id="'Lbl_'+v_id+'_Telephone'">联系电话：</label><span class="text-overflow" v-bind:title="detailInfo.Telephone" v-bind:id="v_id+'_Telephone'">{{detailInfo.Telephone}}</span></li>
                <li><label v-bind:id="'Lbl_'+v_id+'_Fax'">传真：</label><span class="text-overflow" v-bind:title="detailInfo.Fax" v-bind:id="v_id+'_Fax'">{{detailInfo.Fax}}</span></li>
                <li><label v-bind:id="'Lbl_'+v_id+'_Mobile_Phone'">手机：</label><span class="text-overflow" v-bind:title="detailInfo.Mobile_Phone" v-bind:id="v_id+'_Mobile_Phone'">{{detailInfo.Mobile_Phone}}</span></li>
                <li><label v-bind:id="'Lbl_'+v_id+'_Qq'">QQ：</label><span class="text-overflow" v-bind:title="detailInfo.Qq" v-bind:id="v_id+'_Qq'">{{detailInfo.Qq}}</span></li>
                <li><label v-bind:id="'Lbl_'+v_id+'_Email'">邮箱：</label><span class="text-overflow" v-bind:title="detailInfo.Email" v-bind:id="v_id+'_Email'">{{detailInfo.Email}}</span></li>
                <li><label v-bind:id="'Lbl_'+v_id+'_Wechat'">微信：</label><span class="text-overflow" v-bind:title="detailInfo.Wechat" v-bind:id="v_id+'_Wechat'">{{detailInfo.Wechat}}</span></li>
                <li class="last"><label v-bind:id="'Lbl_'+v_id+'_Address'">地址：</label><span class="text-overflow" v-bind:title="detailInfo.Address" v-bind:id="v_id+'_Address'">{{detailInfo.Address}}</span></li>
            </ul>
            <ul v-if="receiver_type==='2'" class="clearfix">
                <li><label v-bind:id="'Lbl_'+v_id+'_Post_Code'">邮政编码：</label><span class="text-overflow" v-bind:title="detailInfo.Post_Code" v-bind:id="v_id+'_Post_Code'">{{detailInfo.Post_Code}}</span></li>
                <li><label v-bind:id="'Lbl_'+v_id+'_Tel'">联系电话：</label><span class="text-overflow" v-bind:title="detailInfo.Tel" v-bind:id="v_id+'_Tel'">{{detailInfo.Tel}}</span></li>
                <li><label v-bind:id="'Lbl_'+v_id+'_Mobile_Phone'">手机：</label><span class="text-overflow" v-bind:title="detailInfo.Mobile_Phone" v-bind:id="v_id+'_Mobile_Phone'">{{detailInfo.Mobile_Phone}}</span></li>
                <li class="last"><label v-bind:id="'Lbl_'+v_id+'_Send_Invoice_Address'">寄票地址：</label><span class="text-overflow" v-bind:title="detailInfo.Send_Invoice_Address" v-bind:id="v_id+'_Send_Invoice_Address'">{{detailInfo.Send_Invoice_Address}}</span></li>
                <li class="last"><label v-bind:id="'Lbl_'+v_id+'_Apply_Reason'">申请理由：</label><span class="text-overflow" v-bind:title="detailInfo.Apply_Reason" v-bind:id="v_id+'_Apply_Reason'">{{detailInfo.Apply_Reason}}</span></li>
                <li class="last"><label v-bind:id="'Lbl_'+v_id+'_Remark'">备注：</label><span class="text-overflow" v-bind:title="detailInfo.Remark" v-bind:id="v_id+'_Remark'">{{detailInfo.Remark}}</span></li>
            </ul>
        </div>
    </div>
</script>
@*搜索查询*@
<script type="text/x-handlebars-template" id="temsearchtext">
    <div class="outer">
        <label v-bind:style="{color:lab_color}" class="space mb-0" v-bind:id="'Lbl_'+v_id"><slot></slot><strong v-if="checkempty" style="color:red">*</strong></label>
        <div class="input-group right-search">
            <input type="text" v-bind:style="{color:txt_color}" v-bind:child="[child]" ref="input" v-on:focus="selectAll" v-bind:CheckEmpty="checkempty" v-bind:CheckBetweenLength="checkbetweenlength" v-bind:CheckNumberLength="checknumberlength" v-bind:CheckBetweenValue="checkbetweenvalue" v-bind:CheckMobilPhone="checkmobilphone" v-bind:CheckEmptyOneBetweenTwo="checkemptyonebetweentwo" v-bind:RelationControl="relationcontrol" v-bind:readonly="Readonly" v-bind:CheckNumber="checknumber" v-bind:CheckEmialCompare="checkemialcompare" v-bind:CheckNumberOrEngish="checknumberorengish" v-bind:CheckBusNumVerify="checkbusnumverify" v-bind:CheckCardNo="checkcardno" v-bind:CheckTelephone="checktelephone" v-bind:CheckLength="checklength" v-bind:CheckUserName="checkusername" v-bind:field_name="[field_name]" v-bind:query_type="[query_type]" v-bind:expression="[expression]" class="normalText flex-1" v-bind:id="v_id" v-bind:value="value" v-bind:title="value" v-on:input="change($event.target.value)" style="outline: none;width: 100%;" v-bind:placeholder="[placeholder]" data-parsley-trigger="change" />
            <div v-if="searchBtn" style="display:table;word-spacing: -6px;">
                <span class="input-group-addon" v-on:click.stop="search" v-bind:id="v_id+'Search'" style="cursor: pointer;word-spacing: 0;display:inline-block;width:30px;height:28px;border-left:1px solid #d8d8d8;"><i class="fa fa-search" style="margin-right: 0;"></i></span>
            </div>
        </div>
        <div v-if="Shade_Bg" class="shade_bg" v-bind:title="value"></div>
    </div>
</script>
@*型号范围查询*@
<script type="text/x-handlebars-template" id="temproductrange">
    <div class="outer-lg flex productrange">
        <div class="input-group right-search textrange">
            <input type="text" v-bind:title="Common.first" v-model.trim="Common.first" v-bind:id="v_id+'_SearchStart'" v-bind:style="{color:txt_color}" class="flex-1" style="outline: none;width: 100%;" v-bind:child="[child]" v-bind:CheckEmpty="checkempty" v-bind:CheckBetweenLength="checkbetweenlength" v-bind:CheckBetweenValue="checkbetweenvalue" v-bind:CheckMobilPhone="checkmobilphone" v-bind:CheckEmptyOneBetweenTwo="checkemptyonebetweentwo" v-bind:RelationControl="relationcontrol" v-bind:readonly="Readonly" v-bind:CheckNumber="checknumber" v-bind:CheckEmialCompare="checkemialcompare" v-bind:CheckNumberOrEngish="checknumberorengish" v-bind:CheckBusNumVerify="checkbusnumverify" v-bind:CheckCardNo="checkcardno" v-bind:CheckTelephone="checktelephone" v-bind:CheckLength="checklength" v-bind:CheckUserName="checkusername" v-bind:query_type="[query_type]" v-bind:expression="[expression]" v-bind:placeholder="[placeholder]" data-parsley-trigger="change" />
            <div style="display:table;word-spacing: -6px;">
                <span class="input-group-addon" v-on:click.stop="productsearch('1')" v-bind:class="v_id+'Search'" style="cursor: pointer;word-spacing: 0;display:inline-block;width:30px;height:28px;border-left:1px solid #d8d8d8;"><i class="fa fa-search" style="margin-right: 0;"></i></span>
            </div>
            <span class="textrange_left">&ge;</span>
        </div>
        <label v-bind:style="{color:lab_color}" class="space mb-0 ml-15 mr-15" v-bind:id="'Lbl_'+v_id"><slot></slot><strong v-if="checkempty" style="color:red">*</strong></label>
        <div class="input-group right-search textrange">
            <span class="textrange_right">&le;</span>
            <input type="text" v-bind:title="Common.second" v-model.trim="Common.second" v-bind:id="v_id+'_SearchEnd'" v-bind:style="{color:txt_color}" style="width:100%;" v-bind:child="[child1]" v-bind:query_type="[query_type]" v-bind:field_name="[field_name]" v-bind:expression="[expression]" v-bind:CheckEmpty="checkempty" v-bind:CheckBetweenLength="checkbetweenlength" v-bind:CheckBetweenValue="checkbetweenvalue" v-bind:CheckMobilPhone="checkmobilphone" v-bind:CheckEmptyOneBetweenTwo="checkemptyonebetweentwo" v-bind:RelationControl="relationcontrol" v-bind:readonly="Readonly" v-bind:CheckNumber="checknumber" v-bind:CheckEmialCompare="checkemialcompare" v-bind:CheckNumberOrEngish="checknumberorengish" v-bind:CheckBusNumVerify="checkbusnumverify" v-bind:CheckCardNo="checkcardno" v-bind:CheckTelephone="checktelephone" v-bind:CheckLength="checklength" v-bind:CheckUserName="checkusername" />
            <div style="display:table;word-spacing: -6px;">
                <span class="input-group-addon" v-on:click.stop="productsearch('2')" v-bind:class="v_id+'Search'" style="cursor: pointer;word-spacing: 0;display:inline-block;width:30px;height:28px;border-left:1px solid #d8d8d8;"><i class="fa fa-search" style="margin-right: 0;"></i></span>
            </div>
        </div>
        <div v-if="Shade_Bg" class="shade_bg"></div>
    </div>
</script>
@*销售发票查询*@
<script type="text/x-handlebars-template" id="teminvoicesearch">
    <div class="outer search_focus" v-bind:id="'search'+v_id">
        <div class="input-group right-search">
            <div class="input-group">
                <div v-if="Shade_Bg" class="shade_bg" v-bind:title="title"></div>
                <label v-bind:style="{color:lab_color}" class="space mb-0" v-bind:id="'Lbl_'+v_id"><span><slot></slot><strong v-if="checkempty" style="color:red">*</strong></span></label>
                <select class="js-basic-single js-states flex-1" autocomplete="autocomplete" multiple="multiple" v-bind:value="value" v-bind:CheckEmpty="checkempty" style="border: 0px;" v-bind:id="v_id"></select>
            </div>
            <div style="display: table;word-spacing: -6px;">
                <span class="input-group-addon" v-if="searchbtn" v-bind:id="v_id+'Search'" v-on:click.stop="searchBtn" style="cursor: pointer;word-spacing: 0;display:inline-block;width:29px;height:28px;border-right:1px solid #d8d8d8;border-left:1px solid #d8d8d8;"><i class="fa fa-search" style="margin-right: 0;"></i></span>
                <span class="input-group-addon" v-bind:id="v_id+'SearchDetail'" v-on:click.stop="searchBtnDetail" style="cursor: pointer;word-spacing: 0;display:inline-block;width:30px;height:28px;border-left:1px solid #d8d8d8;"><i class="fa fa-navicon" style="margin-right: 0;"></i></span>
                <span class="delete" style="cursor: pointer;"><i class="fa fa-times"></i></span>
            </div>
        </div>
        <ul v-bind:class="v_id+'_invoicedetail'" class="invoiceinfo searchleftopen clearfix" v-show="searchDetail">
            <li><label v-bind:id="'Lbl_'+v_id+'_Customer_Name'">客户：</label><span class="text-overflow" v-bind:title="detailInfo.Customer_Name" v-bind:id="v_id+'_Customer_Name'">{{detailInfo.Customer_Name}}</span></li>
            <li><erp-formattype formattype="ymd" v-model="detailInfo.Invoice_Date" v-bind:v_id="v_id+'_Invoice_Date'">开票日期：</erp-formattype></li>
            <li><label v-bind:id="'Lbl_'+v_id+'_Task_Employee_Name'">任务人：</label><span class="text-overflow" v-bind:title="detailInfo.Task_Employee_Name" v-bind:id="v_id+'_Task_Employee_Name'">{{detailInfo.Task_Employee_Name}}</span></li>
            <li><label v-bind:id="'Lbl_'+v_id+'_Task_Department_Name'">任务人部门：</label><span class="text-overflow" v-bind:title="detailInfo.Task_Department_Name" v-bind:id="v_id+'_Task_Department_Name'">{{detailInfo.Task_Department_Name}}</span></li>
            <li><label v-bind:id="'Lbl_'+v_id+'_Invoice_Employee_Name'">开票人：</label><span class="text-overflow" v-bind:title="detailInfo.Invoice_Employee_Name" v-bind:id="v_id+'_Invoice_Employee_Name'">{{detailInfo.Invoice_Employee_Name}}</span></li>
            <li><label v-bind:id="'Lbl_'+v_id+'_Invoice_Department_Name'">开票人部门：</label><span class="text-overflow" v-bind:title="detailInfo.Invoice_Department_Name" v-bind:id="v_id+'_Invoice_Department_Name'">{{detailInfo.Invoice_Department_Name}}</span></li>
            <li><label v-bind:id="'Lbl_'+v_id+'_Invoice_Status_Name'">发票状态：</label><span class="text-overflow" v-bind:title="detailInfo.Invoice_Status_Name" v-bind:id="v_id+'_Invoice_Status_Name'">{{detailInfo.Invoice_Status_Name}}</span></li>
            <li><label v-bind:id="'Lbl_'+v_id+'_Effective_Invoice_Number'">有效发票号：</label><span class="text-overflow" v-bind:title="detailInfo.Effective_Invoice_Number" v-bind:id="v_id+'_Effective_Invoice_Number'">{{detailInfo.Effective_Invoice_Number}}</span></li>
            <li><label v-bind:id="'Lbl_'+v_id+'_Tax_Proof_Number'">税务证明编号：</label><span class="text-overflow" v-bind:title="detailInfo.Tax_Proof_Number" v-bind:id="v_id+'_Tax_Proof_Number'">{{detailInfo.Tax_Proof_Number}}</span></li>
            <li><label v-bind:id="'Lbl_'+v_id+'_Send_Express_Bill_Number'">寄票快递单号：</label><span class="text-overflow" v-bind:title="detailInfo.Send_Express_Bill_Number" v-bind:id="v_id+'_Send_Express_Bill_Number'">{{detailInfo.Send_Express_Bill_Number}}</span></li>
            <li><erp-formattype v-bind:formattype="globalParameter.Money_Digital_Cut_Way" v-bind:decimals="globalParameter.Price_Sum_Decimal" v-model="detailInfo.Invoice_Price_Amount" v-bind:v_id="v_id+'_Invoice_Price_Amount'">单价总额：</erp-formattype></li>
            <li><erp-formattype v-bind:formattype="globalParameter.Money_Digital_Cut_Way" v-bind:decimals="globalParameter.Tax_Price_Total_Decimal" v-model="detailInfo.Invoice_Price_Tax_Sum_Amount" v-bind:v_id="v_id+'_Invoice_Price_Tax_Sum_Amount'">价税合计总额：</erp-formattype></li>
            <li><erp-formattype v-bind:formattype="globalParameter.Money_Digital_Cut_Way" v-bind:decimals="globalParameter.Tax_Price_Sum_Decimal" v-model="detailInfo.Invoice_Amount" v-bind:v_id="v_id+'_Invoice_Amount'">总额：</erp-formattype></li>
            <li class="last"><label v-bind:id="'Lbl_'+v_id+'_Remark'">备注：</label><span class="text-overflow" v-bind:title="detailInfo.Remark" v-bind:id="v_id+'_Remark'">{{detailInfo.Remark}}</span></li>
        </ul>
    </div>
</script>
@*承兑汇票查询*@
<script type="text/x-handlebars-template" id="temacceptbillsearch">
    <div class="outer search_focus" v-bind:id="'search'+v_id">
        <div class="input-group right-search">
            <div class="input-group">
                <div v-if="Shade_Bg" class="shade_bg" v-bind:title="title"></div>
                <label v-bind:style="{color:lab_color}" class="space mb-0" v-bind:id="'Lbl_'+v_id"><span><slot></slot><strong v-if="checkempty" style="color:red">*</strong></span></label>
                <select class="js-basic-single js-states flex-1" autocomplete="autocomplete" multiple="multiple" v-bind:value="value" v-bind:CheckEmpty="checkempty" style="border: 0px;" v-bind:id="v_id"></select>
            </div>
            <div style="display: table;word-spacing: -6px;">
                <span class="input-group-addon" v-if="searchbtn" v-bind:id="v_id+'Search'" v-on:click.stop="searchBtn" style="cursor: pointer;word-spacing: 0;display:inline-block;width:29px;height:28px;border-right:1px solid #d8d8d8;border-left:1px solid #d8d8d8;"><i class="fa fa-search" style="margin-right: 0;"></i></span>
                <span class="input-group-addon" v-bind:id="v_id+'SearchDetail'" v-on:click.stop="searchBtnDetail" style="cursor: pointer;word-spacing: 0;display:inline-block;width:30px;height:28px;border-left:1px solid #d8d8d8;"><i class="fa fa-navicon" style="margin-right: 0;"></i></span>
                <span class="delete" style="cursor: pointer;"><i class="fa fa-times"></i></span>
            </div>
        </div>
        <ul v-bind:class="v_id+'_acceptbilldetail'" class="acceptbillinfo searchleftopen clearfix" v-show="searchDetail">
            <li><label v-bind:id="'Lbl_'+v_id+'_Object_Name'">单位名称：</label><span class="text-overflow" v-bind:title="detailInfo.Object_Name" v-bind:id="v_id+'_Object_Name'">{{detailInfo.Object_Name}}</span></li>
            <li><label v-bind:id="'Lbl_'+v_id+'_Employee_Name'">任务人：</label><span class="text-overflow" v-bind:title="detailInfo.Employee_Name" v-bind:id="v_id+'_Employee_Name'">{{detailInfo.Employee_Name}}</span></li>
            <li><label v-bind:id="'Lbl_'+v_id+'_Accept_Bill_Belong_Employee_Name'">承兑归属任务人：</label><span class="text-overflow" v-bind:title="detailInfo.Accept_Bill_Belong_Employee_Name" v-bind:id="v_id+'_Accept_Bill_Belong_Employee_Name'">{{detailInfo.Accept_Bill_Belong_Employee_Name}}</span></li>
            <li><label v-bind:id="'Lbl_'+v_id+'_Department_Name'">部门：</label><span class="text-overflow" v-bind:title="detailInfo.Department_Name" v-bind:id="v_id+'_Department_Name'">{{detailInfo.Department_Name}}</span></li>
            <li><label v-bind:id="'Lbl_'+v_id+'_Is_Discount_Name'">是否可贴现：</label><span class="text-overflow" v-bind:title="detailInfo.Is_Discount_Name" v-bind:id="v_id+'_Is_Discount_Name'">{{detailInfo.Is_Discount_Name}}</span></li>
            <li><label v-bind:id="'Lbl_'+v_id+'_Bank_Name'">出票银行：</label><span class="text-overflow" v-bind:title="detailInfo.Bank_Name" v-bind:id="v_id+'_Bank_Name'">{{detailInfo.Bank_Name}}</span></li>
            <li><label v-bind:id="'Lbl_'+v_id+'_Accept_Way_Name'">承兑方式：</label><span class="text-overflow" v-bind:title="detailInfo.Accept_Way_Name" v-bind:id="v_id+'_Accept_Way_Name'">{{detailInfo.Accept_Way_Name}}</span></li>
            <li><label v-bind:id="'Lbl_'+v_id+'_Accept_Bill_Number'">承兑汇票号码：</label><span class="text-overflow" v-bind:title="detailInfo.Accept_Bill_Number" v-bind:id="v_id+'_Accept_Bill_Number'">{{detailInfo.Accept_Bill_Number}}</span></li>
            <li><erp-formattype v-bind:formattype="globalParameter.Money_Digital_Cut_Way" v-bind:decimals="globalParameter.Other_Money_Decimal" v-model="detailInfo.Accept_Bill_Account" v-bind:v_id="v_id+'_Accept_Bill_Account'">汇票金额：</erp-formattype></li>
            <li><label v-bind:id="'Lbl_'+v_id+'_Old_Appoint_Pay_Way_Name'">原约定付款方式：</label><span class="text-overflow" v-bind:title="detailInfo.Old_Appoint_Pay_Way_Name" v-bind:id="v_id+'_Old_Appoint_Pay_Way_Name'">{{detailInfo.Old_Appoint_Pay_Way_Name}}</span></li>
            <li><label v-bind:id="'Lbl_'+v_id+'_Company_Name'">背书公司：</label><span class="text-overflow" v-bind:title="detailInfo.Company_Name" v-bind:id="v_id+'_Company_Name'">{{detailInfo.Company_Name}}</span></li>
            <li><label v-bind:id="'Lbl_'+v_id+'_Endorsement_Count'">已背书次数：</label><span class="text-overflow" v-bind:title="detailInfo.Endorsement_Count" v-bind:id="v_id+'_Endorsement_Count'">{{detailInfo.Endorsement_Count}}</span></li>
            <li><label v-bind:id="'Lbl_'+v_id+'_Discount_Start_Count_Date'">贴息起计日期：</label><span class="text-overflow" v-bind:title="detailInfo.Discount_Start_Count_Date" v-bind:id="v_id+'_Discount_Start_Count_Date'">{{detailInfo.Discount_Start_Count_Date}}</span></li>
            <li><label v-bind:id="'Lbl_'+v_id+'_Accept_End_Date'">承兑到期日期：</label><span class="text-overflow" v-bind:title="detailInfo.Accept_End_Date" v-bind:id="v_id+'_Accept_End_Date'">{{detailInfo.Accept_End_Date}}</span></li>
            <li><label v-bind:id="'Lbl_'+v_id+'_Charge_Undertake_Object_Name'">费用承担对象：</label><span class="text-overflow" v-bind:title="detailInfo.Charge_Undertake_Object_Name" v-bind:id="v_id+'_Charge_Undertake_Object_Name'">{{detailInfo.Charge_Undertake_Object_Name}}</span></li>
            <li><erp-formattype v-bind:formattype="globalParameter.Money_Digital_Cut_Way" v-bind:decimals="globalParameter.Other_Money_Decimal" v-model="detailInfo.Customer_Undertake_Charge" v-bind:v_id="v_id+'_Customer_Undertake_Charge'">客户承担费用：</erp-formattype></li>
            <li><erp-formattype v-bind:formattype="globalParameter.Money_Digital_Cut_Way" v-bind:decimals="globalParameter.Other_Money_Decimal" v-model="detailInfo.Company_Undertake_Charge" v-bind:v_id="v_id+'_Company_Undertake_Charge'">公司预估承担费用：</erp-formattype></li>
            <li><erp-formattype v-bind:formattype="globalParameter.Money_Digital_Cut_Way" v-bind:decimals="globalParameter.Other_Money_Decimal" v-model="detailInfo.Discount_Charge" v-bind:v_id="v_id+'_Discount_Charge'">贴息费用：</erp-formattype></li>
            <li class="last"><label v-bind:id="'Lbl_'+v_id+'_Remark'">备注：</label><span class="text-overflow" v-bind:title="detailInfo.Remark" v-bind:id="v_id+'_Remark'">{{detailInfo.Remark}}</span></li>
        </ul>
    </div>
</script>
@*货位查询*@
<script type="text/x-handlebars-template" id="temgoodslocatesearch">
    <div class="outer search_focus" v-bind:id="'search'+v_id">
        <div class="input-group right-search">
            <div class="input-group">
                <div v-if="Shade_Bg" class="shade_bg" v-bind:title="title"></div>
                <label v-bind:style="{color:lab_color}" class="space mb-0" v-bind:id="'Lbl_'+v_id"><span><slot></slot><strong v-if="checkempty" style="color:red">*</strong></span></label>
                <select class="js-basic-single js-states flex-1" autocomplete="autocomplete" multiple="multiple" v-bind:value="value" v-bind:CheckEmpty="checkempty" style="border: 0px;" v-bind:id="v_id"></select>
            </div>
            <div style="display: table;word-spacing: -6px;">
                <span class="input-group-addon" v-if="searchbtn" v-bind:id="v_id+'Search'" v-on:click.stop="searchBtn" style="cursor: pointer;word-spacing: 0;display:inline-block;width:29px;height:28px;border-right:1px solid #d8d8d8;border-left:1px solid #d8d8d8;"><i class="fa fa-search" style="margin-right: 0;"></i></span>
                <span class="input-group-addon" v-bind:id="v_id+'SearchDetail'" v-on:click.stop="searchBtnDetail" style="cursor: pointer;word-spacing: 0;display:inline-block;width:30px;height:28px;border-left:1px solid #d8d8d8;"><i class="fa fa-navicon" style="margin-right: 0;"></i></span>
                <span class="delete" style="cursor: pointer;"><i class="fa fa-times"></i></span>
            </div>
        </div>
        <ul v-bind:class="v_id+'_goodslocatedetail'" class="goodslocateinfo searchleftopen clearfix" v-show="searchDetail">
            <li><label v-bind:id="'Lbl_'+v_id+'_Goods_Locate_Type_Name'">类型：</label><span class="text-overflow" v-bind:title="detailInfo.Goods_Locate_Type_Name" v-bind:id="v_id+'_Goods_Locate_Type_Name'">{{detailInfo.Goods_Locate_Type_Name}}</span></li>
            <li><label v-bind:id="'Lbl_'+v_id+'_Storeage_Name'">仓库：</label><span class="text-overflow" v-bind:title="detailInfo.Storeage_Name" v-bind:id="v_id+'_Storeage_Name'">{{detailInfo.Storeage_Name}}</span></li>
            <li><label v-bind:id="'Lbl_'+v_id+'_Storeage_Area_Name'">仓库区域：</label><span class="text-overflow" v-bind:title="detailInfo.Storeage_Area_Name" v-bind:id="v_id+'_Storeage_Area_Name'">{{detailInfo.Storeage_Area_Name}}</span></li>
            <li><label v-bind:id="'Lbl_'+v_id+'_Storeage_Region_Name'">仓库储区：</label><span class="text-overflow" v-bind:title="detailInfo.Storeage_Region_Name" v-bind:id="v_id+'_Storeage_Region_Name'">{{detailInfo.Storeage_Region_Name}}</span></li>
            <li><label v-bind:id="'Lbl_'+v_id+'_Goods_Locate_Layer'">货位层数：</label><span class="text-overflow" v-bind:title="detailInfo.Goods_Locate_Layer" v-bind:id="v_id+'_Goods_Locate_Layer'">{{detailInfo.Goods_Locate_Layer}}</span></li>
            <li><erp-formattype v-bind:formattype="globalParameter.Weight_Digital_Cut_Way" v-bind:decimals="globalParameter.Weight_Decimal" v-model="detailInfo.Goods_Locate_Load" v-bind:unit="detailInfo.Goods_Locate_Load_Unit_Name" v-bind:v_id="v_id+'_Goods_Locate_Load'">货位载重：</erp-formattype></li>
            <li><erp-formattype v-bind:formattype="globalParameter.Volume_Digital_Cut_Way" v-bind:decimals="globalParameter.Volume_Decimal" v-model="detailInfo.Goods_Locate_Volume" v-bind:unit="detailInfo.Goods_Locate_Volume_Unit_Name" v-bind:v_id="v_id+'_Goods_Locate_Volume'">货位体积：</erp-formattype></li>

            <li><erp-formattype v-bind:formattype="globalParameter.Lenght_Digital_Cut_Way" v-bind:decimals="globalParameter.Lenght_Decimal" v-bind:unit="detailInfo.Goods_Locate_High_Unit_Name" v-bind:v_id="v_id+'_Goods_Locate_High'">货位高度：</erp-formattype></li>
            <li><erp-formattype v-bind:formattype="globalParameter.Lenght_Digital_Cut_Way" v-bind:decimals="globalParameter.Lenght_Decimal" v-model="detailInfo.Goods_Locate_Length" v-bind:unit="detailInfo.Goods_Locate_Length_Unit_Name" v-bind:v_id="v_id+'_Goods_Locate_Length'">货位长度：</erp-formattype></li>
            <li><erp-formattype v-bind:formattype="globalParameter.Lenght_Digital_Cut_Way" v-bind:decimals="globalParameter.Lenght_Decimal" v-model="detailInfo.Goods_Locate_Width" v-bind:unit="detailInfo.Goods_Locate_Width_Unit_Name" v-bind:v_id="v_id+'_Goods_Locate_Width'">货位宽度：</erp-formattype></li>
            <li><erp-formattype formattype="1" decimals="8" v-model="detailInfo.Coordinate_X" v-bind:v_id="v_id+'_Coordinate_X'">坐标X：</erp-formattype></li>
            <li><erp-formattype formattype="1" decimals="8" v-model="detailInfo.Coordinate_Y" v-bind:v_id="v_id+'_Coordinate_Y'">坐标Y：</erp-formattype></li>
            <li class="last"><label v-bind:id="'Lbl_'+v_id+'_Remark'">备注：</label><span class="text-overflow" v-bind:title="detailInfo.Remark" v-bind:id="v_id+'_Remark'">{{detailInfo.Remark}}</span></li>
        </ul>
    </div>
</script>
<script>
    $.fn.dataTable.ext.errMode = 'none';
    //货位查询
    Vue.component("erp-goodslocatesearch", {
        template: '#temgoodslocatesearch',
        props: {
            //v-model绑定值
            value: {
                type: null
            },
            //验证是否为空
            checkempty: {
                type: [Boolean, String],
                default: false
            },
            //联动值
            linkage: {
                type: null,
            },
            //联动
            islinkage: {
                type: null,
                default: 'false'
            },
            v_id: {
                type: String,
                default: new Date().getTime().toString()
            },
            options: {
                type: Object
            },
            //打开下拉显示模板回调
            template_result: {
                type: Function
            },
            //选择下拉框回调
            template_selection: {
                type: Function
            },
            //是否只读(加遮罩层)
            isshade_bg: {
                type: null,
                default: false
            },
            //是否禁用
            disabled: {
                type: null,
            },
            //lab字体颜色
            labcolor: {
                type: null
            },
            //值字体颜色
            txtcolor: {
                type: null
            },
            //系统key
            system_key: {
                type: String
            },
            //每次检索最大数量
            page_size: { type: null, default: 10 },
            //要检索的字段（字符串数组）
            input_field: {
                type: null
            },
            //判断组件是否在编辑表格中
            istable: {
                type: null,
                default: 'false'
            },
            //货位类型
            goods_locate_type: {
                type: null,
                default: ''
            },
        },
        data: function () {
            return {
                searchbtn: true,
                Shade_Bg: true,
                //提示数据信息
                title: '',
                //判断是赋值还是选值
                repo: false,
                //打开关闭详细信息
                searchDetail: false,
                lab_color: this.labcolor,
                txt_color: this.txtcolor,
                //详细信息数据
                detailInfo: {},
                //库存明细返回数据
                bindData: {},
                n: 0,
                //判断是赋值还是选值
                btn: false,
                $element: '',
                //初始化为空的select2
                select3: '',
                //联动数据
                linkageData: {},
                //仓库id
                storeage_id: '',
                //位数cookie
                globalParameter: PageCommon.GlobalParameter()
            }
        },
        mounted: function () {
            var vm = this;
            if (vm.isshade_bg == 'true' || vm.isshade_bg == true) {
                vm.searchbtn = false;
                vm.Shade_Bg = true;
            } else {
                vm.searchbtn = true;
                vm.Shade_Bg = false;
            }
            if (vm.istable == 'true') {
                $('#search' + vm.v_id).find('.space').addClass('p-0');
            }
            vm.$element = $('#' + vm.v_id);
            if (vm.islinkage == 'false') {
                vm.select2();
            } else {
                vm.init();
            }
        },
        methods: {
            init: function () {
                var vm = this;
                vm.select3 = $('#' + vm.v_id).select2({
                    language: "zh-CN"
                });
            },
            searchBtn: function () {

                var vm = this;
                $('#' + this.v_id + 'Search').mousedown(function () {
                    $(this).find("i").css("margin-left", "5px")
                }).mouseup(function () {
                    $(this).find("i").css("margin-left", "0")
                })
                if (vm.islinkage == 'false') {
                    vm.modalOpen();
                } else {
                    if (vm.storeage_id) {
                        vm.modalOpen();
                    }
                    //else {
                    //    PageCommon.ShowMessageArrayRight("E1001", new Array('客户名称'));
                    //}
                }
            },
            modalOpen: function () {
                var vm = this;
                PageCommon.CurrentWindow().PageCommon.ModalOpen({
                    id: 'GoodsLocateList',
                    title: '货位查询',
                    width: '900px',
                    height: '800px',
                    url: '../../CommonView/BusinessSeach/GoodsLocateList',
                    urlparameter: "system_key=" + vm.system_key + '&goods_locate_type=' + vm.goods_locate_type + '&storeage_id=' + vm.storeage_id,
                    callBack: function (iframeId) {
                        var selectRow = PageCommon.ChildrenFrames(iframeId).PageCommon.GetTableSelectRow('GoodsLocateList');
                        if (selectRow.length != 1) {
                            PageCommon.ChildrenFrames(iframeId).PageCommon.ShowMessageRight("E2008");
                            return;
                        }
                        vm.$emit('input', selectRow[0].Goods_Locate_Id);
                        PageCommon.ChildrenFrames(iframeId).PageCommon.ModalClose();
                    }
                })
            },
            searchBtnDetail: function () {
                var vm = this;
                if (vm.islinkage == 'false') {
                    if (vm.$element.html()) {
                        vm.searchDetail = !vm.searchDetail;
                        var R = $(window).outerWidth() - $('#' + vm.v_id).offset().left;
                        if (R < 500) {
                            $('.' + vm.v_id + '_goodslocatedetail' + '.goodslocateinfo').css({ top: 32, left: -210 });
                            $('.' + vm.v_id + '_goodslocatedetail' + '.goodslocateinfo').addClass('searchleftopen').removeClass('searchrightopen');
                        } else {
                            $('.' + vm.v_id + '_goodslocatedetail' + '.goodslocateinfo').css({ top: 32, left: 20 });
                            $('.' + vm.v_id + '_goodslocatedetail' + '.goodslocateinfo').addClass('searchrightopen').removeClass('searchleftopen');
                        }
                    }
                    //else {
                    //    PageCommon.ShowMessageArrayRight("E1001", new Array('承兑汇票'));
                    //}
                } else {
                    if (vm.select3.html()) {
                        vm.searchDetail = !vm.searchDetail;
                        var R = $(window).outerWidth() - $('#' + vm.v_id).offset().left;
                        if (R < 500) {
                            $('.' + vm.v_id + '_goodslocatedetail' + '.goodslocateinfo').css({ top: 32, left: -210 });
                            $('.' + vm.v_id + '_goodslocatedetail' + '.goodslocateinfo').addClass('searchleftopen').removeClass('searchrightopen');
                        } else {
                            $('.' + vm.v_id + '_goodslocatedetail' + '.goodslocateinfo').css({ top: 32, left: 20 });
                            $('.' + vm.v_id + '_goodslocatedetail' + '.goodslocateinfo').addClass('searchrightopen').removeClass('searchleftopen');
                        }
                    }
                    //else {
                    //    PageCommon.ShowMessageArrayRight("E1001", new Array('承兑汇票'));
                    //}
                }
            },
            select2: function (vlaues) {
                var vm = this;
                var select2 = vm.$element.select2({
                    ajax: {
                        url: "../../CommonView/BusinessSeach/GoodsLocateAutoCompletionData",
                        dataType: 'json',
                        "type": "post",
                        delay: 250,
                        data: function (params) {
                            var searchdata = {};
                            searchdata.System_Key = vm.system_key;
                            searchdata.Current_Page = params.page || 1;
                            searchdata.Page_Size = vm.page_size;
                            searchdata.Input_Field = vm.input_field;
                            searchdata.Input_Value = params.term;
                            searchdata.Goods_Locate_Type = vm.goods_locate_type;
                            if (vlaues) {
                                searchdata.Storeage_Id = vlaues;
                            } else {
                                searchdata.Storeage_Id = '';
                            }
                            return searchdata;
                        },
                        processResults: function (data, params) {
                            params.page = params.page || 1;
                            $("#" + vm.v_id).data("datasource", data.dt);
                            return {
                                results: data.dt,
                                pagination: {
                                    more: (params.page * vm.page_size) < data.Total_Record_Count
                                }
                            };
                        },
                        cache: true
                    },
                    placeholder: '请选择',
                    //tags: true,
                    maximumSelectionLength: 1,
                    escapeMarkup: function (markup) { return markup; },
                    minimumInputLength: 0,
                    language: "zh-CN",
                    //打开下拉框
                    templateResult: function (repo) {
                        if (repo.loading) return "正在加载...";
                        if (vm.template_result) {
                            var rtn = vm.template_result(repo);
                            if (rtn) {
                                return rtn;
                            }
                        }
                        return repo.name;
                    },
                    //选择数据
                    templateSelection: function formatRepoSelection(repo) {
                        vm.n += 1;
                        if (!vm.btn) {//判断是否是选择下拉框数据
                            if (vm.n == 1) {
                                vm.detailInfo = repo;
                                vm.repo = true;
                                vm.$emit('input', vm.detailInfo.Goods_Locate_Id);
                                if (vm.template_selection) {
                                    vm.template_selection(vm.detailInfo);
                                }
                            }
                        } else {
                            if (vm.n == 1) {
                                vm.btn = false;
                            }
                        }
                        setTimeout(function () {
                            $('#search' + vm.v_id + ' .select2-selection__choice').attr('title', repo.Accept_Bill_Number || repo.text);
                            $('#search' + vm.v_id + ' .select2-selection__choice').css('color', vm.txt_color);
                            $('#search' + vm.v_id + ' .select2-selection__choice__remove').hide();
                        })
                        vm.title = repo.name || repo.text;
                        return repo.name || repo.text;
                    }
                });
                //vm.$element.on('change', function () {
                //    if (vm.template_selection) {
                //        vm.template_selection(vm.detailInfo);
                //    }
                //})
                vm.$element.on('select2:open', function (event) {
                    //下拉框宽度
                    var w = $('.select2-dropdown--below').width();
                    $('.select2-dropdown--below').addClass('select2-dropdown-new');
                    $('.select2-dropdown--below').css('min-width', w);
                });
                vm.$element.on('select2:opening', function (event) {
                    vm.$emit('input', '');
                    var $searchfield = $(this).parent().find('.select2-search__field');
                    $searchfield.show();
                });
                vm.$element.on('select2:close', function (event) {
                    var $searchfield = $(this).parent().find('.select2-search__field');
                    $searchfield.hide();
                });
            },
            searchValue: function (values) {
                var vm = this;
                if (!this.repo) {
                    var searchdata = {};
                    searchdata.System_Key = vm.system_key;
                    searchdata.Input_Field = ["Goods_Locate_Id"];
                    searchdata.Input_Value = values;
                    searchdata.Goods_Locate_Type = vm.goods_locate_type;
                    if (vm.storeage_id) {
                        searchdata.Storeage_Id = vm.storeage_id;
                    } else {
                        searchdata.Storeage_Id = '';
                    }
                    $.ajax({
                        url: "../../CommonView/BusinessSeach/GoodsLocateAutoCompletionData",
                        "type": "post",
                        data: searchdata,
                        success: function (data) {
                            vm.n = 0;
                            vm.btn = true;
                            vm.$element.html('');
                            if (data.dt && data.dt.length > 0) {
                                vm.bindData = data.dt[0];
                                vm.detailInfo = vm.bindData;
                                vm.$emit('input', vm.detailInfo.Goods_Locate_Id);
                                vm.$element.html($("<option selected = \"true\"></option>").val(vm.bindData.Goods_Locate_Id).html(vm.bindData.Goods_Locate_Name));
                            } else {
                                vm.detailInfo = '';
                                vm.$emit('input', '');
                            }
                            vm.searchDetail = false;
                            if (vm.template_selection) {
                                vm.template_selection(vm.detailInfo);
                            }
                        }
                    });
                } else {
                    vm.repo = false;
                }
            }
        },
        watch: {
            value: function (val) {
                var vm = this;
                if (val) {
                    vm.searchValue(val);
                } else {
                    vm.n = 0;
                    vm.searchDetail = false;
                    vm.detailInfo = '';
                    vm.$emit('input', '');
                    vm.$element.html('');
                    if (vm.template_selection) {
                        vm.template_selection(vm.detailInfo);
                    }
                }
            },
            isshade_bg: function (value) {
                if (value == true) {
                    this.Shade_Bg = true;
                    this.searchbtn = false;
                } else {
                    this.Shade_Bg = false;
                    this.searchbtn = true;
                }
            },
            linkage: function (value) {
                var vm = this;
                if (value) {
                    vm.linkageData = value;
                } else {
                    vm.$emit('input', '');
                    vm.init();
                }
            },
            linkageData: function (val) {
                if (val) {
                    var vm = this;
                    vm.select3.select2("destroy");
                    vm.storeage_id = val;
                    vm.select2(val);
                }
            }
        }
    })
    //承兑汇票查询
    Vue.component("erp-acceptbillsearch", {
        template: '#temacceptbillsearch',
        props: {
            value: {
                type: null
            },
            //验证是否为空
            checkempty: {
                type: [Boolean, String],
                default: false
            },
            //联动
            linkage: {
                type: null,
            },
            //联动
            islinkage: {
                type: null,
                default: 'false'
            },
            v_id: {
                type: String,
                default: new Date().getTime().toString()
            },
            options: {
                type: Object
            },
            //打开下拉显示模板回调
            template_result: {
                type: Function
            },
            //选择下拉框回调
            template_selection: {
                type: Function
            },
            //是否只读(加遮罩层)
            isshade_bg: {
                type: null,
                default: false
            },
            //是否禁用
            disabled: {
                type: null,
            },
            //lab字体颜色
            labcolor: {
                type: null
            },
            //值字体颜色
            txtcolor: {
                type: null
            },
            //系统key
            system_key: {
                type: String
            },
            //每次检索最大数量
            page_size: { type: null, default: 10 },
            //要检索的字段（字符串数组）
            input_field: {
                type: null
            },
            //判断组件是否在编辑表格中
            istable: {
                type: null,
                default: 'false'
            },
            //承兑汇票状态
            accept_bill_status: {
                type: null,
                default: ''
            },
        },
        data: function () {
            return {
                searchbtn: true,
                Shade_Bg: true,
                //提示数据信息
                title: '',
                //判断是赋值还是选值
                repo: false,
                //打开关闭详细信息
                searchDetail: false,
                lab_color: this.labcolor,
                txt_color: this.txtcolor,
                //详细信息数据
                detailInfo: {},
                //库存明细返回数据
                bindData: {},
                n: 0,
                //判断是赋值还是选值
                btn: false,
                $element: '',
                //初始化为空的select2
                select3: '',
                //联动数据
                linkageData: {},
                //客户id
                objectId: '',
                //位数cookie
                globalParameter: PageCommon.GlobalParameter()
            }
        },
        mounted: function () {
            var vm = this;
            if (vm.isshade_bg == 'true' || vm.isshade_bg == true) {
                vm.searchbtn = false;
                vm.Shade_Bg = true;
            } else {
                vm.searchbtn = true;
                vm.Shade_Bg = false;
            }
            if (vm.istable == 'true') {
                $('#search' + vm.v_id).find('.space').addClass('p-0');
            }
            vm.$element = $('#' + vm.v_id);
            if (vm.islinkage == 'false') {
                vm.select2();
            } else {
                vm.init();
            }
        },
        methods: {
            init: function () {
                var vm = this;
                vm.select3 = $('#' + vm.v_id).select2({
                    language: "zh-CN"
                });
            },
            searchBtn: function () {

                var vm = this;
                $('#' + this.v_id + 'Search').mousedown(function () {
                    $(this).find("i").css("margin-left", "5px")
                }).mouseup(function () {
                    $(this).find("i").css("margin-left", "0")
                })
                if (vm.islinkage == 'false') {
                    vm.modalOpen();
                } else {
                    if (vm.objectId) {
                        vm.modalOpen();
                    }
                    //else {
                    //    PageCommon.ShowMessageArrayRight("E1001", new Array('客户名称'));
                    //}
                }
            },
            modalOpen: function () {
                var vm = this;
                PageCommon.CurrentWindow().PageCommon.ModalOpen({
                    id: 'AcceptBillList',
                    title: '承兑汇票查询',
                    width: '900px',
                    height: '800px',
                    url: '../../CommonView/BusinessSeach/AcceptBillList',
                    urlparameter: "system_key=" + vm.system_key + '&accept_bill_status=' + vm.accept_bill_status + '&objectId=' + vm.objectId,
                    callBack: function (iframeId) {
                        var selectRow = PageCommon.ChildrenFrames(iframeId).PageCommon.GetTableSelectRow('AcceptBillList');
                        if (selectRow.length != 1) {
                            PageCommon.ChildrenFrames(iframeId).PageCommon.ShowMessageRight("E2008");
                            return;
                        }
                        vm.$emit('input', selectRow[0].Accept_Bill_Id);
                        PageCommon.ChildrenFrames(iframeId).PageCommon.ModalClose();
                    }
                })
            },
            searchBtnDetail: function () {
                var vm = this;
                if (vm.islinkage == 'false') {
                    if (vm.$element.html()) {
                        vm.searchDetail = !vm.searchDetail;
                        var R = $(window).outerWidth() - $('#' + vm.v_id).offset().left;
                        if (R < 500) {
                            $('.' + vm.v_id + '_acceptbilldetail' + '.acceptbillinfo').css({ top: 32, left: -210 });
                            $('.' + vm.v_id + '_acceptbilldetail' + '.acceptbillinfo').addClass('searchleftopen').removeClass('searchrightopen');
                        } else {
                            $('.' + vm.v_id + '_acceptbilldetail' + '.acceptbillinfo').css({ top: 32, left: 20 });
                            $('.' + vm.v_id + '_acceptbilldetail' + '.acceptbillinfo').addClass('searchrightopen').removeClass('searchleftopen');
                        }
                    }
                    //else {
                    //    PageCommon.ShowMessageArrayRight("E1001", new Array('承兑汇票'));
                    //}
                } else {
                    if (vm.select3.html()) {
                        vm.searchDetail = !vm.searchDetail;
                        var R = $(window).outerWidth() - $('#' + vm.v_id).offset().left;
                        if (R < 500) {
                            $('.' + vm.v_id + '_acceptbilldetail' + '.acceptbillinfo').css({ top: 32, left: -210 });
                            $('.' + vm.v_id + '_acceptbilldetail' + '.acceptbillinfo').addClass('searchleftopen').removeClass('searchrightopen');
                        } else {
                            $('.' + vm.v_id + '_acceptbilldetail' + '.acceptbillinfo').css({ top: 32, left: 20 });
                            $('.' + vm.v_id + '_acceptbilldetail' + '.acceptbillinfo').addClass('searchrightopen').removeClass('searchleftopen');
                        }
                    }
                    //else {
                    //    PageCommon.ShowMessageArrayRight("E1001", new Array('承兑汇票'));
                    //}
                }
            },
            select2: function (vlaues) {
                var vm = this;
                var select2 = vm.$element.select2({
                    ajax: {
                        url: "../../CommonView/BusinessSeach/AcceptBillAutoCompletionData",
                        dataType: 'json',
                        "type": "post",
                        delay: 250,
                        data: function (params) {
                            var searchdata = {};
                            searchdata.System_Key = vm.system_key;
                            searchdata.Current_Page = params.page || 1;
                            searchdata.Page_Size = vm.page_size;
                            searchdata.Input_Field = vm.input_field;
                            searchdata.Input_Value = params.term;
                            searchdata.Accept_Bill_Status = vm.accept_bill_status;
                            if (vlaues) {
                                searchdata.Object_Id = vlaues;
                            } else {
                                searchdata.Object_Id = '';
                            }
                            return searchdata;
                        },
                        processResults: function (data, params) {
                            params.page = params.page || 1;
                            $("#" + vm.v_id).data("datasource", data.dt);
                            return {
                                results: data.dt,
                                pagination: {
                                    more: (params.page * vm.page_size) < data.Total_Record_Count
                                }
                            };
                        },
                        cache: true
                    },
                    placeholder: '请选择',
                    //tags: true,
                    maximumSelectionLength: 1,
                    escapeMarkup: function (markup) { return markup; },
                    minimumInputLength: 0,
                    language: "zh-CN",
                    //打开下拉框
                    templateResult: function (repo) {
                        if (repo.loading) return "正在加载...";
                        if (vm.template_result) {
                            var rtn = vm.template_result(repo);
                            if (rtn) {
                                return rtn;
                            }
                        }
                        var markup = '';
                        if (repo.Accept_Bill_Number) {
                            markup += repo.Accept_Bill_Number + '&nbsp;&nbsp;'
                        }
                        if (repo.Accept_Bill_Account) {
                            markup += repo.Accept_Bill_Account + '&nbsp;&nbsp;'
                        }
                        if (repo.Accept_End_Date) {
                            markup += repo.Accept_End_Date + '&nbsp;&nbsp;'
                        }
                        if (repo.Object_Name) {
                            markup += repo.Object_Name + '&nbsp;&nbsp;'
                        }
                        return markup;
                    },
                    //选择数据
                    templateSelection: function formatRepoSelection(repo) {
                        vm.n += 1;
                        if (!vm.btn) {//判断是否是选择下拉框数据
                            if (vm.n == 1) {
                                vm.detailInfo = repo;
                                vm.repo = true;
                                vm.$emit('input', vm.detailInfo.Accept_Bill_Id);
                                if (vm.template_selection) {
                                    vm.template_selection(vm.detailInfo);
                                }
                            }
                        } else {
                            if (vm.n == 1) {
                                vm.btn = false;
                            }
                        }
                        setTimeout(function () {
                            $('#search' + vm.v_id + ' .select2-selection__choice').attr('title', repo.Accept_Bill_Number || repo.text);
                            $('#search' + vm.v_id + ' .select2-selection__choice').css('color', vm.txt_color);
                            $('#search' + vm.v_id + ' .select2-selection__choice__remove').hide();
                        })
                        vm.title = repo.Accept_Bill_Number || repo.text;
                        return repo.Accept_Bill_Number || repo.text;
                    }
                });
                //vm.$element.on('change', function () {
                //    if (vm.template_selection) {
                //        vm.template_selection(vm.detailInfo);
                //    }
                //})
                vm.$element.on('select2:open', function (event) {
                    //下拉框宽度
                    var w = $('.select2-dropdown--below').width();
                    $('.select2-dropdown--below').addClass('select2-dropdown-new');
                    $('.select2-dropdown--below').css('min-width', w);
                });
                vm.$element.on('select2:opening', function (event) {
                    vm.$emit('input', '');
                    var $searchfield = $(this).parent().find('.select2-search__field');
                    $searchfield.show();
                });
                vm.$element.on('select2:close', function (event) {
                    var $searchfield = $(this).parent().find('.select2-search__field');
                    $searchfield.hide();
                });
                //vm.searchValue(vlaues);
            },
            searchValue: function (values) {
                var vm = this;
                if (!this.repo) {
                    var searchdata = {};
                    searchdata.Current_Page = 1;
                    searchdata.System_Key = vm.system_key;
                    searchdata.Input_Field = ["Accept_Bill_Id"];
                    searchdata.Accept_Bill_Status = vm.accept_bill_status;
                    searchdata.Input_Value = values;
                    if (vm.objectId) {
                        searchdata.Object_Id = vm.objectId;
                    } else {
                        searchdata.Object_Id = '';
                    }
                    $.ajax({
                        url: "../../CommonView/BusinessSeach/AcceptBillAutoCompletionData",
                        "type": "post",
                        data: searchdata,
                        success: function (data) {
                            vm.n = 0;
                            vm.btn = true;
                            vm.$element.html('');
                            if (data.dt && data.dt.length > 0) {
                                vm.bindData = data.dt[0];
                                vm.detailInfo = vm.bindData;
                                vm.$emit('input', vm.detailInfo.Accept_Bill_Id);
                                vm.$element.html($("<option selected = \"true\"></option>").val(vm.bindData.Accept_Bill_Id).html(vm.bindData.Accept_Bill_Number));
                            } else {
                                vm.detailInfo = '';
                                vm.$emit('input', '');
                            }
                            vm.searchDetail = false;
                            if (vm.template_selection) {
                                vm.template_selection(vm.detailInfo);
                            }
                        }
                    });
                } else {
                    vm.repo = false;
                }
            }
        },
        watch: {
            value: function (val) {
                var vm = this;
                if (val) {
                    vm.searchValue(val);
                } else {
                    vm.n = 0;
                    vm.searchDetail = false;
                    vm.detailInfo = '';
                    vm.$emit('input', '');
                    vm.$element.html('');
                    if (vm.template_selection) {
                        vm.template_selection(vm.detailInfo);
                    }
                }
            },
            isshade_bg: function (value) {
                if (value == true) {
                    this.Shade_Bg = true;
                    this.searchbtn = false;
                } else {
                    this.Shade_Bg = false;
                    this.searchbtn = true;
                }
            },
            linkage: function (value) {
                var vm = this;
                if (value) {
                    vm.linkageData = value;
                } else {
                    vm.$emit('input', '');
                    vm.init();
                }
            },
            linkageData: function (val) {
                if (val) {
                    var vm = this;
                    vm.select3.select2("destroy");
                    vm.objectId = val;
                    vm.select2(val);
                }
            }
        }
    })
    //销售发票查询
    Vue.component("erp-invoicesearch", {
        template: '#teminvoicesearch',
        props: {
            value: {
                type: null
            },
            //验证是否为空
            checkempty: {
                type: [Boolean, String],
                default: false
            },
            v_id: {
                type: String,
                default: new Date().getTime().toString()
            },
            options: {
                type: Object
            },
            //打开下拉显示模板回调
            template_result: {
                type: Function
            },
            //选择下拉框回调
            template_selection: {
                type: Function
            },
            //是否只读(加遮罩层)
            isshade_bg: {
                type: null,
                default: false
            },
            //是否禁用
            disabled: {
                type: null,
            },
            //lab字体颜色
            labcolor: {
                type: null
            },
            //值字体颜色
            txtcolor: {
                type: null
            },
            //系统key
            system_key: {
                type: String
            },
            //每次检索最大数量
            page_size: { type: null, default: 10 },
            //要检索的字段（字符串数组）
            input_field: {
                type: null
            },
            //判断组件是否在编辑表格中
            istable: {
                type: null,
                default: 'false'
            },
            //发票类型
            seach_type: {
                type: null,
                default: '0'   //0销售发票   1采购发票
            },
            //销售发票状态  采购发票状态
            invoice_status: {
                type: null,
                default: ''
            }
        },
        data: function () {
            return {
                searchbtn: true,
                Shade_Bg: true,
                //提示数据信息
                title: '',
                //判断是赋值还是选值
                repo: false,
                //打开关闭详细信息
                searchDetail: false,
                lab_color: this.labcolor,
                txt_color: this.txtcolor,
                //详细信息数据
                detailInfo: {},
                //弹窗地址
                searchUrl: '../../CommonView/BusinessSeach/SaleInvoiceList',
                //弹窗标题
                searchTitle: '销售发票查询',
                //弹窗销售表格id
                invoiceId: 'SaleInvoiceList',
                //销售明细返回数据
                bindData: {},
                $element: '',
                n: 0,
                //判断是赋值还是选值
                btn: false,
                //位数cookie
                globalParameter: PageCommon.GlobalParameter()
            }
        },
        mounted: function () {
            var vm = this;
            if (vm.isshade_bg == 'true' || vm.isshade_bg == true) {
                vm.searchbtn = false;
                vm.Shade_Bg = true;
            } else {
                vm.searchbtn = true;
                vm.Shade_Bg = false;
            }
            if (vm.istable == 'true') {
                $('#search' + vm.v_id).find('.space').addClass('p-0');
            }
            this.select2();
        },
        methods: {
            searchBtn: function () {
                var vm = this;
                $('#' + this.v_id + 'Search').mousedown(function () {
                    $(this).find("i").css("margin-left", "5px");
                }).mouseup(function () {
                    $(this).find("i").css("margin-left", "0");
                })
                if (vm.seach_type == '1') {
                    vm.searchTitle = '采购发票';
                    vm.searchUrl = ''
                    vm.invoiceId = ''
                }
                PageCommon.CurrentWindow().PageCommon.ModalOpen({
                    id: vm.invoiceId,
                    title: vm.searchTitle,
                    width: '900px',
                    height: '800px',
                    btn: ['添加'],
                    url: vm.searchUrl,
                    urlparameter: "system_key=" + vm.system_key + "&seach_type=" + vm.seach_type + '&invoice_status=' + vm.invoice_status,
                    callBack: function (iframeId) {
                        var selectRow = PageCommon.ChildrenFrames(iframeId).PageCommon.GetTableSelectRow('SaleInvoiceList');
                        if (selectRow.length != 1) {
                            PageCommon.ChildrenFrames(iframeId).PageCommon.ShowMessageRight("E2008");
                            return;
                        }
                        vm.$emit('input', selectRow[0].Sale_Invoice_Id);
                        PageCommon.ChildrenFrames(iframeId).PageCommon.ModalClose();
                    }
                })
            },
            searchBtnDetail: function () {
                var vm = this;
                if (this.$element.html()) {
                    this.searchDetail = !this.searchDetail;
                    var R = $(window).outerWidth() - $('#' + this.v_id).offset().left;
                    if (R < 500) {
                        $('.' + this.v_id + '_invoicedetail' + '.invoiceinfo').css({ top: 32, left: -210 });
                        $('.' + this.v_id + '_invoicedetail' + '.invoiceinfo').addClass('searchleftopen').removeClass('searchrightopen');
                    } else {
                        $('.' + this.v_id + '_invoicedetail' + '.invoiceinfo').css({ top: 32, left: 20 });
                        $('.' + this.v_id + '_invoicedetail' + '.invoiceinfo').addClass('searchrightopen').removeClass('searchleftopen');
                    }
                }
                //else {
                //    PageCommon.ShowMessageRight("E2008");
                //}
            },
            select2: function (vlaues) {
                var vm = this;
                vm.$element = $('#' + vm.v_id);
                var select2 = vm.$element.select2({
                    ajax: {
                        url: "../../CommonView/BusinessSeach/InvoiceAutoCompletionData",
                        dataType: 'json',
                        "type": "post",
                        delay: 250,
                        data: function (params) {
                            var searchdata = {};
                            searchdata.System_Key = vm.system_key;
                            searchdata.Current_Page = params.page || 1;
                            searchdata.Page_Size = vm.page_size;
                            searchdata.Input_Field = vm.input_field;
                            searchdata.Input_Value = params.term;
                            searchdata.Seach_Type = vm.seach_type;
                            searchdata.Invoice_Status = vm.invoice_status;
                            return searchdata;
                        },
                        processResults: function (data, params) {
                            params.page = params.page || 1;
                            $("#" + vm.v_id).data("datasource", data.dt);
                            return {
                                results: data.dt,
                                pagination: {
                                    more: (params.page * vm.page_size) < data.Total_Record_Count
                                }
                            };
                        },
                        cache: true
                    },
                    placeholder: '请选择',
                    //tags: true,
                    maximumSelectionLength: 1,
                    escapeMarkup: function (markup) { return markup; },
                    minimumInputLength: 0,
                    language: "zh-CN",
                    //打开下拉框
                    templateResult: function (repo) {
                        if (repo.loading) return "正在加载...";
                        if (vm.template_result) {
                            var rtn = vm.template_result(repo);
                            if (rtn) {
                                return rtn;
                            }
                        }
                        var markup = '';
                        if (repo.Invoice_Number) {
                            markup += repo.Invoice_Number + '&nbsp;&nbsp;'
                        }
                        if (repo.Invoice_Employee_Name) {
                            markup += repo.Invoice_Employee_Name + '&nbsp;&nbsp;'
                        }
                        if (repo.Invoice_Date) {
                            markup += repo.Invoice_Date + '&nbsp;&nbsp;'
                        }
                        if (repo.Customer_Name) {
                            markup += repo.Customer_Name + '&nbsp;&nbsp;'
                        }
                        return markup;
                    },
                    //选择数据
                    templateSelection: function formatRepoSelection(repo) {
                        vm.n += 1;
                        if (!vm.btn) {//判断是否是选择下拉框数据
                            if (vm.n == 1) {
                                vm.detailInfo = repo;
                                vm.repo = true;
                                vm.$emit('input', vm.detailInfo.Sale_Invoice_Id);
                                if (vm.template_selection) {
                                    vm.template_selection(vm.detailInfo);
                                }
                            }
                        } else {
                            if (vm.n == 1) {
                                vm.btn = false;
                            }
                        }
                        setTimeout(function () {
                            $('#search' + vm.v_id + ' .select2-selection__choice').attr('title', repo.Invoice_Number || repo.text);
                            $('#search' + vm.v_id + ' .select2-selection__choice').css('color', vm.txt_color);
                            $('#search' + vm.v_id + ' .select2-selection__choice__remove').hide();
                        })
                        vm.title = repo.Invoice_Number || repo.text;
                        return repo.Invoice_Number || repo.text;
                    }
                });
                //vm.$element.on('change', function () {
                //    if (vm.template_selection) {
                //        vm.template_selection(vm.detailInfo);
                //    }
                //})
                vm.$element.on('select2:open', function (event) {
                    //下拉框宽度
                    var w = $('.select2-dropdown--below').width();
                    $('.select2-dropdown--below').addClass('select2-dropdown-new');
                    $('.select2-dropdown--below').css('min-width', w);
                });
                vm.$element.on('select2:opening', function (event) {
                    vm.$emit('input', '');
                    var $searchfield = $(this).parent().find('.select2-search__field');
                    $searchfield.show();
                });
                vm.$element.on('select2:close', function (event) {
                    var $searchfield = $(this).parent().find('.select2-search__field');
                    $searchfield.hide();
                });
            },
            searchValue: function (value) {
                var vm = this;
                if (!this.repo) {
                    var searchdata = {};
                    searchdata.Current_Page = 1;
                    searchdata.System_Key = vm.system_key;
                    searchdata.Input_Field = ["Sale_Invoice_Id"];
                    searchdata.Input_Value = value;
                    searchdata.Seach_Type = vm.seach_type;
                    searchdata.Invoice_Status = vm.invoice_status;
                    $.ajax({
                        url: "../../CommonView/BusinessSeach/InvoiceAutoCompletionData",
                        "type": "post",
                        data: searchdata,
                        success: function (data) {
                            if (!data.dt || data.dt.length < 1) {
                                return;
                            }
                            vm.bindData = data.dt[0];
                            vm.n = 0;
                            vm.btn = true;
                            vm.detailInfo = vm.bindData;
                            vm.$element.html('');
                            vm.$emit('input', vm.detailInfo.Sale_Invoice_Id);
                            if (vm.template_selection) {
                                if (vm.detailInfo) {
                                    vm.template_selection(vm.detailInfo);
                                }
                            }
                            vm.$element.html($("<option selected = \"true\"></option>").val(value).html(vm.bindData.Invoice_Number));
                        }
                    });
                } else {
                    vm.repo = false;
                }
            }
        },
        watch: {
            value: function (value) {
                var vm = this;
                if (value) {
                    vm.searchValue(value);
                } else {
                    vm.n = 0;
                    vm.searchDetail = false;
                    vm.detailInfo = '';
                    vm.$emit('input', '');
                    vm.$element.html('');
                    if (vm.template_selection) {
                        vm.template_selection(vm.detailInfo);
                    }
                }
            },
            isshade_bg: function (value) {
                if (value == true) {
                    this.Shade_Bg = true;
                    this.searchbtn = false;
                } else {
                    this.Shade_Bg = false;
                    this.searchbtn = true;
                }
            }
        },
        //linkage: function (value) {
        //    this.select2(value);
        //},
        options: function (options) {
            // update options
            $(this.$el).select2({ data: options })
        }
    })
    //型号范围查询
    Vue.component('erp-productrange', {
        template: '#temproductrange',
        props: {
            placeholder: {
                type: String,
                default: ''
            },
            //是否只读
            readonly: {
                type: null,
                default: false
            },
            checkempty: {
                type: [Boolean, String],
                default: false
            },
            checklength: {
                type: [Number, String]
            },
            //长度验证两者之间
            checkbetweenlength: {
                type: [String]
            },
            //值两者之间验证
            checkbetweenvalue: {
                type: [String]
            },
            //两者之间必须输入一个
            checkemptyonebetweentwo: {
                type: [Boolean, String],
                default: false
            },
            relationcontrol: {
                type: String
            },
            //手机验证
            checkmobilphone: {
                type: [Boolean, String]
            },
            checknumber: {
                type: [Boolean, String]
            },
            checktelephone: {
                type: [Boolean, String]
            },
            checkcardno: {
                type: [Boolean, String]
            },
            checkbusnumverify: {
                type: [Boolean, String]
            },
            checknumberorengish: {
                type: [Boolean, String]
            },
            checksytemdatecompare: {
                type: [Boolean, String]
            },
            checkemialcompare: {
                type: [Boolean, String]
            },
            checkusername: {
                type: [Boolean, String]
            },
            field_name: {
                type: String
            },
            query_type: {
                type: String
            },
            expression: {
                type: String
            },
            query_type1: {
                type: String
            },
            expression1: {
                type: String
            },
            child: {
                type: null,
                default: 'false'
            },
            child1: {
                type: null,
                default: 'false'
            },
            v_id: {
                type: String,
                default: new Date().getTime().toString()
            },
            //是否只读(加遮罩层)
            isshade_bg: {
                type: null,
                default: false
            },
            productrange: {
                type: null
            },
            labcolor: {
                type: null
            },
            txtcolor: {
                type: null
            },
            //型号查询来源
            seach_type: {
                type: null,
                default: '3'  //0 代表库存汇总   1代表库存明细查询  2代表其他弹窗页面 3代表分库房 4代表库存明细汇总查询
            },
            //系统key
            system_key: {
                type: null,
                default: 'BasicData'
            },
            //供应商、型号单据类型
            is_purchase: {
                type: null,
                default: '0'  //0 代表统购 1代表外购 3代表分库房
            },
            //是否拆分
            is_split: {
                type: null, //默认空值是拆分  0表示不拆分
            },
            //型号查询来源 2代表其他弹窗页面
            searchparameter: {
                type: null,
                default: function () {
                    return {
                        searchUrl: '',
                        searchTitle: '',
                        inventoryId: '',
                        width: '900',
                        height: '800',
                    }
                }
            },
            //型号打开弹窗参数回调函数
            urlparameterback: {
                type: Function
            },
        },
        data: function () {
            return {
                first0: 'first0',
                Shade_Bg: this.isshade_bg,
                Common: this.productrange,
                lab_color: this.labcolor,
                txt_color: this.txtcolor,
                Readonly: this.readonly,
                //Common: {
                //    first:"",
                //    second:""
                //}
            }
        },
        mounted: function () {
            $('#' + this.v_id + '_SearchStart').parents('.outer-lg').css({ 'border': '0', 'background': '#e7eaeb' });
            $('#' + this.v_id + '_SearchStart').focus(function () {
                $(this).parent().removeClass('textrange').addClass('border-color');
            })
            $('#' + this.v_id + '_SearchEnd').focus(function () {
                $(this).parent().removeClass('textrange').addClass('border-color');
            })
            $('#' + this.v_id + '_SearchStart').blur(function () {
                $(this).parent().removeClass('border-color').addClass('textrange');
            })
            $('#' + this.v_id + '_SearchEnd').blur(function () {
                $(this).parent().removeClass('border-color').addClass('textrange');
            })
        },
        methods: {
            productsearch: function (index) {
                var vm = this;
                $('.' + this.v_id + 'Search').mousedown(function () {
                    $(this).find("i").css("margin-left", "5px")
                }).mouseup(function () {
                    $(this).find("i").css("margin-left", "0")
                })
                if (vm.seach_type == '0') {
                    vm.search_id = 'InventorySummaryList';
                    vm.search_title = '库存汇总查询';
                    vm.search_width = '900';
                    vm.search_height = '800';
                    vm.search_url = '../../CommonView/BusinessSeach/InventorySummaryList';
                    vm.search_parameter = "seach_type=" + vm.seach_type + "&system_key=" + vm.system_key + "&is_purchase=" + vm.is_purchase + "&is_split=" + vm.is_split;
                    vm.search_name = "Product_Name";
                } else if (vm.seach_type == '1') {
                    vm.search_id = 'InventoryDetailList';
                    vm.search_title = '库存明细查询';
                    vm.search_width = '900';
                    vm.search_height = '800';
                    vm.search_url = '../../CommonView/BusinessSeach/InventoryDetailList';
                    vm.search_parameter = "seach_type=" + vm.seach_type + "&system_key=" + vm.system_key + "&is_purchase=" + vm.is_purchase + "&is_split=" + vm.is_split;
                    vm.search_name = "Product_Name";
                } else if (vm.seach_type == '2') {
                    if (vm.searchparameter) {
                        if (vm.urlparameterback) {
                            var rtn = vm.urlparameterback();
                            if (rtn) {
                                vm.search_parameter = rtn;
                                vm.search_id = vm.searchparameter.inventoryId;
                                vm.search_title = vm.searchparameter.searchTitle;
                                vm.search_width = vm.searchparameter.width;
                                vm.search_height = vm.searchparameter.height;
                                vm.search_url = vm.searchparameter.searchUrl;
                                vm.search_name = "Product_Name";
                            } else {
                                return;
                            }
                        } else {
                            vm.search_id = vm.searchparameter.inventoryId;
                            vm.search_title = vm.searchparameter.searchTitle;
                            vm.search_width = vm.searchparameter.width;
                            vm.search_height = vm.searchparameter.height;
                            vm.search_url = vm.searchparameter.searchUrl;
                            vm.search_name = "Product_Name";
                        }
                    }
                } else if (vm.seach_type == '3') {
                    vm.search_id = 'ProductList';
                    vm.search_title = '型号查询';
                    vm.search_width = '900';
                    vm.search_height = '800';
                    vm.search_url = '../../CommonView/BusinessSeach/InventorySummaryList';
                    vm.search_parameter = "seach_type=" + vm.seach_type + "&system_key=" + vm.system_key + "&is_purchase=" + vm.is_purchase + "&is_split=" + vm.is_split;
                    vm.search_name = "Product_Name";
                } else if (vm.seach_type == '4') {
                    vm.search_id = 'InventoryDetailSumList';
                    vm.search_title = '库存明细查询';
                    vm.search_width = '900';
                    vm.search_height = '800';
                    vm.searchUrl = '../../CommonView/BusinessSeach/InventorySummaryList';
                    vm.urlparameter = "seach_type=" + vm.seach_type + "&system_key=" + vm.system_key + "&is_purchase=" + vm.is_purchase + "&is_split=" + vm.is_split + "&storeage_id=" + vm.where_parameter_list[0].Condition_Value1;
                    vm.search_name = "Product_Name";
                }
                PageCommon.CurrentWindow().PageCommon.ModalOpen({
                    id: vm.search_id,
                    title: vm.search_title,
                    width: vm.search_width + 'px',
                    height: vm.search_height + 'px',
                    btn: ['添加'],
                    url: vm.search_url,
                    urlparameter: vm.search_parameter,
                    callBack: function (iframeId) {
                        var selectRow = PageCommon.ChildrenFrames(iframeId).PageCommon.GetTableSelectRow(vm.search_id);
                        if (selectRow.length != 1) {
                            PageCommon.ChildrenFrames(iframeId).PageCommon.ShowMessageRight("E2008");
                            return;
                        }
                        if (index == '1') {
                            vm.Common.first = selectRow[0][vm.search_name];
                        } else {
                            vm.Common.second = selectRow[0][vm.search_name];
                        }

                        PageCommon.ChildrenFrames(iframeId).PageCommon.ModalClose();
                    }
                })
            },
            selectAll: function (event) {
                event.target.select()
            }
        },
        watch: {
            readonly: function (val) {
                if (val == true) {
                    this.Readonly = true;
                } else {
                    this.Readonly = false;
                }
            },
            isshade_bg: function (value) {
                if (value == true) {
                    this.Shade_Bg = true
                } else {
                    this.Shade_Bg = false
                }
            }
        }
    });
    //搜索文本框
    Vue.component('erp-searchtext', {
        template: '#temsearchtext',
        props: {
            //默认值
            placeholder: {
                type: String, default: ''
            },
            ismustselect: {
                type: null,
                default: 'false'
            },
            type: {
                type: String
            },
            value: {
                type: null
            },
            //是否只读
            readonly: {
                type: null,
                default: false
            },
            //是否添加验证小星星
            checkempty: {
                type: null,
                default: false
            },
            //两者之间必须输入一个
            checkemptyonebetweentwo: {
                type: [Boolean, String],
                default: false
            },
            relationcontrol: {
                type: String
            },
            //长度验证
            checklength: {
                type: [Number, String]
            },
            //数字位数验证
            checknumberlength: {
                type: [Number, String]
            },
            //长度验证两者之间
            checkbetweenlength: {
                type: [String]
            },
            //值两者之间验证
            checkbetweenvalue: {
                type: [String]
            },
            //手机验证
            checkmobilphone: {
                type: [Boolean, String]
            },
            //判断字符串是否是数字
            checknumber: {
                type: [Boolean, String]
            },
            //电话号码验证
            checktelephone: {
                type: [Boolean, String]
            },
            //身份证验证
            checkcardno: {
                type: [Boolean, String]
            },
            //车牌号验证
            checkbusnumverify: {
                type: [Boolean, String]
            },
            //判断字符串是否是英文或数字
            checknumberorengish: {
                type: [Boolean, String]
            },
            //验证是否大于或小于或等于系统日期
            checksytemdatecompare: {
                type: [Boolean, String]
            },
            //邮箱验证 IsEmial
            checkemialcompare: {
                type: [Boolean, String]
            },
            //用户名验证
            checkusername: {
                type: [Boolean, String]
            },
            field_name: {
                type: String
            },
            query_type: {
                type: String
            },
            expression: {
                type: String
            },
            child: {
                type: null,
                default: 'false'
            },
            v_id: {
                type: String,
                default: new Date().getTime().toString()
            },
            //(加遮罩层)
            isshade_bg: {
                type: null,
                default: false
            },
            //是否需要搜索
            issearch: {
                type: null,
                default: true
            },
            //lab字体颜色
            labcolor: {
                type: null
            },
            //内容字体颜色
            txtcolor: {
                type: null
            },
            //收货人查询类型
            receiver_type: {
                type: null,
                default: '0'  // 0代表客户  1代表供应商 2代表收票人
            },
            //系统key
            system_key: {
                type: null,
                default: 'FinancialApplication' //Warehouse仓库 Sale员工 BasicData供应商 Sale客户 BasicData品名/品牌  FinancialApplication部门 Sale承运商 FinancialApplication销售发票 FinancialManage承兑汇票
            },
            //供应商、型号单据类型
            is_purchase: {
                type: null,
                default: ''  //0 代表统购 1代表外购
            },
            //客户状态
            customer_status: {
                type: null,
                default: ''
            },
            //发票类型
            seach_type: {
                type: null,
                default: '0'   //0销售发票   1采购发票
            },
            //销售发票状态  采购发票状态
            invoice_status: {
                type: null,
                default: ''
            },
            //承兑汇票状态
            accept_bill_status: {
                type: null,
                default: ''
            },
            //控件类型
            control_type: {
                type: null,
                default: 'goodsLocate'  //receiver收货人 storeage仓库 employee员工 supplier供应商 customer客户 productBigClassify品名 brand品牌 department部门 carrier承运商 saleInvoice销售发票 acceptBill承兑汇票 goodsLocate货位
            }
        },
        data: function () {
            return {
                searchBtn: this.issearch,
                Shade_Bg: this.isshade_bg,
                Readonly: this.readonly,
                lab_color: this.labcolor,
                txt_color: this.txtcolor,
                search_title: '',
                search_url: "",
                search_id: "",
                search_width: "",
                search_height: "",
                search_parameter: "",
                search_name: '',
                objectId: '',
                //货位类型
                goods_locate_type: '',
                //仓库id
                storeage_id: '',
            }
        },
        mounted: function () {
            
        },
        methods: {
            search: function () {
                var vm = this;
                $('#' + vm.v_id + 'Search').mousedown(function () {
                    $(this).find("i").css("margin-left", "5px")
                }).mouseup(function () {
                    $(this).find("i").css("margin-left", "0")
                })
                if (vm.control_type == 'receiver') {
                    if (vm.receiver_type == '1') {
                        vm.search_title = '收票人追加';
                    } else {
                        vm.search_title = '收货人追加';
                    }
                    vm.search_id = 'ReceiverList';
                    vm.search_width = '550px';
                    vm.search_height = '510px';
                    vm.search_url = '../../CommonView/BusinessSeach/ReceiverList';
                    vm.search_parameter = "object_id=" + vm.objectId + '&receiver_type=' + vm.receiver_type + '&objectId=' + vm.objectId;
                } else if (vm.control_type == 'storeage') {
                    vm.search_id = 'StoreageList';
                    vm.search_title = '仓库查询';
                    vm.search_width = '900';
                    vm.search_height = '800';
                    vm.search_url = '../../CommonView/BusinessSeach/StoreageList';
                    vm.search_parameter = "system_key=" + vm.system_key;
                    vm.search_name = "Storeage_Name";
                } else if (vm.control_type == 'employee') {
                    vm.search_id = 'EmployeeList';
                    vm.search_title = '员工查询';
                    vm.search_width = '900';
                    vm.search_height = '800';
                    vm.search_url = '../../CommonView/BusinessSeach/EmployeeList';
                    vm.search_parameter = "system_key=" + vm.system_key;
                    vm.search_name = "Name";
                } else if (vm.control_type == 'supplier') {
                    vm.search_id = 'SupplierList';
                    vm.search_title = '供应商查询';
                    vm.search_width = '900';
                    vm.search_height = '800';
                    vm.search_url = '../../CommonView/BusinessSeach/SupplierList';
                    vm.search_parameter = "system_key=" + vm.system_key + "&is_purchase=" + vm.is_purchase;
                    vm.search_name = "Supplier_Name";
                } else if (vm.control_type == 'customer') {
                    vm.search_id = 'CustomerList';
                    vm.search_title = '客户查询';
                    vm.search_width = '900';
                    vm.search_height = '800';
                    vm.search_url = '../../CommonView/BusinessSeach/CustomerList';
                    vm.search_parameter = "system_key=" + vm.system_key + "&customer_status=" + vm.customer_status;
                    vm.search_name = "Customer_Name";
                } else if (vm.control_type == 'productBigClassify') {
                    vm.search_id = 'ProductBigClassifyList';
                    vm.search_title = '品名查询';
                    vm.search_width = '900';
                    vm.search_height = '800';
                    vm.search_url = '../../CommonView/BusinessSeach/ProductBigClassifyList';
                    vm.search_parameter = "system_key=" + vm.system_key;
                    vm.search_name = "Product_Classify_Name";
                } else if (vm.control_type == 'brand') {
                    vm.search_id = 'BrandList';
                    vm.search_title = '品牌查询';
                    vm.search_width = '900';
                    vm.search_height = '800';
                    vm.search_url = '../../CommonView/BusinessSeach/BrandList';
                    vm.search_parameter = "system_key=" + vm.system_key;
                    vm.search_name = "Brand_Name";
                } else if (vm.control_type == 'carrier') {
                    vm.search_id = 'CarrierList';
                    vm.search_title = '承运商查询';
                    vm.search_width = '900';
                    vm.search_height = '800';
                    vm.search_url = '../../CommonView/BusinessSeach/CarrierList';
                    vm.search_parameter = "system_key=" + vm.system_key;
                    vm.search_name = "Carrier_Name";
                } else if (vm.control_type == 'saleInvoice') {
                    vm.search_id = 'SaleInvoiceList';
                    vm.search_title = '销售发票查询';
                    vm.search_width = '900';
                    vm.search_height = '800';
                    vm.search_url = '../../CommonView/BusinessSeach/SaleInvoiceList';
                    vm.search_parameter = "system_key=" + vm.system_key + "&seach_type=" + vm.seach_type + '&invoice_status=' + vm.invoice_status;
                    vm.search_name = "Invoice_Number";
                } else if (vm.control_type == 'acceptBill') {
                    vm.search_id = 'AcceptBillList';
                    vm.search_title = '承兑汇票查询';
                    vm.search_width = '900';
                    vm.search_height = '800';
                    vm.search_url = '../../CommonView/BusinessSeach/AcceptBillList';
                    vm.search_parameter = "system_key=" + vm.system_key + '&accept_bill_status=' + vm.accept_bill_status + '&objectId=' + vm.objectId;
                    vm.search_name = "Accept_Bill_Number";
                } else if (vm.control_type == 'department') {
                    vm.search_id = 'DepartmentList';
                    vm.search_title = '部门查询';
                    vm.search_width = '450';
                    vm.search_height = '500';
                    vm.search_url = '../../CommonView/BusinessSeach/DepartmentList';
                    //vm.search_parameter = "system_key=" + vm.system_key;
                    vm.search_name = "text";
                } else if (vm.control_type == 'goodsLocate') {
                    vm.search_id = 'GoodsLocateList';
                    vm.search_title = '货位查询';
                    vm.search_width = '900';
                    vm.search_height = '800';
                    vm.search_url = '../../CommonView/BusinessSeach/GoodsLocateList';
                    vm.search_parameter = "system_key=" + vm.system_key + '&goods_locate_type=' + vm.goods_locate_type + '&storeage_id=' + vm.storeage_id;
                    vm.search_name = "Goods_Locate_Name";
                }
                PageCommon.CurrentWindow().PageCommon.ModalOpen({
                    id: vm.search_id,
                    title: vm.search_title,
                    width: vm.search_width + 'px',
                    height: vm.search_height + 'px',
                    btn: ['添加'],
                    url: vm.search_url,
                    urlparameter: vm.search_parameter,
                    callBack: function (iframeId) {
                        if (vm.control_type == 'department') {
                            var selectRow = PageCommon.ChildrenFrames(iframeId).$('#' + vm.search_id).getTSNs();
                        } else {
                            var selectRow = PageCommon.ChildrenFrames(iframeId).PageCommon.GetTableSelectRow(vm.search_id);
                        }
                        if (selectRow.length != 1) {
                            PageCommon.ChildrenFrames(iframeId).PageCommon.ShowMessageRight("E2008");
                            return;
                        }
                        vm.$emit('input', selectRow[0][vm.search_name]);
                        PageCommon.ChildrenFrames(iframeId).PageCommon.ModalClose();
                    }
                })
            },
            change: function (value) {
                this.$emit('input', value);
            },
            selectAll: function (event) {
                event.target.select()
            }
        },
        watch: {
            value: function (value) {
                //$(this.$el).val(value).trigger('change');
            },
            isshade_bg: function (value) {
                if (value == true) {
                    this.Shade_Bg = true;
                } else {
                    this.Shade_Bg = false;
                }
            },
            readonly: function (val) {
                if (val == true) {
                    this.Readonly = true;
                } else {
                    this.Readonly = false;
                }
            },
            checkempty: function (value) {
                if (value == true) {
                    this.checkempty = true;
                } else {
                    this.checkempty = false;
                }
            }
        }
    });
    //收货人查询
    Vue.component("erp-receiversearch", {
        template: '#temreceiversearch',
        props: {
            value: {
                type: null
            },
            //验证是否为空
            checkempty: {
                type: [Boolean, String],
                default: false
            },
            //联动
            linkage: {
                type: null,
            },
            v_id: {
                type: String,
                default: new Date().getTime().toString()
            },
            options: {
                type: Object
            },
            //打开下拉显示模板回调
            template_result: {
                type: Function
            },
            //选择下拉框回调
            template_selection: {
                type: Function
            },
            //是否只读(加遮罩层)
            isshade_bg: {
                type: null,
                default: false
            },
            //是否禁用
            disabled: {
                type: null,
            },
            //lab字体颜色
            labcolor: {
                type: null
            },
            //值字体颜色
            txtcolor: {
                type: null
            },
            //系统key
            system_key: {
                type: String
            },
            //每次检索最大数量
            page_size: { type: null, default: 10 },
            //要检索的字段（字符串数组）
            input_field: {
                type: null
            },
            //判断组件是否在编辑表格中
            istable: {
                type: null,
                default: 'false'
            },
            receiver_type: {
                type: null,
                default: '0'  //查询类型  0代表客户收货人  1代表供应商收货人 2代表客户收票人
            },
            //页面vue命名变量名
            parent_vm: {
                type: null,
            },
            //是否显示添加按钮
            isaddbtn: {
                type: null,
                default: 'true'
            }
        },
        data: function () {
            return {
                addbtn: true,
                Shade_Bg: true,
                //提示数据信息
                title: '',
                //判断是赋值还是选值
                repo: false,
                //打开关闭详细信息
                searchDetail: false,
                lab_color: this.labcolor,
                txt_color: this.txtcolor,
                //详细信息数据
                detailInfo: {},
                //弹窗标题
                searchTitle: '收货人追加',
                //库存明细返回数据
                bindData: {},
                $element: '',
                //库存表格id
                inventoryId: '',
                n: 0,
                //判断是赋值还是选值
                btn: false,
                select3: '',
                linkageData: {},
                objectId: '',
            }
        },
        mounted: function () {
            var vm = this;
            if (vm.isshade_bg == 'true' || vm.isshade_bg == true) {
                vm.addbtn = false;
                vm.Shade_Bg = true;
            } else {
                vm.addbtn = true;
                vm.Shade_Bg = false;
            }
            if (vm.istable == 'true') {
                $('#search' + vm.v_id).find('.space').addClass('p-0');
            }
            vm.$element = $('#' + vm.v_id);
            vm.init();
        },
        methods: {
            init: function () {
                var vm = this;
                vm.select3 = $('#' + vm.v_id).select2({
                    language: "zh-CN"
                });
            },
            addBtn: function () {
                var vm = this;
                $('#' + this.v_id + 'Search').mousedown(function () {
                    $(this).find("i").css("margin-left", "5px")
                }).mouseup(function () {
                    $(this).find("i").css("margin-left", "0")
                })
                if (vm.receiver_type == '2') {
                    vm.searchTitle = '收票人追加';
                }
                if (vm.objectId) {
                    PageCommon.CurrentWindow().PageCommon.ModalOpen({
                        id: 'ReceiverList',
                        title: vm.searchTitle,
                        width: '550px',
                        height: '510px',
                        url: '../../CommonView/BusinessSeach/ReceiverList',
                        urlparameter: "object_id=" + vm.objectId + '&receiver_type=' + vm.receiver_type,
                        callBack: function (iframeId) {
                            PageCommon.ChildrenFrames(iframeId).vmReceiver.Save(vm.parent_vm);
                        }
                    })
                }
                //else {
                //    PageCommon.ShowMessageRight("E2008");
                //}
            },
            searchBtnDetail: function () {
                var vm = this;
                if (vm.$element.html() || vm.select3.html()) {
                    vm.searchDetail = !vm.searchDetail;
                    var R = $(window).outerWidth() - $('#' + vm.v_id).offset().left;
                    if (R < 500) {
                        $('.' + vm.v_id + '_receiverdetail' + '.receiverinfo').css({ top: 32, left: -210 });
                        $('.' + vm.v_id + '_receiverdetail' + '.receiverinfo').addClass('searchleftopen').removeClass('searchrightopen');
                    } else {
                        $('.' + vm.v_id + '_receiverdetail' + '.receiverinfo').css({ top: 32, left: 20 });
                        $('.' + vm.v_id + '_receiverdetail' + '.receiverinfo').addClass('searchrightopen').removeClass('searchleftopen');
                    }
                }
                //else {
                //    PageCommon.ShowMessageRight("E2008");
                //}
            },
            select2: function (vlaues) {
                var vm = this;
                var select2 = vm.$element.select2({
                    ajax: {
                        url: "../../CommonView/BusinessSeach/ReceiverAutoCompletionData",
                        dataType: 'json',
                        "type": "post",
                        delay: 250,
                        data: function (params) {
                            var searchdata = {};
                            searchdata.System_Key = vm.system_key;
                            searchdata.Current_Page = params.page || 1;
                            searchdata.Page_Size = vm.page_size;
                            searchdata.Input_Field = vm.input_field;
                            searchdata.Input_Value = params.term;
                            searchdata.Receiver_Type = vm.receiver_type;
                            if (vlaues) {
                                searchdata.Object_Id = vlaues.id;
                            }
                            return searchdata;
                        },
                        processResults: function (data, params) {
                            params.page = params.page || 1;
                            $("#" + vm.v_id).data("datasource", data.dt);
                            return {
                                results: data.dt,
                                pagination: {
                                    more: (params.page * vm.page_size) < data.Total_Record_Count
                                }
                            };
                        },
                        cache: true
                    },
                    placeholder: '请选择',
                    //tags: true,
                    maximumSelectionLength: 1,
                    escapeMarkup: function (markup) { return markup; },
                    minimumInputLength: 0,
                    language: "zh-CN",
                    //打开下拉框
                    templateResult: function (repo) {
                        if (repo.loading) return "正在加载...";
                        if (vm.template_result) {
                            var rtn = vm.template_result(repo);
                            if (rtn) {
                                return rtn;
                            }
                        }
                        var markup = '';
                        markup = repo.name + '&nbsp;&nbsp;';
                        if (repo.Mobile_Phone) {
                            markup += repo.Mobile_Phone + '&nbsp;&nbsp;'
                        }
                        if (repo.Address) {
                            markup += repo.Address + '&nbsp;&nbsp;'
                        }
                        return markup;
                    },
                    //选择数据
                    templateSelection: function formatRepoSelection(repo) {
                        vm.n += 1;
                        if (!vm.btn) {//判断是否是选择下拉框数据
                            if (vm.n == 1) {
                                vm.detailInfo = repo;
                                vm.repo = true;
                                vm.$emit('input', vm.detailInfo.Detail_Number);
                                if (vm.template_selection) {
                                    vm.template_selection(vm.detailInfo);
                                }
                            }
                        } else {
                            if (vm.n == 1) {
                                vm.btn = false;
                            }
                        }
                        setTimeout(function () {
                            $('#search' + vm.v_id + ' .select2-selection__choice').attr('title', repo.name || repo.text);
                            $('#search' + vm.v_id + ' .select2-selection__choice').css('color', vm.txt_color);
                            $('#search' + vm.v_id + ' .select2-selection__choice__remove').hide();
                        })
                        vm.title = repo.name || repo.text;
                        return repo.name || repo.text;
                    }
                });
                vm.$element.on('change', function () {
                    if (vm.template_selection) {
                        if (vm.detailInfo) {
                            vm.template_selection(vm.detailInfo);
                        }
                    }
                })
                vm.$element.on('select2:open', function (event) {
                    //下拉框宽度
                    var w = $('.select2-dropdown--below').width();
                    $('.select2-dropdown--below').addClass('select2-dropdown-new');
                    $('.select2-dropdown--below').css('min-width', w);
                });
                vm.$element.on('select2:opening', function (event) {
                    vm.n = 0;
                    vm.searchDetail = false;
                    vm.detailInfo = '';
                    vm.$emit('input', '');
                    vm.$element.html('');
                    var $searchfield = $(this).parent().find('.select2-search__field');
                    $searchfield.show();
                });
                vm.$element.on('select2:close', function (event) {
                    var $searchfield = $(this).parent().find('.select2-search__field');
                    $searchfield.hide();
                });
                vm.searchValue(vlaues);
            },
            searchValue: function (values) {
                var vm = this;
                if (!this.repo) {
                    var searchdata = {};
                    searchdata.System_Key = vm.system_key;
                    searchdata.Receiver_Type = vm.receiver_type;
                    if (values.Detail_Number) {
                        //修改或追加
                        searchdata.Input_Field = ["Detail_Number"];
                        searchdata.Input_Value = values.Detail_Number;
                    } else {
                        //新增
                        searchdata.Input_Field = ["Is_Default"];
                        searchdata.Input_Value = "0";
                    }
                    searchdata.Object_Id = values.id;
                    vm.objectId = values.id;
                    $.ajax({
                        url: "../../CommonView/BusinessSeach/ReceiverAutoCompletionData",
                        "type": "post",
                        data: searchdata,
                        success: function (data) {
                            vm.n = 0;
                            vm.btn = true;
                            vm.$element.html('');
                            if (data.dt && data.dt.length > 0) {
                                vm.bindData = data.dt[0];
                                vm.detailInfo = vm.bindData;
                                vm.$emit('input', vm.detailInfo.Detail_Number);
                                vm.$element.html($("<option selected = \"true\"></option>").val(vm.bindData.Detail_Number).html(vm.bindData.name));
                            } else {
                                vm.detailInfo = '';
                                vm.$emit('input', '');
                            }
                            vm.searchDetail = false;
                            if (vm.template_selection) {
                                vm.template_selection(vm.detailInfo);
                            }
                        }
                    });
                } else {
                    vm.repo = false;
                }
            }
        },
        watch: {
            value: function (val) {

            },
            isshade_bg: function (value) {
                if (value == true) {
                    this.Shade_Bg = true;
                    this.addbtn = false;
                } else {
                    this.Shade_Bg = false;
                    this.addbtn = true;
                }
            },
            linkage: function (value) {
                var vm = this;
                if (value) {
                    vm.linkageData = value;
                } else {
                    vm.n = 0;
                    vm.$element.html('');
                    vm.$emit('input', '');
                    vm.detailInfo = '';
                    vm.searchDetail = false;
                    if (vm.template_selection) {
                        vm.template_selection(vm.detailInfo);
                    }
                    vm.init();
                }
            },
            linkageData: function (val) {
                if (val) {
                    var vm = this;
                    vm.select3.select2("destroy");
                    vm.select2(val);
                }
            }
        }
    })
    //仓库查询
    Vue.component("erp-storeagesearch", {
        template: '#temstoreagesearch',
        props: {
            value: {
                type: null
            },
            //验证是否为空
            checkempty: {
                type: [Boolean, String],
                default: false
            },
            linkage: {
                type: null
            },
            v_id: {
                type: String,
                default: new Date().getTime().toString()
            },
            options: {
                type: Object
            },
            //打开下拉显示模板回调
            template_result: {
                type: Function
            },
            //选择下拉框回调
            template_selection: {
                type: Function
            },
            //是否只读(加遮罩层)
            isshade_bg: {
                type: null,
                default: false
            },
            //是否禁用
            disabled: {
                type: null,
            },
            //lab字体颜色
            labcolor: {
                type: null
            },
            //值字体颜色
            txtcolor: {
                type: null
            },
            //系统key
            system_key: {
                type: String
            },
            //每次检索最大数量
            page_size: { type: null, default: 10 },
            //要检索的字段（字符串数组）
            input_field: {
                type: null
            },
            //判断组件是否在编辑表格中
            istable: {
                type: null,
                default: 'false'
            }
        },
        data: function () {
            return {
                searchbtn: true,
                Shade_Bg: true,
                //提示数据信息
                title: '',
                //判断是赋值还是选值
                repo: false,
                //打开关闭详细信息
                searchDetail: false,
                lab_color: this.labcolor,
                txt_color: this.txtcolor,
                //详细信息数据
                detailInfo: {},
                //弹窗地址
                searchUrl: '',
                //弹窗标题
                searchTitle: '',
                //库存明细返回数据
                bindData: {},
                $element: '',
                //库存表格id
                inventoryId: '',
                n: 0,
                //判断是赋值还是选值
                btn: false
            }
        },
        mounted: function () {
            var vm = this;
            if (vm.isshade_bg == 'true' || vm.isshade_bg == true) {
                vm.searchbtn = false;
                vm.Shade_Bg = true;
            } else {
                vm.searchbtn = true;
                vm.Shade_Bg = false;
            }
            if (vm.istable == 'true') {
                $('#search' + vm.v_id).find('.space').addClass('p-0');
            }
            this.select2();
        },
        methods: {
            searchBtn: function () {
                var vm = this;
                $('#' + this.v_id + 'Search').mousedown(function () {
                    $(this).find("i").css("margin-left", "5px")
                }).mouseup(function () {
                    $(this).find("i").css("margin-left", "0")
                })
                PageCommon.CurrentWindow().PageCommon.ModalOpen({
                    id: 'StoreageList',
                    title: '仓库查询',
                    width: '900px',
                    height: '800px',
                    btn: ['添加'],
                    url: '../../CommonView/BusinessSeach/StoreageList',
                    urlparameter: "system_key=" + vm.system_key,
                    callBack: function (iframeId) {
                        var selectRow = PageCommon.ChildrenFrames(iframeId).PageCommon.GetTableSelectRow('StoreageList');
                        if (selectRow.length != 1) {
                            PageCommon.ChildrenFrames(iframeId).PageCommon.ShowMessageRight("E2008");
                            return;
                        }
                        vm.$emit('input', selectRow[0].Storeage_Id);
                        PageCommon.ChildrenFrames(iframeId).PageCommon.ModalClose();
                    }
                })
            },
            searchBtnDetail: function () {
                var vm = this;
                if (this.$element.html()) {
                    this.searchDetail = !this.searchDetail;
                    var R = $(window).outerWidth() - $('#' + this.v_id).offset().left;
                    if (R < 500) {
                        $('.' + this.v_id + '_storeagedetail' + '.storeageinfo').css({ top: 32, left: -210 });
                        $('.' + this.v_id + '_storeagedetail' + '.storeageinfo').addClass('searchleftopen').removeClass('searchrightopen');
                    } else {
                        $('.' + this.v_id + '_storeagedetail' + '.storeageinfo').css({ top: 32, left: 20 });
                        $('.' + this.v_id + '_storeagedetail' + '.storeageinfo').addClass('searchrightopen').removeClass('searchleftopen');
                    }
                }
                //else {
                //    PageCommon.ShowMessageRight("E2008");
                //}
            },
            select2: function (vlaues) {
                var vm = this;
                vm.$element = $('#' + vm.v_id);
                var select2 = vm.$element.select2({
                    ajax: {
                        url: "../../CommonView/BusinessSeach/StoreageAutoCompletionData",
                        dataType: 'json',
                        "type": "post",
                        delay: 250,
                        data: function (params) {
                            var searchdata = {};
                            searchdata.System_Key = vm.system_key;
                            searchdata.Current_Page = params.page || 1;
                            searchdata.Page_Size = vm.page_size;
                            searchdata.Input_Field = vm.input_field;
                            searchdata.Input_Value = params.term;
                            return searchdata;
                        },
                        processResults: function (data, params) {
                            params.page = params.page || 1;
                            $("#" + vm.v_id).data("datasource", data.dt);
                            return {
                                results: data.dt,
                                pagination: {
                                    more: (params.page * vm.page_size) < data.Total_Record_Count
                                }
                            };
                        },
                        cache: true
                    },
                    placeholder: '请选择',
                    //tags: true,
                    maximumSelectionLength: 1,
                    escapeMarkup: function (markup) { return markup; },
                    minimumInputLength: 0,
                    language: "zh-CN",
                    //打开下拉框
                    templateResult: function (repo) {
                        if (repo.loading) return "正在加载...";
                        if (vm.template_result) {
                            var rtn = vm.template_result(repo);
                            if (rtn) {
                                return rtn;
                            }
                        }
                        var markup = '';
                        markup = repo.name + '&nbsp;&nbsp;';
                        if (repo.Department_Name) {
                            markup += repo.Department_Name + '&nbsp;&nbsp;'
                        }
                        return markup;
                    },
                    //选择数据
                    templateSelection: function formatRepoSelection(repo) {
                        vm.n += 1;
                        if (!vm.btn) {//判断是否是选择下拉框数据
                            if (vm.n == 1) {
                                vm.detailInfo = repo;
                                vm.repo = true;
                                vm.$emit('input', vm.detailInfo.Storeage_Id);
                                if (vm.template_selection) {
                                    vm.template_selection(vm.detailInfo);
                                }
                            }
                        } else {
                            if (vm.n == 1) {
                                vm.btn = false;
                            }
                        }
                        setTimeout(function () {
                            $('#search' + vm.v_id + ' .select2-selection__choice').attr('title', repo.name || repo.text);
                            $('#search' + vm.v_id + ' .select2-selection__choice').css('color', vm.txt_color);
                            $('#search' + vm.v_id + ' .select2-selection__choice__remove').hide();
                        })
                        vm.title = repo.name || repo.text;
                        return repo.name || repo.text;
                    }
                });
                //vm.$element.on('change', function () {
                //    if (vm.template_selection) {
                //        vm.template_selection(vm.detailInfo);
                //    }
                //})
                vm.$element.on('select2:open', function (event) {
                    //下拉框宽度
                    var w = $('.select2-dropdown--below').width();
                    $('.select2-dropdown--below').addClass('select2-dropdown-new');
                    $('.select2-dropdown--below').css('min-width', w);
                });
                vm.$element.on('select2:opening', function (event) {
                    vm.$emit('input', '');
                    var $searchfield = $(this).parent().find('.select2-search__field');
                    $searchfield.show();
                });
                vm.$element.on('select2:close', function (event) {
                    var $searchfield = $(this).parent().find('.select2-search__field');
                    $searchfield.hide();
                });
            },
            searchValue: function (value) {
                var vm = this;
                if (!this.repo) {
                    var searchdata = {};
                    searchdata.System_Key = vm.system_key;
                    searchdata.Input_Field = ["Storeage_Id"];
                    searchdata.Input_Value = value;
                    $.ajax({
                        url: "../../CommonView/BusinessSeach/StoreageAutoCompletionData",
                        "type": "post",
                        data: searchdata,
                        success: function (data) {
                            if (!data.dt || data.dt.length < 1) {
                                return;
                            }
                            vm.bindData = data.dt[0];
                            vm.n = 0;
                            vm.btn = true;
                            vm.detailInfo = vm.bindData;
                            vm.$element.html('');
                            vm.$emit('input', vm.detailInfo.Storeage_Id);
                            if (vm.template_selection) {
                                if (vm.detailInfo) {
                                    vm.template_selection(vm.detailInfo);
                                }
                            }
                            vm.$element.html($("<option selected = \"true\"></option>").val(value).html(vm.bindData.name));
                        }
                    });
                } else {
                    vm.repo = false;
                }
            }
        },
        watch: {
            value: function (value) {
                var vm = this;
                if (value) {
                    vm.searchValue(value);
                } else {
                    vm.n = 0;
                    vm.searchDetail = false;
                    vm.detailInfo = '';
                    vm.$emit('input', '');
                    vm.$element.html('');
                    if (vm.template_selection) {
                        vm.template_selection(vm.detailInfo);
                    }
                }
            },
            isshade_bg: function (value) {
                if (value == true) {
                    this.Shade_Bg = true;
                    this.searchbtn = false;
                } else {
                    this.Shade_Bg = false;
                    this.searchbtn = true;
                }
            }
        },
        linkage: function (value) {
            this.select2(value);
        },
        options: function (options) {
            // update options
            $(this.$el).select2({ data: options })
        }
    })
    //员工查询
    Vue.component("erp-employeesearch", {
        template: '#tememployeesearch',
        props: {
            value: {
                type: null
            },
            //验证是否为空
            checkempty: {
                type: [Boolean, String],
                default: false
            },
            linkage: {
                type: null
            },
            v_id: {
                type: String,
                default: new Date().getTime().toString()
            },
            options: {
                type: Object
            },
            //打开下拉显示模板回调
            template_result: {
                type: Function
            },
            //选择下拉框回调
            template_selection: {
                type: Function
            },
            //是否只读(加遮罩层)
            isshade_bg: {
                type: null,
                default: false
            },
            //是否禁用
            disabled: {
                type: null,
            },
            //lab字体颜色
            labcolor: {
                type: null
            },
            //值字体颜色
            txtcolor: {
                type: null
            },
            //系统key
            system_key: {
                type: String
            },
            //每次检索最大数量
            page_size: { type: null, default: 10 },
            //要检索的字段（字符串数组）
            input_field: {
                type: null
            },
            //判断组件是否在编辑表格中
            istable: {
                type: null,
                default: 'false'
            },
            //历史数据
            history_data: {
                type: null
            }
        },
        data: function () {
            return {
                searchbtn: true,
                Shade_Bg: true,
                //提示数据信息
                title: '',
                //判断是赋值还是选值
                repo: false,
                //打开关闭详细信息
                searchDetail: false,
                lab_color: this.labcolor,
                txt_color: this.txtcolor,
                //详细信息数据
                detailInfo: {},
                //弹窗地址
                searchUrl: '',
                //弹窗标题
                searchTitle: '',
                //库存明细返回数据
                bindData: {},
                $element: '',
                //库存表格id
                inventoryId: '',
                n: 0,
                //判断是赋值还是选值
                btn: false,
                //是否显示左上角历史信息图标
                ishistory: false,
                //历史数据
                historyinfo: '',
                //左上角历史图标点击后信息显示框大小
                areawidth: 'auto',
                areaheight: 'auto'
            }
        },
        mounted: function () {
            var vm = this;
            if (vm.isshade_bg == 'true' || vm.isshade_bg == true) {
                vm.searchbtn = false;
                vm.Shade_Bg = true;
            } else {
                vm.searchbtn = true;
                vm.Shade_Bg = false;
            }
            if (vm.istable == 'true') {
                $('#search' + vm.v_id).find('.space').addClass('p-0');
            }
            this.select2();
        },
        methods: {
            //左上角历史图标点击事件
            historyBtn: function () {
                var vm = this;
                layer.tips(vm.historyinfo, $('#history_' + vm.v_id).parent('.outer'), {
                    time: 2000,
                    area: [vm.areawidth, vm.areaheight],
                    tips: [3, '#3b9de1'] //还可配置颜色\
                });
            },
            searchBtn: function () {
                var vm = this;
                $('#' + this.v_id + 'Search').mousedown(function () {
                    $(this).find("i").css("margin-left", "5px")
                }).mouseup(function () {
                    $(this).find("i").css("margin-left", "0")
                })
                PageCommon.CurrentWindow().PageCommon.ModalOpen({
                    id: 'EmployeeList',
                    title: '员工查询',
                    width: '900px',
                    height: '800px',
                    btn: ['添加'],
                    url: '../../CommonView/BusinessSeach/EmployeeList',
                    urlparameter: "system_key=" + vm.system_key,
                    callBack: function (iframeId) {
                        var selectRow = PageCommon.ChildrenFrames(iframeId).PageCommon.GetTableSelectRow('EmployeeList');
                        if (selectRow.length != 1) {
                            PageCommon.ChildrenFrames(iframeId).PageCommon.ShowMessageRight("E2008");
                            return;
                        }
                        vm.$emit('input', selectRow[0].Employee_Id);
                        PageCommon.ChildrenFrames(iframeId).PageCommon.ModalClose();
                    }
                })
            },
            searchBtnDetail: function () {
                var vm = this;
                if (this.$element.html()) {
                    this.searchDetail = !this.searchDetail;
                    var R = $(window).outerWidth() - $('#' + this.v_id).offset().left;
                    if (R < 500) {
                        $('.' + this.v_id + '_employeedetail' + '.employeeinfo').css({ top: 32, left: -210 });
                        $('.' + this.v_id + '_employeedetail' + '.employeeinfo').addClass('searchleftopen').removeClass('searchrightopen');
                    } else {
                        $('.' + this.v_id + '_employeedetail' + '.employeeinfo').css({ top: 32, left: 20 });
                        $('.' + this.v_id + '_employeedetail' + '.employeeinfo').addClass('searchrightopen').removeClass('searchleftopen');
                    }
                }
                //else {
                //    PageCommon.ShowMessageRight("E2008");
                //}
            },
            select2: function (vlaues) {
                var vm = this;
                vm.$element = $('#' + vm.v_id);
                var select2 = vm.$element.select2({
                    ajax: {
                        url: "../../CommonView/BusinessSeach/EmployeeAutoCompletionData",
                        dataType: 'json',
                        "type": "post",
                        delay: 250,
                        data: function (params) {
                            var searchdata = {};
                            searchdata.System_Key = vm.system_key;
                            searchdata.Current_Page = params.page || 1;
                            searchdata.Page_Size = vm.page_size;
                            searchdata.Input_Field = vm.input_field;
                            searchdata.Input_Value = params.term;
                            return searchdata;
                        },
                        processResults: function (data, params) {
                            params.page = params.page || 1;
                            $("#" + vm.v_id).data("datasource", data.dt);
                            return {
                                results: data.dt,
                                pagination: {
                                    more: (params.page * vm.page_size) < data.Total_Record_Count
                                }
                            };
                        },
                        cache: true
                    },
                    placeholder: '请选择',
                    //tags: true,
                    maximumSelectionLength: 1,
                    escapeMarkup: function (markup) { return markup; },
                    minimumInputLength: 0,
                    language: "zh-CN",
                    //打开下拉框
                    templateResult: function (repo) {
                        if (repo.loading) return "正在加载...";
                        if (vm.template_result) {
                            var rtn = vm.template_result(repo);
                            if (rtn) {
                                return rtn;
                            }
                        }
                        var markup = '';
                        markup = repo.name + '&nbsp;&nbsp;';
                        if (repo.Department_Name) {
                            markup += repo.Department_Name + '&nbsp;&nbsp;'
                        } else if (repo.Business_Department_Name) {
                            markup += repo.Business_Department_Name + '&nbsp;&nbsp;'
                        }
                        return markup;
                    },
                    //选择数据
                    templateSelection: function formatRepoSelection(repo) {
                        vm.n += 1;
                        if (!vm.btn) {//判断是否是选择下拉框数据
                            if (vm.n == 1) {
                                vm.detailInfo = repo;
                                vm.repo = true;
                                vm.$emit('input', vm.detailInfo.Employee_Id);
                                if (vm.template_selection) {
                                    vm.template_selection(vm.detailInfo);
                                }
                            }
                        } else {
                            if (vm.n == 1) {
                                vm.btn = false;
                            }
                        }
                        setTimeout(function () {
                            $('#search' + vm.v_id + ' .select2-selection__choice').attr('title', repo.name || repo.text);
                            $('#search' + vm.v_id + ' .select2-selection__choice').css('color', vm.txt_color);
                            $('#search' + vm.v_id + ' .select2-selection__choice__remove').hide();
                        })
                        vm.title = repo.name || repo.text;
                        return repo.name || repo.text;
                    }
                });
                //vm.$element.on('change', function () {
                //    if (vm.template_selection) {
                //        vm.template_selection(vm.detailInfo);
                //    }
                //})
                vm.$element.on('select2:open', function (event) {
                    //下拉框宽度
                    var w = $('.select2-dropdown--below').width();
                    $('.select2-dropdown--below').addClass('select2-dropdown-new');
                    $('.select2-dropdown--below').css('min-width', w);
                });
                vm.$element.on('select2:opening', function (event) {
                    vm.$emit('input', '');
                    var $searchfield = $(this).parent().find('.select2-search__field');
                    $searchfield.show();
                });
                vm.$element.on('select2:close', function (event) {
                    var $searchfield = $(this).parent().find('.select2-search__field');
                    $searchfield.hide();
                });
            },
            searchValue: function (value) {
                var vm = this;
                if (!this.repo) {
                    var searchdata = {};
                    searchdata.System_Key = vm.system_key;
                    searchdata.Input_Field = ["Employee_Id"];
                    searchdata.Input_Value = value;
                    $.ajax({
                        url: "../../CommonView/BusinessSeach/EmployeeAutoCompletionData",
                        "type": "post",
                        data: searchdata,
                        success: function (data) {
                            if (!data.dt || data.dt.length < 1) {
                                return;
                            }
                            vm.bindData = data.dt[0];
                            vm.n = 0;
                            vm.btn = true;
                            vm.detailInfo = vm.bindData;
                            vm.$element.html('');
                            vm.$emit('input', vm.detailInfo.Employee_Id);
                            if (vm.template_selection) {
                                if (vm.detailInfo) {
                                    vm.template_selection(vm.detailInfo);
                                }
                            }
                            vm.$element.html($("<option selected = \"true\"></option>").val(value).html(vm.bindData.name));
                        }
                    });
                } else {
                    vm.repo = false;
                }
            },
            oldSearchValue: function (value) {
                var vm = this;
                var searchdata = {};
                searchdata.System_Key = vm.system_key;
                searchdata.Input_Field = ["Employee_Id"];
                searchdata.Input_Value = value;
                $.ajax({
                    url: "../../CommonView/BusinessSeach/EmployeeAutoCompletionData",
                    "type": "post",
                    data: searchdata,
                    success: function (data) {
                        if (!data.dt || data.dt.length < 1) {
                            return;
                        }
                        vm.historyinfo = data.dt[0].name;
                    }
                });
            }
        },
        watch: {
            value: function (value) {
                var vm = this;
                if (value) {
                    vm.searchValue(value);
                } else {
                    vm.n = 0;
                    vm.searchDetail = false;
                    vm.detailInfo = '';
                    vm.$emit('input', '');
                    vm.$element.html('');
                    if (vm.template_selection) {
                        vm.template_selection(vm.detailInfo);
                    }
                }
            },
            history_data: function (val) {
                var $this = this;
                if (val) {
                    if (val != $this.value) {
                        $this.ishistory = true;
                        $this.oldSearchValue(val);
                    }
                } else {
                    $this.areawidth = '30px';
                    $this.areaheight = '20px';
                    if ($this.value) {
                        $this.ishistory = true;
                        $this.historyinfo = '';
                    }
                }
            },
            isshade_bg: function (value) {
                if (value == true) {
                    this.Shade_Bg = true;
                    this.searchbtn = false;
                } else {
                    this.Shade_Bg = false;
                    this.searchbtn = true;
                }
            }
        },
        linkage: function (value) {
            this.select2(value);
        },
        options: function (options) {
            // update options
            $(this.$el).select2({ data: options })
        }
    })
    //供应商查询
    Vue.component("erp-suppliersearch", {
        template: '#temsuppliersearch',
        props: {
            value: {
                type: null
            },
            //验证是否为空
            checkempty: {
                type: [Boolean, String],
                default: false
            },
            //联动
            linkage: {
                type: null
            },
            v_id: {
                type: String,
                default: new Date().getTime().toString()
            },
            options: {
                type: Object
            },
            //打开下拉显示模板回调
            template_result: {
                type: Function
            },
            //选择下拉框回调
            template_selection: {
                type: Function
            },
            //是否只读(加遮罩层)
            isshade_bg: {
                type: null,
                default: false
            },
            //lab字体颜色
            labcolor: {
                type: null
            },
            //值字体颜色
            txtcolor: {
                type: null
            },
            //系统key
            system_key: {
                type: String
            },
            //每次检索最大数量
            page_size: { type: null, default: 10 },
            //要检索的字段（字符串数组）
            input_field: { type: null },
            //单据类型
            is_purchase: {
                type: null,
                default: '0'  //0 代表统购 1代表外购
            },
            //判断组件是否在编辑表格中
            istable: {
                type: null,
                default: 'false'
            },
            //判断是否为父客户组件
            is_parent: {
                type: null,
                default: '' //0代表父客户 默认为空
            },
            //历史数据
            history_data: {
                type: null
            }
        },
        data: function () {
            return {
                Shade_Bg: true,
                //是否显示搜索
                searchbtn: true,
                //提示数据信息
                title: '',
                //判断是赋值还是选值
                repo: false,
                //打开关闭详细信息
                searchDetail: false,
                lab_color: this.labcolor,
                txt_color: this.txtcolor,
                //详细信息数据
                detailInfo: {},
                //库存明细返回数据
                bindData: {},
                $element: '',
                n: 0,
                btn: false,
                //位数cookie
                globalParameter: PageCommon.GlobalParameter(),
                //是否显示左上角历史信息图标
                ishistory: false,
                //历史数据
                historyinfo: '',
                //左上角历史图标点击后信息显示框大小
                areawidth: 'auto',
                areaheight: 'auto',
            }
        },
        mounted: function () {
            var vm = this;
            if (vm.isshade_bg == 'true' || vm.isshade_bg == true) {
                vm.searchbtn = false;
                vm.Shade_Bg = true;
            } else {
                vm.searchbtn = true;
                vm.Shade_Bg = false;
            }
            if (vm.istable == 'true') {
                $('#search' + vm.v_id).find('.space').addClass('p-0');
            }
            this.select2();
        },
        methods: {
            //左上角历史图标点击事件
            historyBtn: function () {
                var vm = this;
                layer.tips(vm.historyinfo, $('#history_' + vm.v_id).parent('.outer'), {
                    time: 2000,
                    area: [vm.areawidth, vm.areaheight],
                    tips: [3, '#3b9de1'] //还可配置颜色\
                });
            },
            searchBtn: function () {
                var vm = this;
                $('#' + this.v_id + 'Search').mousedown(function () {
                    $(this).find("i").css("margin-left", "5px")
                }).mouseup(function () {
                    $(this).find("i").css("margin-left", "0")
                })
                PageCommon.CurrentWindow().PageCommon.ModalOpen({
                    id: 'SupplierList',
                    title: '供应商查询',
                    width: '900px',
                    height: '800px',
                    btn: ['添加'],
                    url: '../../CommonView/BusinessSeach/SupplierList',
                    urlparameter: "system_key=" + vm.system_key + "&is_purchase=" + vm.is_purchase + "&is_parent=" + vm.is_parent,
                    callBack: function (iframeId) {
                        var selectRow = PageCommon.ChildrenFrames(iframeId).PageCommon.GetTableSelectRow('SupplierList');
                        if (selectRow.length != 1) {
                            PageCommon.ChildrenFrames(iframeId).PageCommon.ShowMessageRight("E2008");
                            return;
                        }
                        vm.$emit('input', selectRow[0].Supplier_Id);
                        PageCommon.ChildrenFrames(iframeId).PageCommon.ModalClose();
                    }
                })
            },
            searchBtnDetail: function () {
                var vm = this;
                if (this.$element.html()) {
                    this.searchDetail = !this.searchDetail;
                    var R = $(window).outerWidth() - $('#' + this.v_id).offset().left;
                    if (R < 500) {
                        $('.' + this.v_id + '_supplierdetail' + '.supplierinfo').css({ top: 32, left: -210 });
                        $('.' + this.v_id + '_supplierdetail' + '.supplierinfo').addClass('searchleftopen').removeClass('searchrightopen');
                    } else {
                        $('.' + this.v_id + '_supplierdetail' + '.supplierinfo').css({ top: 32, left: 20 });
                        $('.' + this.v_id + '_supplierdetail' + '.supplierinfo').addClass('searchrightopen').removeClass('searchleftopen');
                    }
                    $('.' + vm.v_id + '_supplierdetail .supplier-tab').on('click', 'li', function () {
                        var index = $(this).index();
                        $(this).addClass('active').siblings().removeClass('active');
                        $('.' + vm.v_id + '_supplierdetail' + ' .supplier-list').find('ul').eq(index).show().siblings().hide();
                    })
                }
                //else {
                //    PageCommon.ShowMessageRight("E2008");
                //}
            },
            select2: function (vlaues) {
                var vm = this;
                vm.$element = $('#' + vm.v_id);
                var select2 = vm.$element.select2({
                    ajax: {
                        url: "../../CommonView/BusinessSeach/SupplierAutoCompletionData",
                        dataType: 'json',
                        "type": "post",
                        delay: 250,
                        data: function (params) {
                            var searchdata = {};
                            searchdata.System_Key = vm.system_key;
                            searchdata.Current_Page = params.page || 1;
                            searchdata.Page_Size = vm.page_size;
                            searchdata.Input_Field = vm.input_field;
                            searchdata.Input_Value = params.term;
                            searchdata.Is_Purchase = vm.is_purchase;
                            searchdata.Is_Parent = vm.is_parent;
                            return searchdata;
                        },
                        processResults: function (data, params) {
                            params.page = params.page || 1;
                            $("#" + vm.v_id).data("datasource", data.dt);
                            return {
                                results: data.dt,
                                pagination: {
                                    more: (params.page * vm.page_size) < data.Total_Record_Count
                                }
                            };
                        },
                        cache: true
                    },
                    placeholder: '请选择',
                    maximumSelectionLength: 1,
                    escapeMarkup: function (markup) { return markup; },
                    minimumInputLength: 0,
                    language: "zh-CN",
                    //打开下拉框
                    templateResult: function (repo) {
                        if (repo.loading) return "正在加载...";
                        if (vm.template_result) {
                            var rtn = vm.template_result(repo);
                            if (rtn) {
                                return rtn;
                            }
                        }
                        return repo.name || repo.text;
                    },
                    //选择数据
                    templateSelection: function formatRepoSelection(repo) {
                        vm.n += 1;
                        if (!vm.btn) {//判断是否是选择下拉框数据
                            if (vm.n == 1) {
                                vm.detailInfo = repo;
                                vm.repo = true;
                                vm.$emit('input', vm.detailInfo.Supplier_Id);
                                if (vm.template_selection) {
                                    vm.template_selection(vm.detailInfo);
                                }
                            }
                        } else {
                            if (vm.n == 1) {
                                vm.btn = false;
                            }
                        }
                        setTimeout(function () {
                            $('#search' + vm.v_id + ' .select2-selection__choice').attr('title', repo.name || repo.text);
                            $('#search' + vm.v_id + ' .select2-selection__choice').css('color', vm.txt_color);
                            $('#search' + vm.v_id + ' .select2-selection__choice__remove').hide();
                        })

                        vm.title = repo.name || repo.text;
                        return repo.name || repo.text;
                    }
                });
                //vm.$element.on('change', function () {
                //    if (vm.template_selection) {
                //        if (vm.linkagebtn == 'true') {
                //            vm.template_selection(vm.detailInfo);
                //        } else {
                //            if (vm.detailInfo) {
                //                vm.template_selection(vm.detailInfo);
                //            }
                //        }
                //    }
                //})
                vm.$element.on('select2:open', function (event) {
                    //下拉框宽度
                    var w = $('.select2-dropdown--below').width();
                    $('.select2-dropdown--below').addClass('select2-dropdown-new');
                    $('.select2-dropdown--below').css('min-width', w);
                });
                vm.$element.on('select2:opening', function (event) {
                    vm.$emit('input', '');
                    var $searchfield = $(this).parent().find('.select2-search__field');
                    $searchfield.show();
                });
                vm.$element.on('select2:close', function (event) {
                    var $searchfield = $(this).parent().find('.select2-search__field');
                    $searchfield.hide();
                });
            },
            searchValue: function (value) {
                var vm = this;
                if (!this.repo) {
                    var searchdata = {};
                    searchdata.System_Key = vm.system_key;
                    searchdata.Input_Field = ["Supplier_Id"];
                    searchdata.Input_Value = value;
                    searchdata.Is_Purchase = vm.is_purchase;
                    searchdata.Is_Parent = vm.is_parent;
                    $.ajax({
                        url: "../../CommonView/BusinessSeach/SupplierAutoCompletionData",
                        "type": "post",
                        data: searchdata,
                        success: function (data) {
                            if (!data.dt || data.dt.length < 1) {
                                return;
                            }
                            vm.bindData = data.dt[0];
                            vm.n = 0;
                            vm.btn = true;
                            vm.detailInfo = vm.bindData;
                            vm.$element.html('');
                            vm.$emit('input', vm.detailInfo.Supplier_Id);
                            if (vm.template_selection) {
                                if (vm.detailInfo) {
                                    vm.template_selection(vm.detailInfo);
                                }
                            }
                            vm.$element.html($("<option selected = \"true\"></option>").val(value).html(vm.bindData.Supplier_Name));
                        }
                    });
                } else {
                    vm.repo = false;
                }
            },
            oldSearchValue: function (value) {
                var vm = this;
                var searchdata = {};
                searchdata.System_Key = vm.system_key;
                searchdata.Input_Field = ["Supplier_Id"];
                searchdata.Input_Value = value;
                searchdata.Is_Purchase = vm.is_purchase;
                searchdata.Is_Parent = vm.is_parent;
                $.ajax({
                    url: "../../CommonView/BusinessSeach/SupplierAutoCompletionData",
                    "type": "post",
                    data: searchdata,
                    success: function (data) {
                        if (!data.dt || data.dt.length < 1) {
                            return;
                        }
                        vm.historyinfo = data.dt[0].Supplier_Name;
                    }
                });
            }
        },
        watch: {
            value: function (value) {
                var vm = this;
                if (value) {
                    vm.searchValue(value);
                } else {
                    vm.n = 0;
                    vm.searchDetail = false;
                    vm.detailInfo = '';
                    vm.$emit('input', '');
                    vm.$element.html('');
                    if (vm.template_selection) {
                        vm.template_selection(vm.detailInfo);
                    }
                }
            },
            history_data: function (val) {
                var $this = this;
                if (val) {
                    if (val != $this.value) {
                        $this.ishistory = true;
                        $this.oldSearchValue(val);
                    }
                } else {
                    $this.areawidth = '30px';
                    $this.areaheight = '20px';
                    if ($this.value) {
                        $this.ishistory = true;
                        $this.historyinfo = '';
                    }
                }
            },
            isshade_bg: function (value) {
                if (value == true) {
                    this.Shade_Bg = true;
                    this.searchbtn = false;
                } else {
                    this.Shade_Bg = false;
                    this.searchbtn = true;
                }
            }
        },
        linkage: function (value) {
            this.select2(value);
        },
        options: function (options) {
            // update options
            $(this.$el).select2({ data: options })
        }
    })
    //客户查询
    Vue.component("erp-customersearch", {
        template: '#temcustomersearch',
        props: {
            value: {
                type: null
            },
            //验证是否为空
            checkempty: {
                type: [Boolean, String],
                default: false
            },
            linkage: {
                type: null
            },
            v_id: {
                type: String,
                default: new Date().getTime().toString()
            },
            options: {
                type: Object
            },
            //打开下拉显示模板回调
            template_result: {
                type: Function
            },
            //选择下拉框回调
            template_selection: {
                type: Function
            },
            //是否只读(加遮罩层)
            isshade_bg: {
                type: null,
                default: false
            },
            //是否禁用
            disabled: {
                type: null,
            },
            //lab字体颜色
            labcolor: {
                type: null
            },
            //值字体颜色
            txtcolor: {
                type: null
            },
            //系统key
            system_key: {
                type: String
            },
            //每次检索最大数量
            page_size: { type: null, default: 10 },
            //要检索的字段（字符串数组）
            input_field: { type: null },
            //判断组件是否在编辑表格中
            istable: {
                type: null,
                default: 'false'
            },
            //客户状态
            customer_status: {
                type: null,
                default: ''
            },
            //判断是否为父客户组件
            is_parent: {
                type: null,
                default: '' //0代表父客户 默认为空
            },
            //历史数据
            history_data: {
                type: null
            }
        },
        data: function () {
            return {
                searchbtn: true,
                Shade_Bg: true,
                //提示数据信息
                title: '',
                //判断是赋值还是选值
                repo: false,
                //打开关闭详细信息
                searchDetail: false,
                lab_color: this.labcolor,
                txt_color: this.txtcolor,
                //详细信息数据
                detailInfo: {},
                //弹窗地址
                searchUrl: '',
                //弹窗标题
                searchTitle: '',
                //库存明细返回数据
                bindData: {},
                $element: '',
                //库存表格id
                inventoryId: '',
                n: 0,
                btn: false,
                //位数cookie
                globalParameter: PageCommon.GlobalParameter(),
                //是否显示左上角历史信息图标
                ishistory: false,
                //历史数据
                historyinfo: '',
                //左上角历史图标点击后信息显示框大小
                areawidth: 'auto',
                areaheight: 'auto'
            }
        },
        mounted: function () {
            var vm = this;
            if (vm.isshade_bg == 'true' || vm.isshade_bg == true) {
                vm.searchbtn = false;
                vm.Shade_Bg = true;
            } else {
                vm.searchbtn = true;
                vm.Shade_Bg = false;
            }
            if (vm.istable == 'true') {
                $('#search' + vm.v_id).find('.space').addClass('p-0');
            }
            this.select2();
        },
        methods: {
            //左上角历史图标点击事件
            historyBtn: function () {
                var vm = this;
                layer.tips(vm.historyinfo, $('#history_' + vm.v_id).parent('.outer'), {
                    time: 2000,
                    area: [vm.areawidth, vm.areaheight],
                    tips: [3, '#3b9de1'] //还可配置颜色\
                });
            },
            searchBtn: function () {
                var vm = this;
                $('#' + this.v_id + 'Search').mousedown(function () {
                    $(this).find("i").css("margin-left", "5px")
                }).mouseup(function () {
                    $(this).find("i").css("margin-left", "0")
                })
                PageCommon.CurrentWindow().PageCommon.ModalOpen({
                    id: 'CustomerList',
                    title: '客户查询',
                    width: '900px',
                    height: '800px',
                    btn: ['添加'],
                    url: '../../CommonView/BusinessSeach/CustomerList',
                    urlparameter: "system_key=" + vm.system_key + "&customer_status=" + vm.customer_status + "&is_parent=" + vm.is_parent,
                    callBack: function (iframeId) {
                        var selectRow = PageCommon.ChildrenFrames(iframeId).PageCommon.GetTableSelectRow('CustomerList');
                        if (selectRow.length != 1) {
                            PageCommon.ChildrenFrames(iframeId).PageCommon.ShowMessageRight("E2008");
                            return;
                        }
                        vm.$emit('input', selectRow[0].Customer_Id);
                        PageCommon.ChildrenFrames(iframeId).PageCommon.ModalClose();
                    }
                })
            },
            searchBtnDetail: function () {
                var vm = this;
                if (this.$element.html()) {
                    this.searchDetail = !this.searchDetail;
                    var R = $(window).outerWidth() - $('#' + this.v_id).offset().left;
                    if (R < 500) {
                        $('.' + this.v_id + '_customerdetail' + '.customerinfo').css({ top: 32, left: -210 });
                        $('.' + this.v_id + '_customerdetail' + '.customerinfo').addClass('searchleftopen').removeClass('searchrightopen');
                    } else {
                        $('.' + this.v_id + '_customerdetail' + '.customerinfo').css({ top: 32, left: 20 });
                        $('.' + this.v_id + '_customerdetail' + '.customerinfo').addClass('searchrightopen').removeClass('searchleftopen');
                    }
                    $('.' + vm.v_id + '_customerdetail .customer-tab').on('click', 'li', function () {
                        var index = $(this).index();
                        $(this).addClass('active').siblings().removeClass('active');
                        $('.' + vm.v_id + '_customerdetail' + ' .customer-list').find('ul').eq(index).show().siblings().hide();
                    })
                }
                //else {
                //   PageCommon.ShowMessageRight("E2008");
                //}
            },
            select2: function (vlaues) {
                var vm = this;
                vm.$element = $('#' + vm.v_id);
                var select2 = vm.$element.select2({
                    ajax: {
                        url: "../../CommonView/BusinessSeach/CustomerAutoCompletionData",
                        dataType: 'json',
                        "type": "post",
                        delay: 250,
                        data: function (params) {
                            var searchdata = {};
                            searchdata.System_Key = vm.system_key;
                            searchdata.Current_Page = params.page || 1;
                            searchdata.Page_Size = vm.page_size;
                            searchdata.Input_Field = vm.input_field;
                            searchdata.Input_Value = params.term;
                            searchdata.Invoice_Detail_Number = '';
                            searchdata.Customer_Status = vm.customer_status;
                            searchdata.Is_Parent = vm.is_parent;
                            return searchdata;
                        },
                        processResults: function (data, params) {
                            params.page = params.page || 1;
                            $("#" + vm.v_id).data("datasource", data.dt);
                            return {
                                results: data.dt,
                                pagination: {
                                    more: (params.page * vm.page_size) < data.Total_Record_Count
                                }
                            };
                        },
                        cache: true
                    },
                    placeholder: '请选择',
                    //tags: true,
                    maximumSelectionLength: 1,
                    escapeMarkup: function (markup) { return markup; },
                    minimumInputLength: 0,
                    language: "zh-CN",
                    //打开下拉框
                    templateResult: function (repo) {
                        if (repo.loading) return "正在加载...";
                        if (vm.template_result) {
                            var rtn = vm.template_result(repo);
                            if (rtn) {
                                return rtn;
                            }
                        }
                        var markup = '';
                        if (repo.Customer_Name) {
                            markup += repo.Customer_Name + '&nbsp;&nbsp;'
                        }
                        if (repo.Employee_Name) {
                            markup += repo.Employee_Name + '&nbsp;&nbsp;'
                        }
                        if (repo.Department_Name) {
                            markup += repo.Department_Name + '&nbsp;&nbsp;'
                        }
                        if (repo.Customer_Importance_Name) {
                            markup += repo.Customer_Importance_Name + '&nbsp;&nbsp;'
                        }
                        return markup || repo.text;
                    },
                    //选择数据
                    templateSelection: function formatRepoSelection(repo) {
                        vm.n += 1;
                        if (!vm.btn) {//判断是否是选择下拉框数据
                            if (vm.n == 1) {
                                vm.detailInfo = repo;
                                vm.repo = true;
                                vm.$emit('input', vm.detailInfo.Customer_Id);
                                if (vm.template_selection) {
                                    vm.template_selection(vm.detailInfo);
                                }
                            }
                        } else {
                            if (vm.n == 1) {
                                vm.btn = false;
                            }
                        }
                        setTimeout(function () {
                            $('#search' + vm.v_id + ' .select2-selection__choice').attr('title', repo.name || repo.text);
                            $('#search' + vm.v_id + ' .select2-selection__choice').css('color', vm.txt_color);
                            $('#search' + vm.v_id + ' .select2-selection__choice__remove').hide();
                        })
                        vm.title = repo.name || repo.text;
                        return repo.name || repo.text;
                    }
                });
                //vm.$element.on('change', function () {
                //    if (vm.template_selection) {
                //        vm.template_selection(vm.detailInfo);
                //    }
                //})
                vm.$element.on('select2:open', function (event) {
                    //下拉框宽度
                    var w = $('.select2-dropdown--below').width();
                    $('.select2-dropdown--below').addClass('select2-dropdown-new');
                    $('.select2-dropdown--below').css('min-width', w);
                });
                vm.$element.on('select2:opening', function (event) {
                    vm.$emit('input', '');
                    var $searchfield = $(this).parent().find('.select2-search__field');
                    $searchfield.show();
                });
                vm.$element.on('select2:close', function (event) {
                    var $searchfield = $(this).parent().find('.select2-search__field');
                    $searchfield.hide();
                });
            },
            searchValue: function (value) {
                var vm = this;
                if (!this.repo) {
                    var searchdata = {};
                    searchdata.System_Key = vm.system_key;
                    searchdata.Input_Field = ["Customer_Id"];
                    searchdata.Input_Value = value;
                    searchdata.Invoice_Detail_Number = '';
                    searchdata.Customer_Status = vm.customer_status;
                    searchdata.Is_Parent = vm.is_parent;
                    $.ajax({
                        url: "../../CommonView/BusinessSeach/CustomerAutoCompletionData",
                        "type": "post",
                        data: searchdata,
                        success: function (data) {
                            if (!data.dt || data.dt.length < 1) {
                                return;
                            }
                            vm.bindData = data.dt[0];
                            vm.n = 0;
                            vm.btn = true;
                            vm.detailInfo = vm.bindData;
                            vm.$element.html('');
                            vm.$emit('input', vm.detailInfo.Customer_Id);
                            if (vm.template_selection) {
                                if (vm.detailInfo) {
                                    vm.template_selection(vm.detailInfo);
                                }
                            }
                            vm.$element.html($("<option selected = \"true\"></option>").val(value).html(vm.bindData.Customer_Name));
                        }
                    });
                } else {
                    vm.repo = false;
                }
            },
            oldSearchValue: function (value) {
                var vm = this;
                var searchdata = {};
                searchdata.System_Key = vm.system_key;
                searchdata.Input_Field = ["Customer_Id"];
                searchdata.Input_Value = value;
                searchdata.Invoice_Detail_Number = '';
                searchdata.Customer_Status = vm.customer_status;
                searchdata.Is_Parent = vm.is_parent;
                $.ajax({
                    url: "../../CommonView/BusinessSeach/CustomerAutoCompletionData",
                    "type": "post",
                    data: searchdata,
                    success: function (data) {
                        if (!data.dt || data.dt.length < 1) {
                            return;
                        }
                        vm.historyinfo = data.dt[0].Customer_Name;
                    }
                });
            }
        },
        watch: {
            value: function (value) {
                var vm = this;
                if (value) {
                    vm.searchValue(value);
                } else {
                    vm.n = 0;
                    vm.searchDetail = false;
                    vm.detailInfo = '';
                    vm.$emit('input', '');
                    vm.$element.html('');
                    if (vm.template_selection) {
                        vm.template_selection(vm.detailInfo);
                    }
                }
            },
            history_data: function (val) {
                var $this = this;
                if (val) {
                    if (val != $this.value) {
                        $this.ishistory = true;
                        $this.oldSearchValue(val);
                    }
                } else {
                    $this.areawidth = '30px';
                    $this.areaheight = '20px';
                    if ($this.value) {
                        $this.ishistory = true;
                        $this.historyinfo = '';
                    }
                }
            },
            isshade_bg: function (value) {
                if (value == true) {
                    this.Shade_Bg = true;
                    this.searchbtn = false;
                } else {
                    this.Shade_Bg = false;
                    this.searchbtn = true;
                }
            }
        },
        linkage: function (value) {
            this.select2(value);
        },
        options: function (options) {
            // update options
            $(this.$el).select2({ data: options })
        }
    })
    //型号查询
    Vue.component("erp-productsearch", {
        template: '#temproductsearch',
        props: {
            value: {
                type: null
            },
            //验证是否为空
            checkempty: {
                type: [Boolean, String],
                default: false
            },
            linkage: {
                type: null
            },
            v_id: {
                type: String,
                default: new Date().getTime().toString()
            },
            options: {
                type: Object
            },
            //打开下拉显示模板回调
            template_result: {
                type: Function
            },
            //选择下拉框回调
            template_selection: {
                type: Function
            },
            //是否只读(加遮罩层)
            isshade_bg: {
                type: null,
                default: false
            },
            //lab字体颜色
            labcolor: {
                type: null
            },
            //值字体颜色
            txtcolor: {
                type: null
            },
            //系统key
            system_key: {
                type: String
            },
            //每次检索最大数量
            page_size: { type: null, default: 10 },
            //要检索的字段（字符串数组）
            input_field: {
                type: null,
                //default: function () {
                //    return ['Product_Purchase']
                //}
            },
            //单据类型
            is_purchase: {
                type: null,
                default: '0'  //0 代表统购 1代表外购 2代表全查
            },
            //是否拆分
            is_split: {
                type: null, //默认空值是拆分  0表示不拆分
            },
            //查询来源
            seach_type: {
                type: null,
                default: '3'  //0 代表库存汇总   1代表库存明细查询  2代表其他弹窗页面 3代表分库房 4代表库存明细汇总查询
            },
            //判断组件是否在编辑表格中
            istable: {
                type: null,
                default: 'false'
            },
            //打开弹窗参数
            searchparameter: {
                type: null,
                default: function () {
                    return {
                        searchUrl: '',
                        searchTitle: '',
                        inventoryId: '',
                        width: '',
                        height: '',
                    }
                }
            },
            //2代表其他弹窗页面 查询区分
            query_kb: {
                type: null,
            },
            //Proxy层名称
            proxy_name: {
                type: null,
            },
            //查询条件
            where_parameter_list: {
                type: null,
            },
            //存储过程索引
            procedure_index: {
                type: null,
                default: '4'
            },
            //打开弹窗参数回调函数
            urlparameterback: {
                type: Function
            },
            //库存类型
            not_inventry_type: {
                type: null,
                default: ''
            }
        },
        data: function () {
            return {
                //是否加遮罩置灰
                Shade_Bg: true,
                //是否显示搜索按钮
                searchbtn: true,
                //提示数据信息
                title: '',
                //判断是赋值还是选值
                repo: false,
                //打开关闭详细信息
                searchDetail: false,
                //组件名称字体颜色设置
                lab_color: this.labcolor,
                //组件内容字体颜色设置
                txt_color: this.txtcolor,
                //详细信息数据
                detailInfo: {},
                //弹窗地址
                searchUrl: '',
                //弹窗标题
                searchTitle: '',
                //表格id
                inventoryId: '',
                //弹窗高
                width: '900',
                //弹窗宽
                height: '800',
                //弹窗传值
                urlparameter: '',
                //库存明细返回数据
                bindData: {},
                //组件id选择器
                $element: '',
                //下拉框选择数据函数执行次数
                n: 0,
                //判断是否是选择下拉框数据  true是 false是外面传值赋值
                btn: false,
                //小数设置位数和截取方式cookie
                globalParameter: PageCommon.GlobalParameter(),
                //当全查的时候，select赋值时Is_Purchase要重新赋值
                purchase:''
            }
        },
        mounted: function () {
            var vm = this;
            
            if (vm.isshade_bg == 'true' || vm.isshade_bg == true) {
                vm.searchbtn = false;
                vm.Shade_Bg = true;
            } else {
                vm.searchbtn = true;
                vm.Shade_Bg = false;
            }
            if (vm.istable == 'true') {
                $('#search' + vm.v_id).find('.space').addClass('p-0');
            }
            this.select2();
        },
        methods: {
            searchBtn: function () {
                var vm = this;
                $('#' + this.v_id + 'Search').mousedown(function () {
                    $(this).find("i").css("margin-left", "5px")
                }).mouseup(function () {
                    $(this).find("i").css("margin-left", "0")
                })
                if (vm.seach_type == '0') {
                    vm.searchUrl = '../../CommonView/BusinessSeach/InventorySummaryList';
                    vm.searchTitle = '库存汇总查询';
                    vm.inventoryId = 'InventorySummaryList';
                    vm.urlparameter = "seach_type=" + vm.seach_type + "&system_key=" + vm.system_key + "&is_purchase=" + vm.is_purchase + "&is_split=" + vm.is_split;
                } else if (vm.seach_type == '1') {
                    vm.searchUrl = '../../CommonView/BusinessSeach/InventoryDetailList';
                    vm.searchTitle = '库存明细查询';
                    vm.inventoryId = 'InventoryDetailList';
                    vm.urlparameter = "seach_type=" + vm.seach_type + "&system_key=" + vm.system_key + "&is_purchase=" + vm.is_purchase + "&is_split=" + vm.is_split + "&not_inventry_type=" + vm.not_inventry_type;
                } else if (vm.seach_type == '2') {
                    if (vm.searchparameter) {
                        if (vm.urlparameterback) {
                            var rtn = vm.urlparameterback();
                            if (rtn) {
                                vm.urlparameter = rtn;
                                vm.searchUrl = vm.searchparameter.searchUrl;
                                vm.searchTitle = vm.searchparameter.searchTitle;
                                vm.inventoryId = vm.searchparameter.inventoryId;
                            } else {
                                return;
                            }
                        } else {
                            vm.searchUrl = vm.searchparameter.searchUrl;
                            vm.searchTitle = vm.searchparameter.searchTitle;
                            vm.inventoryId = vm.searchparameter.inventoryId;
                        }
                        if (vm.searchparameter.width && vm.searchparameter.height) {
                            vm.width = vm.searchparameter.width;
                            vm.height = vm.searchparameter.height;
                        }
                    }
                } else if (vm.seach_type == '3') {
                    vm.searchUrl = '../../CommonView/BusinessSeach/InventorySummaryList';
                    vm.searchTitle = '型号查询';
                    vm.inventoryId = 'ProductList';
                    vm.urlparameter = "seach_type=" + vm.seach_type + "&system_key=" + vm.system_key + "&is_purchase=" + vm.is_purchase + "&is_split=" + vm.is_split;
                } else if (vm.seach_type == '4') {
                    vm.searchUrl = '../../CommonView/BusinessSeach/InventorySummaryList';
                    vm.searchTitle = '型号查询';
                    vm.inventoryId = 'InventoryDetailSumList';
                    //vm.urlparameter = "seach_type=" + vm.seach_type + "&system_key=" + vm.system_key + "&is_purchase=" + vm.is_purchase + "&is_split=" + vm.is_split + "&storeage_id=" + vm.where_parameter_list[0].Condition_Value1;
                    vm.urlparameter = "seach_type=" + vm.seach_type + "&system_key=" + vm.system_key + "&is_purchase=" + vm.is_purchase + "&is_split=" + vm.is_split;
                }
                PageCommon.CurrentWindow().PageCommon.ModalOpen({
                    id: vm.inventoryId,
                    title: vm.searchTitle,
                    width: vm.width + 'px',
                    height: vm.height + 'px',
                    btn: ['添加'],
                    url: vm.searchUrl,
                    urlparameter: vm.urlparameter,
                    callBack: function (iframeId) {
                        var selectRow = PageCommon.ChildrenFrames(iframeId).PageCommon.GetTableSelectRow(vm.inventoryId);
                        if (selectRow.length != 1) {
                            PageCommon.ChildrenFrames(iframeId).PageCommon.ShowMessageRight("E2008");
                            return;
                        }
                        if (vm.is_purchase == '2') {
                            vm.purchase = selectRow[0].Is_Purchase;
                        }
                        vm.$emit('input', selectRow[0].Product_Purchase);
                        PageCommon.ChildrenFrames(iframeId).PageCommon.ModalClose();
                    }
                })
            },
            searchBtnDetail: function () {
                if (this.$element.html()) {
                    this.searchDetail = !this.searchDetail;
                    var R = $(window).outerWidth() - $('#' + this.v_id).offset().left;
                    if (R < 500) {
                        $('.' + this.v_id + '_productdetail' + '.productinfo').css({ top: 32, left: -210 });
                        $('.' + this.v_id + '_productdetail' + '.productinfo').addClass('searchleftopen').removeClass('searchrightopen');
                    } else {
                        $('.' + this.v_id + '_productdetail' + '.productinfo').css({ top: 32, left: 20 });
                        $('.' + this.v_id + '_productdetail' + '.productinfo').addClass('searchrightopen').removeClass('searchleftopen');
                    }
                }
                //else {
                //    PageCommon.ShowMessageRight("E2008");
                //}
            },
            select2: function (vlaues) {
                var vm = this
                vm.$element = $('#' + vm.v_id);
                console.log(vm.where_parameter_list)
                var select2 = vm.$element.select2({
                    ajax: {
                        url: "../../CommonView/BusinessSeach/ProductAutoCompletionData",
                        dataType: 'json',
                        "type": "post",
                        delay: 250,
                        data: function (params) {
                            var searchdata = {};
                            searchdata.System_Key = vm.system_key;
                            searchdata.Current_Page = params.page || 1;
                            searchdata.Page_Size = vm.page_size;
                            //searchdata.Input_Field = null;
                            searchdata.Input_Value = params.term;
                            searchdata.Is_Purchase = vm.is_purchase;
                            searchdata.Seach_Type = vm.seach_type;
                            searchdata.Query_Kb = vm.query_kb,
                            searchdata.Proxy_Name = vm.proxy_name;
                            searchdata.Procedure_Index = vm.procedure_index;
                            searchdata.Where_Parameter_List = vm.where_parameter_list;
                            searchdata.Is_Split = vm.is_split;
                            searchdata.Not_Inventry_Type = vm.not_inventry_type;
                            return searchdata;
                        },
                        processResults: function (data, params) {
                            params.page = params.page || 1;
                            $("#" + vm.v_id).data("datasource", data.dt);
                            return {
                                results: data.dt,
                                pagination: {
                                    more: (params.page * vm.page_size) < data.Total_Record_Count
                                }
                            };
                        },
                        cache: true
                    },
                    placeholder: '请选择',
                    maximumSelectionLength: 1,
                    //disabled: vm.Readonly == false ? false : true,
                    escapeMarkup: function (markup) { return markup; },
                    minimumInputLength: 0,
                    language: "zh-CN",
                    //打开下拉框
                    templateResult: function (repo) {
                        if (repo.loading) return "正在加载...";
                        if (vm.template_result) {
                            var rtn = vm.template_result(repo);
                            if (rtn) {
                                return rtn;
                            }
                        }
                        var markup = '';
                        if (vm.is_purchase == '2' || vm.is_purchase == '1') {
                            if (repo.Is_Purchase == '1') {
                                markup = repo.Product_Name + '@@&nbsp;&nbsp;'
                            } else {
                                markup = repo.Product_Name + '&nbsp;&nbsp;'
                            }
                        } else {
                            markup = repo.Product_Name + '&nbsp;&nbsp;'
                        }
                        if (repo.Package) {
                            markup += repo.Package + '&nbsp;&nbsp;'
                        }
                        if (repo.Brand_Name) {
                            markup += repo.Brand_Name + '&nbsp;&nbsp;'
                        }
                        if (repo.Product_Area_Name) {
                            markup += repo.Product_Area_Name + '&nbsp;&nbsp;'
                        }
                        if (repo.Unit_Name) {
                            markup += repo.Unit_Name + '&nbsp;&nbsp;'
                        }
                        if (repo.Product_Classify_Name) {
                            markup += repo.Product_Classify_Name + '&nbsp;&nbsp;'
                        }
                        if (vm.seach_type != '3') {
                            if (repo.Storeage_Name) {
                                markup += repo.Storeage_Name + '&nbsp;&nbsp;'
                            }
                        }
                        if (vm.seach_type == '4') {
                            if (repo.Goods_Locate_Name) {
                                markup += repo.Goods_Locate_Name + '&nbsp;&nbsp;'
                            }
                            if (repo.Inventry_Type_Name) {
                                markup += repo.Inventry_Type_Name + '&nbsp;&nbsp;'
                            }
                        }
                        if (vm.seach_type == '1') {
                            if (repo.Batch_Id) {
                                markup += repo.Batch_Id + '&nbsp;&nbsp;'
                            }
                            if (repo.Goods_Locate_Name) {
                                markup += repo.Goods_Locate_Name + '&nbsp;&nbsp;'
                            }
                            if (repo.Inventry_Type_Name) {
                                markup += repo.Inventry_Type_Name + '&nbsp;&nbsp;'
                            }
                        }
                        return markup;
                    },
                    //选择数据
                    templateSelection: function formatRepoSelection(repo) {
                        vm.n += 1;
                        if (!vm.btn) {//判断是否是选择下拉框数据
                            if (vm.n == 1) {
                                vm.detailInfo = repo;
                                vm.repo = true;
                                vm.$emit('input', repo.id);
                                if (vm.is_purchase == '1' || vm.is_purchase == '2') {//判断是否是外购
                                    if (repo.Product_Name) {
                                        if (repo.Is_Purchase == '1') {
                                            vm.detailInfo.New_Name = repo.Product_Name + '@@';
                                        } else {
                                            vm.detailInfo.New_Name = repo.Product_Name;
                                        }
                                    } else {
                                        vm.detailInfo.New_Name = repo.text;
                                    }
                                } else {
                                    vm.detailInfo.New_Name = repo.Product_Name || repo.text;
                                }

                                if (vm.template_selection) {
                                    vm.template_selection(vm.detailInfo);
                                }
                                //if(vm.istable == 'true'){
                                //    vm.$emit('input', repo.id);
                                //}
                            }
                        } else {
                            if (vm.n == 1) {
                                vm.btn = false;
                            }
                        }
                        setTimeout(function () {
                            $('#search' + vm.v_id + ' .select2-selection__choice').attr('title', repo.Product_Name || repo.text);
                            $('#search' + vm.v_id + ' .select2-selection__choice').css('color', vm.txt_color);
                            $('#search' + vm.v_id + ' .select2-selection__choice__remove').hide();
                        })
                        if (vm.is_purchase == '1' || vm.is_purchase == '2') {//判断是否是外购
                            if (repo.Product_Name) {
                                if (repo.Is_Purchase =='1') {
                                    vm.title = repo.Product_Name + '@@'
                                    vm.detailInfo.New_Name = vm.title;
                                    return repo.Product_Name + '@@';
                                } else {
                                    vm.title = repo.Product_Name;
                                    vm.detailInfo.New_Name = vm.title;
                                    return repo.Product_Name;
                                }
                            } else {
                                vm.title = repo.text;
                                vm.detailInfo.New_Name = vm.title;
                                return repo.text;
                            }
                        } else {
                            vm.title = repo.Product_Name || repo.text;
                            vm.detailInfo.New_Name = vm.title;
                            return repo.Product_Name || repo.text;
                        }
                    }
                });
                //vm.$element.on('change', function () {
                //    if (vm.template_selection) {
                //        if (vm.linkagebtn == 'true') {
                //            vm.template_selection(vm.detailInfo);
                //        } else {
                //            if (vm.detailInfo) {
                //                vm.template_selection(vm.detailInfo);
                //            }
                //        }
                //    }
                //})
                vm.$element.on('select2:open', function (event) {
                    //下拉框宽度
                    var w = $('.select2-dropdown--below').width();
                    $('.select2-dropdown--below').addClass('select2-dropdown-new');
                    $('.select2-dropdown--below').css('min-width', w);
                });
                vm.$element.on('select2:opening', function (event) {
                    //vm.n = 0;
                    //vm.searchDetail = false;
                    //vm.detailInfo = '';
                    //vm.$element.html('');
                    vm.$emit('input', '');
                    var $searchfield = $(this).parent().find('.select2-search__field');
                    $searchfield.show();
                });
                vm.$element.on('select2:close', function (event) {
                    var $searchfield = $(this).parent().find('.select2-search__field');
                    $searchfield.hide();
                });
            },
            searchValue: function (value) {
                var vm = this;
                if (!vm.repo) {
                    var searchdata = {};
                    searchdata.System_Key = vm.system_key;
                    if (vm.seach_type == '2') {
                        searchdata.Input_Field = vm.input_field;
                    } else {
                        searchdata.Input_Field = ['Product_Purchase'];
                    }
                    searchdata.Current_Page = 1;
                    searchdata.Input_Value = value;
                    if (vm.purchase) {
                        searchdata.Is_Purchase = vm.purchase;
                    } else {
                        searchdata.Is_Purchase = vm.is_purchase;
                    }
                    searchdata.Seach_Type = vm.seach_type;
                    searchdata.Query_Kb = vm.query_kb,
                    searchdata.Proxy_Name = vm.proxy_name;
                    searchdata.Procedure_Index = vm.procedure_index;
                    searchdata.Where_Parameter_List = vm.where_parameter_list;
                    $.ajax({
                        url: "../../CommonView/BusinessSeach/ProductAutoCompletionData",
                        "type": "post",
                        data: searchdata,
                        success: function (data) {
                            if (!data.dt || data.dt.length < 1) {
                                return;
                            }
                            vm.bindData = data.dt[0];
                            vm.n = 0;
                            vm.btn = true;
                            vm.detailInfo = vm.bindData;
                            vm.$element.html('');
                            vm.$emit('input', vm.detailInfo.id);
                            if (vm.template_selection) {
                                if (vm.detailInfo) {
                                    if (vm.is_purchase == "1" || vm.is_purchase == "2") {
                                        if (vm.detailInfo.Is_Purchase == '1') {
                                            vm.detailInfo.New_Name = vm.detailInfo.Product_Name + '@@';
                                        } else {
                                            vm.detailInfo.New_Name = vm.detailInfo.Product_Name;
                                        }
                                    } else {
                                        vm.detailInfo.New_Name = vm.detailInfo.Product_Name;
                                    }
                                    vm.template_selection(vm.detailInfo);
                                }
                            }
                            if (vm.is_purchase == "1" || vm.is_purchase == "2") {
                                if (vm.detailInfo.Is_Purchase == '1') {
                                    vm.$element.html($("<option selected = \"true\"></option>").val(vm.bindData.id).html(vm.bindData.Product_Name + "@@"));
                                } else {
                                    vm.$element.html($("<option selected = \"true\"></option>").val(vm.bindData.id).html(vm.bindData.Product_Name));
                                }
                            } else {
                                vm.$element.html($("<option selected = \"true\"></option>").val(vm.bindData.id).html(vm.bindData.Product_Name));
                            }
                        }
                    });
                } else {
                    vm.repo = false;
                }
            }
        },
        watch: {
            value: function (value) {
                var vm = this;
                if (value) {
                    vm.searchValue(value);
                } else {
                    vm.n = 0;
                    vm.searchDetail = false;
                    vm.detailInfo = '';
                    vm.$emit('input', '');
                    vm.$element.html('');
                    if (vm.template_selection) {
                        vm.template_selection(vm.detailInfo);
                    }
                }
            },
            isshade_bg: function (value) {
                if (value == true) {
                    this.Shade_Bg = true;
                    this.searchbtn = false;
                } else {
                    this.Shade_Bg = false;
                    this.searchbtn = true;
                }
            }
        },
        linkage: function (value) {
            this.select2(value);
        },
        options: function (options) {
            // update options
            $(this.$el).select2({ data: options })
        }
    })
    //地址选择
    Vue.component('erp-address', {
        template: '#temaddress',
        props: {
            v_id: {
                type: String,
                default: new Date().getTime().toString()
            },
            address: {
                type: null
            },
            checkempty: {
                type: null,
                default: false
            },
            checklength: {
                type: [Number, String]
            },
            isarea: {
                type: null,
                default: false
            },
            //是否只显示前一个input
            tableaddress: {
                type: null
            },
            //是否只读(加遮罩层)
            isshade_bg: {
                type: null,
                default: false
            },
            labcolor: {
                type: null
            },
            txtcolor: {
                type: null
            },
            //组件在编辑表格中
            istable: {
                type: null,
                default: 'false'
            },
            backdata: {
                type: Function
            },
            //历史数据
            history_data: {
                type: null
            }
        },
        data: function () {
            return {
                Shade_Bg: this.isshade_bg,
                istableaddress: true,
                //地址数据
                addressdata: [],
                //区域数据
                areaData: [],
                //区域
                areaAddress: '',
                //省
                provincesAddress: '',
                //市
                citysAddress: '',
                //区县
                districtsAddress: '',
                checkedcity: [],
                checkedistrict: [],
                //省数据
                provinceData: [],
                provinceData2: [],
                //市数据
                cityData: [],
                //区县数据
                districtData: [],
                //常用数据
                commonData: [],
                //地址信息
                Common: this.address,
                //地址坐标
                addressPoint: '',
                //    Common: {
                //    //收件人省份
                //    province: '',
                //    //收件人城市
                //    city: '',
                //    收件人区/县
                //    district: '',
                //    Address: '陕西省-西安市-雁塔区',
                //    收件人详细地址
                //    DetailAddress: '玉祥门',
                //    point_lng:'',
                //    point_lat:'',
                //    地址集合
                //    Address_Gather:''
                //}
                provinceData_A: [],
                provinceData_L: [],
                provinceData_T: [],
                provinceData_H: [],
                lab_color: this.labcolor,
                txt_color: this.txtcolor,
                //是否显示左上角历史信息图标
                ishistory: false,
                //历史数据
                historyinfo: '',
                //左上角历史图标点击后信息显示框大小
                areawidth: 'auto',
                areaheight: 'auto',
                //是否显示左上角历史信息图标
                ishistoryDetail: false,
                //历史数据
                historyinfoDetail: '',
                //左上角历史图标点击后信息显示框大小
                areawidthDetail: 'auto',
                areaheightDetail: 'auto'
            };
        },
        mounted: function () {
            var vm = this;
            vm.InitAddress();
            if (vm.tableaddress == 'false') {
                vm.istableaddress = false;
                $('#' + vm.v_id).parent().css('width', '100%');
            }
            $('#' + vm.v_id + '_dropdown' + ' .address-tit').on('click', 'li', function (e) {
                e.stopPropagation();
                var index = $(this).index();
                $(this).addClass("active").siblings().removeClass("active");
                $('#' + vm.v_id + '_dropdown' + ' .address_content').find('.tab-address').eq(index).show().siblings().hide();
            })
            if (vm.istable == 'false') {
                $('#' + vm.v_id + '_dropdown').on('click', '#' + vm.v_id, function (e) {
                    e.stopPropagation();
                    $('#' + vm.v_id + '_dropdown').find(".address").toggle();
                    $('#' + vm.v_id + '_dropdown').find('.arrow').toggleClass('open');
                    if (vm.Common.Address) {
                        $('#' + vm.v_id + '_dropdown .address_clear').show();
                    }
                })
            } else {
                $('#' + vm.v_id + '_dropdown').click(function (e) {
                    e.stopPropagation();
                    $('#' + vm.v_id + '_dropdown').find(".address").toggle();
                    $('#' + vm.v_id + '_dropdown').find('.arrow').toggleClass('open');
                    if (vm.Common.Address) {
                        $('#' + vm.v_id + '_dropdown .address_clear').show();
                    }
                })
            }
            $('#' + vm.v_id + '_dropdown').on('click', '.address', function (e) {
                e.stopPropagation();
            })
            $('#' + vm.v_id + '_dropdown').on('click', '.shade_bg', function (e) {
                e.stopPropagation();
            })
            $(window).click(function () {
                $('#' + vm.v_id + '_dropdown').find(".address").hide();
            })
        },
        methods: {
            //左上角历史图标点击事件
            historyBtn: function () {
                var vm = this;
                layer.tips(vm.historyinfo, $('#history_' + vm.v_id).parent('.outer-lg'), {
                    time: 2000,
                    area: [vm.areawidth, vm.areaheight],
                    tips: [3, '#3b9de1'] //还可配置颜色\
                });
            },
            //左上角历史图标点击事件
            historyDetailBtn: function () {
                var vm = this;
                layer.tips(vm.historyinfoDetail, $('#' + vm.v_id+'_detail').parent('.childcontorl'), {
                    time: 2000,
                    area: [vm.areawidthDetail, vm.areaheightDetail],
                    tips: [3, '#3b9de1'] //还可配置颜色\
                });
            },
            address_clear: function () {
                var vm = this;
                vm.Common.Address = '';
                vm.Common.province = '';
                vm.Common.city = ' ';
                vm.Common.district = ' ';
                vm.Common.point_lng = '';
                vm.Common.point_lat = '';
                $('#' + vm.v_id + '_dropdown .address_clear').hide();
            },
            SortArray: function (property) {
                return function (a, b) {
                    var value1 = a[property];
                    var value2 = b[property];
                    return value1 - value2;
                }
            },
            //初始化常用地址
            InitAddress: function () {
                var vm = this;
                var searchdata = {};
                searchdata.Table_Name = "B_Geography";
                searchdata.Filed_Result = ["Geography_Id", "Parent_Geography_Id", "Geography_Name", "Area_Layer", "Is_Dcm", "Is_Often_Use", "Sort", "Often_Use_Sort", 'Search_First_Alphabet'];
                searchdata.Filed_Seach = ["Geography_Id", "Parent_Geography_Id", "Geography_Name", "Area_Layer", "Is_Dcm", "Is_Often_Use", "Sort", "Often_Use_Sort", 'Search_First_Alphabet'];
                searchdata.Filed_Type = ["string", "string", "string", "string", "string", "string", "int", "int", 'string'];
                $.ajax({
                    url: "AutoCompletionData",
                    dataType: 'json',
                    type: "post",
                    data: { "contorlSeach": searchdata },
                    success: function (data) {
                        if (data.dt && data.dt.length > 0) {
                            vm.addressdata = data.dt;
                            for (var i = 0; i < vm.addressdata.length; i++) {
                                if (vm.addressdata[i].Is_Often_Use == "0") {
                                    vm.commonData.push(vm.addressdata[i]);
                                    if (vm.addressdata[i].Area_Layer == "2") {
                                        vm.provinceData2.push(vm.addressdata[i]);
                                    }
                                } else {
                                    if (vm.addressdata[i].Area_Layer == "1") {
                                        vm.areaData.push(vm.addressdata[i]);
                                    } else if (vm.addressdata[i].Area_Layer == "2") {
                                        vm.provinceData2.push(vm.addressdata[i]);
                                    }
                                }
                            }
                            vm.commonData.sort(vm.SortArray('Often_Use_Sort'));
                            vm.commonData.push({ "Geography_Name": "更多>>" });
                            vm.areaData.sort(vm.SortArray('Sort'));
                            vm.provinceData2.sort(vm.SortArray('Sort'));
                            $.each(vm.provinceData2, function (index, item) {
                                if (item.Sort < 10) {
                                    vm.provinceData_A.push(item);
                                } else if (item.Sort >= 10 && item.Sort < 19) {
                                    vm.provinceData_H.push(item);

                                } else if (item.Sort >= 19 && item.Sort <= 27) {
                                    vm.provinceData_L.push(item);
                                } else {
                                    vm.provinceData_T.push(item);

                                }
                            });
                        } else {
                            return;
                        }
                    }
                })
            },
            //区域
            ChoiceArea: function (data, index) {
                var vm = this;
                $('#' + vm.v_id + '_dropdown' + ' .area_list dd').find('a').eq(index).addClass('active').siblings().removeClass('active');
                $('#' + vm.v_id + '_dropdown' + " .procince").addClass("active").siblings().removeClass("active");
                $('#' + vm.v_id + '_province').show().siblings(".tab-address").hide();
                $('#' + vm.v_id + '_dropdown' + " .addressfor_1").hide();
                $('#' + vm.v_id + '_dropdown' + " .addressfor_2").show();
                vm.provinceData = [];
                $.each(vm.addressdata, function (index, item) {
                    if (item.Parent_Geography_Id == data.Geography_Id) {
                        vm.provinceData.push(item);
                    }
                });
                vm.provinceData.sort(vm.SortArray('Sort'));
                vm.areaAddress = data.Geography_Name
                vm.Common.Address = vm.areaAddress + "-";
                $('#' + vm.v_id + '_dropdown .address_clear').show();
                if (vm.backdata) {
                    vm.backdata(vm.Common);
                }
            },
            //常用
            ChoiceCommon: function (data, index) {
                var vm = this;
                $('#' + vm.v_id + '_dropdown' + ' .district_list dd a').removeClass('active');
                $('#' + vm.v_id + '_dropdown' + ' .common_list dd').find('a').eq(index).addClass('active').siblings().removeClass('active');
                if (data.Geography_Name == "更多>>") {
                    $('#' + vm.v_id + '_dropdown' + " .procince").addClass("active").siblings().removeClass("active");
                    $('#' + vm.v_id + '_province').show().siblings(".tab-address").hide();
                    if (vm.isarea) {
                        vm.provinceData = [];
                        $('#' + vm.v_id + '_dropdown' + " .addressfor_1").show();
                        $('#' + vm.v_id + '_dropdown' + " .addressfor_2").hide();
                    }
                } else {
                    $('#' + vm.v_id + '_dropdown .address_clear').show();
                    $('#' + vm.v_id + '_dropdown' + " .district").addClass("active").siblings().removeClass("active");
                    $('#' + vm.v_id + '_district').show().siblings(".tab-address").hide();
                    if (data.Is_Dcm == "1") {  //1表示市 0表示直辖市
                        vm.citysAddress = data.Geography_Name;
                        vm.Common.city = data.Geography_Id;
                        $.each(vm.addressdata, function (index, item) {
                            if (item.Geography_Id == data.Parent_Geography_Id) {
                                vm.provincesAddress = item.Geography_Name
                                vm.Common.province = item.Geography_Id;
                                vm.Common.district = ' ';
                                vm.Common.Address = vm.provincesAddress + "-" + vm.citysAddress;
                                var provincesdate = item;
                                if (vm.isarea) {
                                    $.each(vm.addressdata, function (index, item) {
                                        if (item.Geography_Id == provincesdate.Parent_Geography_Id) {
                                            vm.areaAddress = item.Geography_Name;
                                            vm.Common.Address = vm.areaAddress + '-' + vm.provincesAddress + "-" + vm.citysAddress;
                                        }
                                    });
                                }
                                return false
                            }
                        });
                    } else {
                        vm.provincesAddress = data.Geography_Name;
                        vm.Common.province = data.Geography_Id;
                        vm.citysAddress = '';
                        vm.Common.city = ' ';
                        vm.Common.district = ' ';
                        vm.Common.Address = vm.provincesAddress;
                        if (vm.isarea) {
                            $.each(vm.addressdata, function (index, item) {
                                if (item.Geography_Id == data.Parent_Geography_Id) {
                                    vm.areaAddress = item.Geography_Name;
                                    vm.Common.Address = vm.areaAddress + '-' + vm.provincesAddress;
                                }
                            });
                        }
                    }
                    if (vm.isarea) {
                        vm.provinceData = [];
                    }
                    vm.cityData = [];
                    vm.districtData = [];
                    $.each(this.addressdata, function (index, item) {
                        if (item.Parent_Geography_Id == data.Geography_Id) {
                            vm.districtData.push(item);
                        }
                    });
                    vm.districtData.sort(vm.SortArray('Sort'));
                    if (vm.backdata) {
                        vm.backdata(vm.Common);
                    }
                }
            },
            //选择省
            ChoiceProvince: function (data, index, item) {
                var vm = this;
                $('#' + vm.v_id + '_dropdown .address_clear').show();
                $('#' + vm.v_id + '_dropdown' + ' .city_list dd a').removeClass('active');
                if ($('#' + vm.v_id + '_dropdown' + " .addressfor_1")) {
                    $('#' + vm.v_id + '_dropdown' + ' .addressfor_1 .province_list a').removeClass('active');
                    $('#' + vm.v_id + '_dropdown' + ' .addressfor_1 .province_list').eq(item).children('dd').children('a').eq(index).addClass('active').siblings().removeClass('active');
                    //$('#' + vm.v_id + '_dropdown' + ' .province_list dd').find('a').eq(index).addClass('active').siblings().removeClass('active').end().parents('.province_list').siblings('.province_list').children('dd').children('a').removeClass('active');
                } else {
                    $('#' + vm.v_id + '_dropdown' + ' .province_list dd').find('a').eq(index).addClass('active').siblings().removeClass('active');
                }
                vm.cityData = [];
                vm.districtData = [];
                //判断是否为直辖市
                //当为省级时，跳到市级
                if (data.Is_Dcm != "0") {
                    $('#' + vm.v_id + '_dropdown' + " .city").addClass("active").siblings().removeClass("active");
                    $('#' + vm.v_id + '_city').show().siblings(".tab-address").hide();
                    $.each(vm.addressdata, function (index, item) {
                        if (item.Parent_Geography_Id == data.Geography_Id) {
                            vm.cityData.push(item);
                        }
                    });
                    vm.cityData.sort(vm.SortArray('Sort'));
                    vm.provincesAddress = data.Geography_Name;
                    vm.Common.province = data.Geography_Id;
                    vm.Common.Address = vm.provincesAddress;
                    vm.Common.district = ' ';
                    vm.Common.city = ' ';
                    if (vm.isarea) {
                        $.each(vm.addressdata, function (index, item) {
                            if (item.Geography_Id == data.Parent_Geography_Id) {
                                vm.areaAddress = item.Geography_Name;
                                vm.Common.Address = vm.areaAddress + '-' + vm.provincesAddress;
                            }
                        });
                    }
                } else {//当为直辖市时，直接跳到区县
                    vm.cityData = [];
                    $('#' + vm.v_id + '_dropdown' + " .district").addClass("active").siblings().removeClass("active");
                    $('#' + vm.v_id + '_district').show().siblings(".tab-address").hide();
                    $.each(this.addressdata, function (index, item) {
                        if (item.Parent_Geography_Id == data.Geography_Id) {
                            vm.districtData.push(item);
                        }
                    });
                    vm.provincesAddress = data.Geography_Name;
                    vm.districtData.sort(vm.SortArray('Sort'));
                    vm.citysAddress = '';
                    vm.Common.city = ' ';
                    vm.Common.province = data.Geography_Id;
                    vm.Common.district = ' ';
                    vm.Common.Address = vm.provincesAddress;
                    if (vm.isarea) {
                        $.each(vm.addressdata, function (index, item) {
                            if (item.Geography_Id == data.Parent_Geography_Id) {
                                vm.areaAddress = item.Geography_Name;
                                vm.Common.Address = vm.areaAddress + '-' + vm.provincesAddress;
                            }
                        });
                    }
                }
                if (vm.backdata) {
                    vm.backdata(vm.Common);
                }
            },
            //选择城市
            ChoiceCity: function (data, index) {
                var vm = this;
                $('#' + vm.v_id + '_dropdown' + ' .district_list dd a').removeClass('active');
                $('#' + vm.v_id + '_dropdown' + ' .city_list dd').find('a').eq(index).addClass('active').siblings().removeClass('active');
                $('#' + vm.v_id + '_dropdown' + " .district").addClass("active").siblings().removeClass("active");
                $('#' + vm.v_id + '_district').show().siblings(".tab-address").hide();
                vm.districtData = [];
                $.each(vm.addressdata, function (index, item) {
                    if (item.Parent_Geography_Id == data.Geography_Id) {
                        vm.districtData.push(item);
                    }
                });
                vm.districtData.sort(vm.SortArray('Sort'));
                vm.citysAddress = data.Geography_Name;
                vm.Common.city = data.Geography_Id;
                vm.Common.Address = vm.provincesAddress + "-" + vm.citysAddress;
                vm.Common.district = ' ';
                if (vm.isarea) {
                    vm.Common.Address = vm.areaAddress + '-' + vm.provincesAddress + "-" + vm.citysAddress;
                }
                if (vm.backdata) {
                    vm.backdata(vm.Common);
                }
            },
            //选择区县
            ChoiceDistrict: function (data, index) {
                var vm = this;
                $('#' + vm.v_id + '_dropdown' + ' .district_list dd').find('a').eq(index).addClass('active').siblings().removeClass('active');
                $('#' + vm.v_id + '_dropdown' + " .common").addClass("active").siblings().removeClass("active");
                $('#' + vm.v_id + '_common').show().siblings(".tab-address").hide();
                vm.districtsAddress = data.Geography_Name;
                vm.Common.district = data.Geography_Id;
                if (vm.citysAddress) {
                    vm.Common.Address = vm.provincesAddress + "-" + vm.citysAddress + "-" + vm.districtsAddress;
                    if (vm.isarea) {
                        vm.Common.Address = vm.areaAddress + '-' + vm.provincesAddress + "-" + vm.citysAddress + "-" + vm.districtsAddress;
                    }
                    vm.addressPoint = vm.provincesAddress + vm.citysAddress + vm.districtsAddress;
                    vm.addressMap();
                } else {
                    vm.Common.Address = vm.provincesAddress + "-" + vm.districtsAddress;
                    if (vm.isarea) {
                        vm.Common.Address = vm.areaAddress + '-' + vm.provincesAddress + "-" + vm.districtsAddress;
                    }
                    vm.addressPoint = vm.provincesAddress + vm.districtsAddress;
                    vm.addressMap();
                }
                if (vm.backdata) {
                    vm.backdata(vm.Common);
                }
                //关闭地址选择框
                $('#' + vm.v_id + '_dropdown' + " .address").hide();
            },
            addressMap: function () {
                var vm = this;
                var map = new BMap.Map('#' + vm.v_id + '_map');
                var myGeo = new BMap.Geocoder();
                myGeo.getPoint(vm.addressPoint, function (point) {
                    if (point) {
                        vm.Common.point_lng = point.lng;
                        vm.Common.point_lat = point.lat;
                    }
                });
                if (vm.backdata) {
                    vm.backdata(vm.Common);
                }
            }
        },
        watch: {
            address: function (val) {
                if (JSON.stringify(val) == "{}") {
                    this.Common = {};
                } else {
                    this.Common = val;
                }
            },
            history_data: function (value) {
                var vm = this;
                if (value.Address) {
                    if (value.Address != vm.address.Address) {
                        vm.ishistory = true;
                        vm.historyinfo = value.Address;
                    }
                } else {
                    vm.areawidth = '30px';
                    vm.areaheight = '20px';
                    if (vm.address.Address) {
                        vm.ishistory = true;
                        vm.historyinfo = '';
                    }
                }
                if (value.DetailAddress) {
                    if (value.DetailAddress != vm.address.DetailAddress) {
                        vm.ishistoryDetail = true;
                        vm.historyinfoDetail = value.DetailAddress;
                    }
                } else {
                    vm.areawidthDetail = '30px';
                    vm.areaheightDetail = '20px';
                    if (vm.address.DetailAddress) {
                        vm.ishistoryDetail = true;
                        vm.historyinfoDetail = '';
                    }
                }
            },
            isshade_bg: function (value) {
                if (value == true) {
                    this.Shade_Bg = true;
                } else {
                    this.Shade_Bg = false;
                }
            }
        }
    })
    //搜索补全
    Vue.component("erp-search", {
        template: '#temsearch',
        props: {
            value: {
                type: null
            },
            //查询字段名 （查询时使用）
            field_name: {
                type: String
            },
            //验证是否为空
            checkempty: {
                type: [Boolean, String],
                default: false
            },
            //查询类型 （查询页面时使用）
            query_type: {
                type: String
            },
            //查询表达式（查询页面时使用）
            expression: {
                type: String
            },
            //绑定类型
            bind_type: {
                type: String
            },
            //表名
            table_name: {
                type: String
            },
            //系统key
            system_key: {
                type: String
            },
            //扩展条件
            main_where: {
                type: null
            },
            //排序对象
            main_orderby: {
                type: null
            },
            //查询字表数据集合
            child_table: {
                type: null
            },
            linkage: {
                type: null
            },
            //绑定到select中的value 和  text
            filed_result: {
                type: null
            },
            filed_seach: { type: null },
            dictionary_key: {
                type: String
            },
            //每次检索最大数量
            page_size: { type: null, default: 10 },
            //要检索的字段（字符串数组）
            input_field: { type: null },
            v_id: {
                type: String,
                default: new Date().getTime().toString()
            },
            options: {
                type: Object
            },
            //下拉显示模板回调
            template_result: {
                type: Function
            }, template_selection: {
                type: Function
            },
            //是否显示搜索按钮
            search_btn: {
                type: null,
                default: 'true'
            },
            //是否只读(加遮罩层)
            isshade_bg: {
                type: null,
                default: false
            },
            disabled: {
                type: null,
            },
            btn_search_click: { type: Function },
            labcolor: {
                type: null
            },
            txtcolor: {
                type: null
            },
            control_type: {
                type: null,
                default: 'position'  // productBigClassify品名(父产品分类) brand品牌 department部门  geography父地理 industry父行业 getWay父获取途径 position职位
            },
            //历史数据
            history_data: {
                type: null
            }
        },
        data: function () {
            return {
                Shade_Bg: this.isshade_bg,
                title: '',
                repo: false,
                Search_Btn: this.search_btn != "false",
                SearchDetail_Btn: this.searchdetail_btn != "false",
                searchDetail: false,
                lab_color: this.labcolor,
                txt_color: this.txtcolor,
                search_title: '',
                search_url: "",
                search_id: "",
                search_width: "",
                search_height: "",
                search_parameter: "",
                search_name: '',
                //不联动
                $element: '',
                bindData: {},
                n: 0,
                btn: false,
                //联动
                select3: '',
                //是否显示左上角历史信息图标
                ishistory: false,
                //历史数据
                historyinfo: '',
                //左上角历史图标点击后信息显示框大小
                areawidth: 'auto',
                areaheight: 'auto'
            }
        },
        mounted: function () {
            var vm = this;
            vm.$element = $('#' + vm.v_id);
            if (!this.linkage) {
                this.select2();
            } else {
                this.init();
            }
        },
        methods: {
            //左上角历史图标点击事件
            historyBtn: function () {
                var vm = this;
                layer.tips(vm.historyinfo, $('#history_' + vm.v_id).parent('.outer'), {
                    time: 2000,
                    area: [vm.areawidth, vm.areaheight],
                    tips: [3, '#3b9de1'] //还可配置颜色\
                });
            },
            init: function () {
                var vm = this;
                vm.select3 = $('#' + vm.v_id).select2({
                    language: "zh-CN"
                });
            },
            searchBtn: function () {
                var vm = this;
                $('#' + this.v_id + 'Search').mousedown(function () {
                    $(this).find("i").css("margin-left", "5px")
                }).mouseup(function () {
                    $(this).find("i").css("margin-left", "0")
                })
                if (vm.control_type == 'department') {
                    vm.search_id = 'DepartmentList';
                    vm.search_title = '部门查询';
                    vm.search_width = '450';
                    vm.search_height = '500';
                    vm.search_url = '../../CommonView/BusinessSeach/DepartmentList';
                    vm.search_name = "id";
                } else if (vm.control_type == 'geography') {
                    vm.search_id = 'GeographyList';
                    vm.search_title = '父地理查询';
                    vm.search_width = '450';
                    vm.search_height = '500';
                    vm.search_url = '../../CommonView/BusinessSeach/GeographyList';
                    vm.search_name = "id";
                } else if (vm.control_type == 'industry') {
                    vm.search_id = 'IndustryList';
                    vm.search_title = '父行业查询';
                    vm.search_width = '450';
                    vm.search_height = '500';
                    vm.search_url = '../../CommonView/BusinessSeach/IndustryList';
                    vm.search_name = "id";
                } else if (vm.control_type == 'getWay') {
                    vm.search_id = 'GetWayList';
                    vm.search_title = '父获取途径查询';
                    vm.search_width = '450';
                    vm.search_height = '500';
                    vm.search_url = '../../CommonView/BusinessSeach/GetWayList';
                    vm.search_name = "id";
                } else if (vm.control_type == 'position') {
                    vm.search_id = 'PositionList';
                    vm.search_title = '职位查询';
                    vm.search_width = '450';
                    vm.search_height = '500';
                    vm.search_url = '../../CommonView/BusinessSeach/PositionList';
                    vm.search_name = "id";
                } else if (vm.control_type == 'productBigClassify') {
                    vm.search_id = 'ProductBigClassifyList';
                    vm.search_title = '品名查询';
                    vm.search_width = '900';
                    vm.search_height = '800';
                    vm.search_url = '../../CommonView/BusinessSeach/ProductBigClassifyList';
                    vm.search_parameter = "system_key=" + vm.system_key;
                    vm.search_name = "Product_Classify_Id";
                } else if (vm.control_type == 'brand') {
                    vm.search_id = 'BrandList';
                    vm.search_title = '品牌查询';
                    vm.search_width = '900';
                    vm.search_height = '800';
                    vm.search_url = '../../CommonView/BusinessSeach/BrandList';
                    vm.search_parameter = "system_key=" + vm.system_key;
                    vm.search_name = "Brand_Id";
                }
                PageCommon.CurrentWindow().PageCommon.ModalOpen({
                    id: vm.search_id,
                    title: vm.search_title,
                    width: vm.search_width + 'px',
                    height: vm.search_height + 'px',
                    btn: ['添加'],
                    url: vm.search_url,
                    urlparameter: vm.search_parameter,
                    callBack: function (iframeId) {
                        if (vm.control_type == 'department' || vm.control_type == 'geography' || vm.control_type == 'industry' || vm.control_type == 'getWay') {
                            var selectRow = PageCommon.ChildrenFrames(iframeId).$('#' + vm.search_id).getTSNs();
                        } else {
                            var selectRow = PageCommon.ChildrenFrames(iframeId).PageCommon.GetTableSelectRow(vm.search_id);
                        }
                        if (selectRow.length != 1) {
                            PageCommon.ChildrenFrames(iframeId).PageCommon.ShowMessageRight("E2008");
                            return;
                        }
                        vm.$emit('input', selectRow[0][vm.search_name]);
                        PageCommon.ChildrenFrames(iframeId).PageCommon.ModalClose();
                    }
                })
            },
            searchBtnDetail: function () {
                var vm = this;
                this.searchDetail = !this.searchDetail;
                var R = $(window).outerWidth() - $('#' + this.v_id).offset().left;
                if (R < 500) {
                    $('.' + vm.v_id + '_detailed' + '.provider_detailed').css({ top: 32, left: -210 });
                    $('.' + vm.v_id + '_detailed' + '.provider_detailed').addClass('searchleftopen').removeClass('searchrightopen')
                } else {
                    $('.' + vm.v_id + '_detailed' + '.provider_detailed').css({ top: 32, left: 20 });
                    $('.' + vm.v_id + '_detailed' + '.provider_detailed').addClass('searchrightopen').removeClass('searchleftopen')
                }
                if (vm.control_type == 'department') {
                    vm.search_id = 'UserAuthorityList01';
                    vm.search_title = '部门查询';
                    vm.search_width = '450';
                    vm.search_height = '500';
                    vm.search_url = '../../CommonView/BusinessSeach/DepartmentList';
                    //vm.search_parameter = "system_key=" + vm.system_key;
                    vm.search_name = "text";
                }
                PageCommon.ModalOpen({
                    id: vm.search_id,
                    title: vm.search_title,
                    width: vm.search_width + 'px',
                    height: vm.search_height + 'px',
                    btn: ['添加'],
                    url: vm.search_url,
                    urlparameter: vm.search_parameter,
                    callBack: function (iframeId) {
                        if (vm.control_type == 'department') {
                            var selectRow = PageCommon.ChildrenFrames(iframeId).$('#' + vm.search_id).getTSNs();
                        } else {
                            var selectRow = PageCommon.ChildrenFrames(iframeId).PageCommon.GetTableSelectRow(vm.search_id);
                        }
                        if (selectRow.length != 1) {
                            PageCommon.ChildrenFrames(iframeId).PageCommon.ShowMessageRight("E2008");
                            return;
                        }
                        vm.$emit('input', selectRow[0][vm.search_name]);
                        PageCommon.ChildrenFrames(iframeId).PageCommon.ModalClose();
                    }
                })
            },
            BtnSearchClick: function () {
                if (this.btn_search_click) {
                    this.btn_search_click();
                }
            },
            select2: function (vlaues) {
                var vm = this;
                var url = "AutoCompletionData";
                if (vm.bind_type == "tableName") {
                    url = "TableNameSeach";
                }
                var select2 = vm.$element.select2({
                    ajax: {
                        url: url,
                        dataType: 'json',
                        "type": "post",
                        delay: 250,
                        data: function (params) {
                            var searchdata = {};
                            searchdata.dataDictionaryKey = vm.dictionary_key;
                            searchdata.Main_Where_List = vm.main_where;
                            searchdata.Main_OrderBy_List = vm.main_orderby;
                            searchdata.Table_Name = vm.table_name;
                            searchdata.System_Key = vm.system_key;
                            searchdata.Filed_Result = vm.filed_result;
                            searchdata.Filed_Seach = vm.filed_seach;
                            searchdata.Current_Page = params.page || 1;
                            searchdata.Page_Size = vm.page_size;
                            searchdata.Input_Field = vm.input_field;
                            searchdata.Input_Value = params.term;
                            searchdata.incomplete_results = false;
                            searchdata.Child_Table_List = vm.child_table;
                            if (vlaues) {
                                searchdata.Main_Where_List = [];
                                vlaues.Expression = "03";
                                vlaues.Query_Type = vm.query_type
                                searchdata.Main_Where_List.push(vlaues);
                            }
                            return searchdata;
                        },
                        processResults: function (data, params) {
                            params.page = params.page || 1;
                            $("#" + vm.v_id).data("datasource", data.dt);
                            return {
                                results: data.dt,
                                pagination: {
                                    more: (params.page * vm.page_size) < data.Total_Record_Count
                                }
                            };
                        },
                        cache: true
                    },
                    placeholder: '请选择',
                    maximumSelectionLength: 1,
                    escapeMarkup: function (markup) { return markup; },
                    minimumInputLength: 0,
                    language: "zh-CN",
                    templateResult: function (repo) {
                        if (repo.loading) return "正在加载...";
                        if (vm.template_result) {
                            var rtn = vm.template_result(repo);
                            if (rtn) {
                                return rtn;
                            }
                        }
                        var markup = repo.name;
                        return markup;
                    },
                    //选择数据
                    templateSelection: function formatRepoSelection(repo) {
                        vm.n += 1;
                        if (!vm.btn) {//判断是否是选择下拉框数据
                            if (vm.n == 1) {
                                vm.detailInfo = repo;
                                vm.repo = true;
                                vm.$emit('input', vm.detailInfo[vm.input_field[0]]);
                                if (vm.template_selection) {
                                    vm.template_selection(vm.detailInfo);
                                }
                            }
                        } else {
                            if (vm.n == 1) {
                                vm.btn = false;
                            }
                        }
                        setTimeout(function () {
                            $('#search' + vm.v_id + ' .select2-selection__choice').attr('title', vm.repo.name);
                            $('#search' + vm.v_id + ' .select2-selection__choice').css('color', vm.txt_color);
                            $('#search' + vm.v_id + ' .select2-selection__choice__remove').hide();
                        })
                        vm.title = repo.name || repo.text;
                        return repo.name || repo.text;
                    }
                });
                vm.$element.on('select2:open', function (event) {
                    //下拉框宽度
                    var w = $('.select2-dropdown--below').width();
                    $('.select2-dropdown--below').addClass('select2-dropdown-new');
                    $('.select2-dropdown--below').css('min-width', w);
                });
                //vm.$element.on('change', function () {
                //    if (vm.template_selection) {
                //        if (vm.detailInfo) {
                //            vm.template_selection(vm.detailInfo);
                //        }
                //    }
                //})
                vm.$element.on('select2:opening', function (event) {
                    //vm.n = 0;
                    //vm.searchDetail = false;
                    //vm.detailInfo = '';
                    vm.$emit('input', '');
                    //vm.$element.html('');
                    var $searchfield = $(this).parent().find('.select2-search__field');
                    $searchfield.show();
                });
                vm.$element.on('select2:close', function (event) {
                    var $searchfield = $(this).parent().find('.select2-search__field');
                    $searchfield.hide();
                });
            },
            searchValue: function (value) {
                var vm = this;
                if (!this.repo) {
                    var vm = this;
                    var url = "AutoCompletionData";
                    if (vm.bind_type == "tableName") {
                        url = "TableNameSeach";
                    }
                    var searchdata = {};
                    searchdata.dataDictionaryKey = vm.dictionary_key;
                    searchdata.Main_Where_List = [{
                        Field_Name: vm.input_field[0],
                        Value1: vm.value,
                        Expression: "03"
                    }];
                    searchdata.Main_OrderBy_List = vm.main_orderby;
                    searchdata.Table_Name = vm.table_name;
                    searchdata.System_Key = vm.system_key;
                    searchdata.Filed_Result = vm.filed_result;
                    searchdata.Filed_Seach = vm.filed_seach;
                    searchdata.Child_Table_List = vm.child_table;

                    $.ajax({
                        url: url,
                        "type": "post",
                        data: searchdata,
                        success: function (data) {
                            if (!data.dt || data.dt.length < 1) {
                                return;
                            }
                            vm.bindData = data.dt[0];
                            vm.n = 0;
                            vm.btn = true;
                            vm.detailInfo = vm.bindData;
                            vm.$element.html('');
                            vm.$emit('input', vm.detailInfo[vm.input_field[0]]);
                            if (vm.template_selection) {
                                if (vm.detailInfo) {
                                    vm.template_selection(vm.detailInfo);
                                }
                            }
                            vm.$element.html($("<option selected = \"true\"></option>").val(value).html(vm.bindData[vm.input_field[1]]));
                        }
                    });
                } else {
                    vm.repo = false;
                }
            },
            oldSearchValue: function (value) {
                var vm = this;
                var url = "AutoCompletionData";
                if (vm.bind_type == "tableName") {
                    url = "TableNameSeach";
                }
                var searchdata = {};
                searchdata.dataDictionaryKey = vm.dictionary_key;
                searchdata.Main_Where_List = [{
                    Field_Name: vm.input_field[0],
                    Value1: value,
                    Expression: "03"
                }];
                searchdata.Main_OrderBy_List = vm.main_orderby;
                searchdata.Table_Name = vm.table_name;
                searchdata.System_Key = vm.system_key;
                searchdata.Filed_Result = vm.filed_result;
                searchdata.Filed_Seach = vm.filed_seach;
                searchdata.Child_Table_List = vm.child_table;

                $.ajax({
                    url: url,
                    "type": "post",
                    data: searchdata,
                    success: function (data) {
                        if (!data.dt || data.dt.length < 1) {
                            return;
                        }
                        vm.historyinfo = data.dt[0][vm.input_field[1]];
                    }
                });
            }
        },
        watch: {
            value: function (value) {
                var vm = this;
                if (value) {
                    vm.searchValue(value);
                } else {
                    vm.n = 0;
                    vm.detailInfo = '';
                    vm.$emit('input', '');
                    vm.$element.html('');
                    if (vm.template_selection) {
                        vm.template_selection(vm.detailInfo);
                    }
                }
            },
            history_data: function (val) {
                var $this = this;
                if (val) {
                    if (val != $this.value) {
                        $this.ishistory = true;
                        $this.oldSearchValue(val);
                    }
                } else {
                    $this.areawidth = '30px';
                    $this.areaheight = '20px';
                    if ($this.value) {
                        $this.ishistory = true;
                        $this.historyinfo = '';
                    }
                }
            },
            isshade_bg: function (value) {
                if (value == true) {
                    this.Shade_Bg = true;
                } else {
                    this.Shade_Bg = false;
                }
            },
            linkage: function (value) {
                if (value) {
                    this.select2(value);
                } else {
                    vm.n = 0;
                    vm.searchDetail = false;
                    vm.detailInfo = '';
                    vm.$emit('input', '');
                    vm.$element.html('');
                    if (vm.template_selection) {
                        vm.template_selection(vm.detailInfo);
                    }
                }
            }
        },
        options: function (options) {
            // update options
            $(this.$el).select2({ data: options })
        }
    })
</script>

