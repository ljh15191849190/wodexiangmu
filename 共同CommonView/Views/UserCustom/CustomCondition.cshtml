
@{
    Layout = "~/Views/Shared/_Index.cshtml";
}

<section class="tile">

    <!-- tile header -->
    <div class="tile-header dvd dvd-btm">

    </div>
    <!-- /tile header -->
    <!-- tile body --><div>
        <button id="px">排序 正序</button>
        <button id="px2">排序 倒叙</button>
        <button id="ycxs">隐藏/显示</button>
        <button id="gd">固定左2</button>
        @*<button id="zdy">自定义</button>*@
        <table cellpadding="0" cellspacing="0" border="0" width="100%" class="table table-striped table-bordered"
               id="example"></table>

    </div>
    <div class="tile-body">
        <div class="table-responsive">
            <table class="table table-custom" id="querycondition" width="100%">
                <thead>
                    <tr>
                        <th>index</th>
                        <th>排序</th>
                        <th>原表示名称</th>
                        <th>表示名称</th>
                        <th>显示</th>
                        <th>固定</th>

                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>0</td>
                        <td><i class="fa fa-arrows"></i></td>
                        <td>第一列</td>
                        <td></td>
                        <td>
                            <label class="checkbox checkbox-custom-alt">
                                <input class="columnsvisable" type="checkbox" checked="checked"><i></i>
                            </label>
                        </td>
                        <td>
                            <label class="checkbox checkbox-custom-alt">
                                <input class="check-all" type="checkbox"><i></i>
                            </label>
                        </td>
                    </tr>
                    <tr>
                        <td>1</td>
                        <td><i class="fa fa-arrows"></i></td>
                        <td>第二列</td>
                        <td></td>
                        <td>
                            <label class="checkbox checkbox-custom-alt">
                                <input class="columnsvisable" type="checkbox" checked="checked"><i></i>
                            </label>
                        </td>
                        <td>
                            <label class="checkbox checkbox-custom-alt">
                                <input class="check-all" type="checkbox"><i></i>
                            </label>
                        </td>
                    </tr>
                    <tr>
                        <td>2</td>
                        <td><i class="fa fa-arrows"></i></td>
                        <td>第三列</td>
                        <td></td>
                        <td>
                            <label class="checkbox checkbox-custom-alt">
                                <input class="columnsvisable" type="checkbox" checked="checked"><i></i>
                            </label>
                        </td>
                        <td>
                            <label class="checkbox checkbox-custom-alt">
                                <input class="check-all" type="checkbox"><i></i>
                            </label>
                        </td>
                    </tr>
                    <tr>
                        <td>3</td>
                        <td><i class="fa fa-arrows"></i></td>
                        <td>第四列</td>
                        <td></td>
                        <td>
                            <label class="checkbox checkbox-custom-alt">
                                <input class="columnsvisable" type="checkbox" checked="checked"><i></i>
                            </label>
                        </td>
                        <td>
                            <label class="checkbox checkbox-custom-alt">
                                <input class="check-all" type="checkbox"><i></i>
                            </label>
                        </td>
                    </tr>
                    <tr>
                        <td>4</td>
                        <td><i class="fa fa-arrows"></i></td>
                        <td>第五列</td>
                        <td></td>
                        <td>
                            <label class="checkbox checkbox-custom-alt">
                                <input class="columnsvisable" type="checkbox" checked="checked"><i></i>
                            </label>
                        </td>
                        <td>
                            <label class="checkbox checkbox-custom-alt">
                                <input class="check-all" type="checkbox"><i></i>
                            </label>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
    <!-- /tile body -->
    <button id="save">保存设置</button>
    <button id="default">恢复默认</button>
</section>

<script>
    var oTable;
    $(window).load(function () {
        var aaData = [
                    { "name": "Trident", "id": 0 },
                    { "name": "Trident1", "id": 1 },
                    { "name": "Trident2", "id": 2 },
                    { "name": "Trident3", "id": 3 }
        ]
        var self;
        var aoColumns = [
            {
                "sTitle": "第一列",
                "mData": "name"
              , "indexkey": 0
            }, {
                "sTitle": "第二列",
                "mData": "name2"
            , "indexkey": 1
            }, {
                "sTitle": "第三列",
                "mData": "name3"
              , "indexkey": 2
            }, {
                "sTitle": "第四列",
                "mData": "name4",
                "sClass": "center"
              , "indexkey": 3
            }, {
                "sTitle": "第五列",
                "mData": "name5",
                "sClass": "center"
              , "indexkey": 4
            }];
        self = this;
        self.table = $("#example").DataTable({
            "data": aaData,
            "aoColumns": aoColumns,
            colReorder: true,
            "sScrollX": "100%",
            select: true,
            "sScrollXInner":2000
        });
        $(self.table.table().container()).width(1500);
       
        //$("#px").click(function () {
        //    self.table.colReorder.order([0, 1, 2, 3, 4], true);
        //});

        //$("#px2").click(function () {
        //    self.table.colReorder.order([4, 3, 2, 1, 0], true);
        //});

        //$("#zdy").click(function () {

        //    $.modalOpen({
        //        id: "Form",
        //        title: '系统窗口',
        //        width: "500px",
        //        height: "600px",
        //        url: '../CommonView/UserCustom/CustomCondition',
        //        callBack: function (iframeId) {

        //            var formindex = top.layer.getFrameIndex($(top.frames[iframeId]).context.firstChild.name);
        //            top.layer.close(formindex);
        //        }
        //    });
        //});

        //$("#ycxs").click(function () {
        //    self.table.destroy();
        //    self.table = $("#example").DataTable({
        //        "data": aaData,
        //        "aoColumns": aoColumns,
        //        //"colReorder": {
        //        //    fixedColumnsLeft: 1
        //        //},
        //        "sScrollX": "100%"
        //    });

        //    //console.log(self.table);
        //    //self.table.draw();
        //    //var column = self.table.column(0);
        //    //column.visible(!column.visible());
        //});
        //$("#gd").click(function () {
        //    i++
        //    a.s.iLeftColumns = i;
        //    a.fnRedrawLayout();

        //    b.s.fixed = i;
        //    b.s.init.iFixedColumnsLeft = i;
        //    b.fnReset();
        //});
        oTable = $('#querycondition').DataTable({

            "paging": false,
            //"ordering": false,
            "info": false,
            bFilter: false,
            rowReorder: true,

            columnDefs: [
                { orderable: true, className: 'reorder', targets: 0, visible: false }
         , { className: 'reorder', targets: 1 }
           , { orderable: false, targets: '_all' }
            ]

        });
        var table2 = $('#querycondition');
        //重新排序列
        var columsReorder = function (data) {
            var colums = [];
            for (var i = 0; i < data.length; i++) {
                var obj = {};
                obj.index = data[i][0];
                obj.columName = data[i][2];
                colums.push(obj);
            }
            colums = _.sortBy(colums, 'index');
            var columKey = [];
            for (var i = 0; i < colums.length; i++) {
                var result = _.find(aoColumns, function (v) {
                    return v.sTitle == colums[i].columName;
                });
                columKey.push(result.indexkey);
            }
            console.log(columKey)
            self.table.colReorder.order(columKey, true);
            
        }
        $('#default').click(function () {
            //恢复列排序：
            self.table.colReorder.reset();
        })
        //设置隐藏列
        var setColumsVisible = function (index, visable) {
            var column = self.table.column(index);
            column.visible(visable);
        }
        var fixedColums = function ($this) {
            var setvalue = false;
            var arryCheck = $(".check-all");
            var index = $this.closest('tr').index();
            if ($this.prop('checked')) {
                $(".check-all").each(function (i, item) {
                    if (i < index) {
                        if (!$(".check-all").eq(i).prop("disabled")) {
                            $(".check-all").eq(i).prop('checked', true)
                        }
                    }
                })
            } else {
                console.log(444)
                $(".check-all").each(function (i, item) {
                    if (i > index) {
                        $(".check-all").eq(i).prop('checked', false)
                    }
                })
            }
        }
        //行拖动事件
        oTable.on('row-reordered', function (e, diff, edit) {
            $(".check-all").prop('checked', false)
        });
        //var nRow, checkeds;
        //var n = [];
        //选择列的显隐
        table2.on('click', '.columnsvisable', function (e) {
            //checkeds = false;
            var index = $(this).closest('tr').index();
            if ($(this).prop('checked')) {
                console.log(111)
                //checkeds = true;
                $(".check-all").eq(index).prop("disabled", false);
                //$(".check-all").each(function (i, item) {
                //    if (i > index) {
                //        if ($(".check-all").eq(i).prop('checked') == true) {
                //            console.log(i)

                //            $(".check-all").eq(index).prop('checked', true)
                //        }
                //    }
                //})
            } else {
                console.log(2222)
                //checkeds = false;
                $(".check-all").eq(index).prop("disabled", true);
                //$(".check-all").each(function (i, item) {
                //    if (i >= index) {
                //        $(".check-all").eq(i).prop('checked', false)
                //    }
                //})
                //nRow = $(this).parents('tr')[0];
                //console.log(nRow)
                //var a = {};
                //a.num = nRow;
                //a.checkeds = checkeds;
                //n.push(a)
            }
            $(".check-all").prop('checked', false)
            //$(".check-all").prop('checked', false);
            
            
        });
        //选择固定列
        table2.on('click', '.check-all',function(){
            fixedColums($(this));
        })
       
        $('#save').click(function () {
            $('.columnsvisable').each(function (i,item) {
                if ($(item).prop('checked')) {
                    setColumsVisible(oTable.row($(item).closest('tr')[0]).data()[0], true);
                } else {
                    setColumsVisible(oTable.row($(item).closest('tr')[0]).data()[0], false);
                }
            })

            //$.each(n, function (i, item) {
            //    console.log(oTable.row(item.num).data())
            //    setColumsVisible(oTable.row(item.num).data()[0], item.checkeds);
            //})
            columsReorder(oTable.data());
            var num = 0;
            $(".check-all").each(function (i, item) {
                if ($(".check-all").eq(i).prop('checked')) {
                    num =i+1
                }

            })
            //self.table.Columns["name"].ColumnName = "搜索量";
            //var b = new $.fn.dataTable.FixedColumns(self.table, {
            //    leftColumns: num
            //});
        })
        
    });
</script>